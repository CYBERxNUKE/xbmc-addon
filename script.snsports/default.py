import base64;exec base64.b64decode('if 64 - 64: i11iIiiIii
if 65 - 65: O0 / iIii1I11I1II1 % OoooooooOO - i1IIi
import xbmc , xbmcaddon , xbmcgui , xbmcplugin , urllib , urllib2 , os , re , sys , hashlib , time
import shutil
import datetime
import httplib2
import base64 , time
from HTMLParser import HTMLParser
from resources . lib . modules import plugintools
from resources . lib . modules import regex
from resources . lib . modules import checker
from resources . lib . modules import dom_parser
from resources . lib . modules import log_utils
from resources . lib . modules import cache
from resources . lib . modules import cache_dir
from resources . lib . modules import soccerstreams
from resources . lib . modules import resolvable
from resources . lib . modules import kodi
from resources . lib . modules import downloader
from resources . lib . modules import extract
if 73 - 73: II111iiii
if 22 - 22: I1IiiI * Oo0Ooo / OoO0O00 . OoOoOO00 . o0oOOo0O0Ooo / I1ii11iIi11i
I1IiI = 'script.snsports'
o0OOO = '[COLOR snow]SPORTS[/COLOR]'
iIiiiI = xbmc . translatePath ( os . path . join ( 'special://home/addons/' + I1IiI , 'fanart.jpg' ) )
Iii1ii1II11i = xbmc . translatePath ( os . path . join ( 'special://home/addons/' + I1IiI , 'icon.png' ) )
iI111iI = xbmc . translatePath ( os . path . join ( 'special://profile/addon_data/' , I1IiI ) )
IiII = xbmc . translatePath ( os . path . join ( 'special://profile/' , 'Database' ) )
iI1Ii11111iIi = xbmc . translatePath ( os . path . join ( iI111iI , 'settings.xml' ) )
i1i1II = xbmc . translatePath ( os . path . join ( iI111iI , 'testings.xml' ) )
O0oo0OO0 = xbmc . translatePath ( os . path . join ( iI111iI , 'reddit.xml' ) )
I1i1iiI1 = 'https://pastebin.com/raw/DfyrkZf6'
iiIIIII1i1iI = xbmcgui . DialogProgress ( )
o0oO0 = xbmcgui . Dialog ( )
oo00 = xbmc . translatePath ( 'special://home/addons/' + I1IiI + '/addon.xml' )
o00 = xbmc . translatePath ( 'special://home/addons/repository.echo/addon.xml' )
Oo0oO0ooo = xbmc . translatePath ( 'special://home/addons/program.plexus' )
o0oOoO00o = os . path . join ( xbmc . translatePath ( 'special://home' ) , 'cache' )
i1 = os . path . join ( xbmc . translatePath ( 'special://home' ) , 'temp' )
oOOoo00O0O = xbmc . translatePath ( os . path . join ( 'special://home/addons/plugin.video.f4mTester' ) )
i1111 = xbmc . translatePath ( os . path . join ( 'special://home/addons/script.video.F4mProxy' ) )
i11 = xbmc . translatePath ( os . path . join ( 'special://home/addons/plugin.video.SportsDevil' ) )
I11 = xbmc . translatePath ( os . path . join ( 'special://home/addons/' + I1IiI , 'resources/files/repository.txt' ) )
Oo0o0000o0o0 = xbmc . translatePath ( os . path . join ( 'special://home/addons/repository.echo' ) )
oOo0oooo00o = xbmc . translatePath ( os . path . join ( 'special://home/addons/' + I1IiI , 'resources/files' ) )
if 65 - 65: O0o * i1iIIII * I1
def O0OoOoo00o ( ) :
 if 31 - 31: i111IiI + iIIIiI11 . iII111ii
 if not os . path . exists ( oOo0oooo00o ) :
  os . makedirs ( oOo0oooo00o )
  if 3 - 3: oOo0Oo + o0oOo0Ooo0O
 if not os . path . exists ( iI111iI ) :
  os . makedirs ( iI111iI )
  if 81 - 81: I1ii11iIi11i * iII111ii * I1 - iIIIiI11 - o0oOOo0O0Ooo
 if not os . path . isfile ( O0oo0OO0 ) :
  OooO0OO = open ( O0oo0OO0 , 'w' ) ; OooO0OO . write ( '#START OF FILE#' ) ; OooO0OO . close ( )
  if 28 - 28: II111iiii
def iii11iII ( ) :
 if 42 - 42: oOo0Oo + I1ii11iIi11i
 try :
  OOoO000O0OO = cache . get ( iiI1IiI , 4 , 'https://pastebin.com/raw/n1E4q4Wi' )
  if 13 - 13: Oo0Ooo . i11iIiiIii - iIii1I11I1II1 - OoOoOO00
  file = xbmc . translatePath ( os . path . join ( 'special://home/addons/' + I1IiI , 'resources/lib/modules/soccerstreams.py' ) )
  if 6 - 6: I1IiiI / Oo0Ooo % i111IiI
  if len ( OOoO000O0OO ) > 1 :
   oo = file
   OO0O00 = open ( oo )
   ii1 = OO0O00 . read ( )
   if ii1 == OOoO000O0OO : pass
   else :
    o0oO0o00oo = open ( oo , "w" )
    o0oO0o00oo . write ( OOoO000O0OO )
    o0oO0o00oo . close ( )
    kodi . notify ( msg = 'SoccerStreams Scraper Updated.' , duration = 7500 , sound = True )
 except :
  try :
   OOoO000O0OO = cache . get ( iiI1IiI , 4 , 'https://pastebin.com/raw/n1E4q4Wi' )
   file = xbmc . translatePath ( os . path . join ( 'special://home/addons/' + I1IiI , 'resources/lib/modules/soccerstreams.py' ) )
   oo = file
   OO0O00 = open ( oo )
   ii1 = OO0O00 . read ( )
   os . remove ( file )
   o0oO0o00oo = open ( oo , "w" )
   o0oO0o00oo . write ( OOoO000O0OO )
   o0oO0o00oo . close ( )
   kodi . notify ( msg = 'SoccerStreams Scraper Updated.' , duration = 7500 , sound = True )
  except : pass
  if 32 - 32: Oo0Ooo * O0 % O0o % i111IiI . iII111ii
def o0OOOOO00o0O0 ( ) :
 if 71 - 71: o0oOo0Ooo0O % iIIIiI11 / o0oOOo0O0Ooo
 try :
  OOoO000O0OO = cache . get ( iiI1IiI , 4 , 'https://pastebin.com/raw/A9c7vLGB' )
  if 49 - 49: II111iiii % iIIIiI11 * O0
  file = xbmc . translatePath ( os . path . join ( 'special://home/addons/' + I1IiI , 'resources/lib/modules/resolvable.py' ) )
  if 89 - 89: O0o + Oo0Ooo
  if len ( OOoO000O0OO ) > 1 :
   oo = file
   OO0O00 = open ( oo )
   ii1 = OO0O00 . read ( )
   if ii1 == OOoO000O0OO : pass
   else :
    o0oO0o00oo = open ( oo , "w" )
    o0oO0o00oo . write ( OOoO000O0OO )
    o0oO0o00oo . close ( )
    kodi . notify ( msg = 'Resolver Checker Updated.' , duration = 7500 , sound = True )
 except :
  try :
   OOoO000O0OO = cache . get ( iiI1IiI , 4 , 'https://pastebin.com/raw/A9c7vLGB' )
   file = xbmc . translatePath ( os . path . join ( 'special://home/addons/' + I1IiI , 'resources/lib/modules/resolvable.py' ) )
   oo = file
   OO0O00 = open ( oo )
   ii1 = OO0O00 . read ( )
   os . remove ( file )
   o0oO0o00oo = open ( oo , "w" )
   o0oO0o00oo . write ( OOoO000O0OO )
   o0oO0o00oo . close ( )
   kodi . notify ( msg = 'Resolver Checker Updated.' , duration = 7500 , sound = True )
  except : pass
  if 3 - 3: i1IIi / I1IiiI % I1 * i11iIiiIii / O0 * I1
def III1ii1iII ( id ) :
 if 54 - 54: I1IiiI % II111iiii % II111iiii
 iI1 = IiII
 for i11Iiii , iI , I1i1I1II in os . walk ( iI1 ) :
  iI [ : ] = [ i1IiIiiI for i1IiIiiI in iI if 'Addons' in i1IiIiiI ]
  list = [ I1I . replace ( 'Addons' , '' ) . replace ( '.db' , '' ) for I1I in I1i1I1II if ( 'Addons' in I1I ) and ( I1I . endswith ( '.db' ) ) ]
  list = [ int ( oOO00oOO ) for oOO00oOO in list ] ; list . sort ( )
  OoOo = xbmc . translatePath ( os . path . join ( IiII , ( 'Addons%s.db' % ( str ( list [ - 1 ] ) ) ) ) )
  if 18 - 18: i11iIiiIii
 import sqlite3
 Ii11I = sqlite3 . connect ( OoOo )
 OOO0OOO00oo = Ii11I . cursor ( )
 if 31 - 31: II111iiii - i1iIIII . oOo0Oo % OoOoOO00 - O0
 OOO0OOO00oo . execute ( "SELECT enabled FROM installed WHERE addonID = '%s'" % ( id ) )
 if 4 - 4: II111iiii / o0oOo0Ooo0O . iIIIiI11
 for O0oo0OO0oOOOo in OOO0OOO00oo . fetchone ( ) :
  return O0oo0OO0oOOOo
  if 35 - 35: iII111ii % I1IiiI
def o0OOoo0OO0OOO ( id ) :
 if 19 - 19: O0o % i1IIi % o0oOOo0O0Ooo
 try :
  iI1 = IiII
  for i11Iiii , iI , I1i1I1II in os . walk ( iI1 ) :
   iI [ : ] = [ i1IiIiiI for i1IiIiiI in iI if 'Addons' in i1IiIiiI ]
   list = [ I1I . replace ( 'Addons' , '' ) . replace ( '.db' , '' ) for I1I in I1i1I1II if ( 'Addons' in I1I ) and ( I1I . endswith ( '.db' ) ) ]
   list = [ int ( oOO00oOO ) for oOO00oOO in list ] ; list . sort ( )
   OoOo = xbmc . translatePath ( os . path . join ( IiII , ( 'Addons%s.db' % ( str ( list [ - 1 ] ) ) ) ) )
   if 93 - 93: iIii1I11I1II1 % O0o * i1IIi
  import sqlite3
  Ii11I = sqlite3 . connect ( OoOo )
  OOO0OOO00oo = Ii11I . cursor ( )
  if 16 - 16: O0 - oOo0Oo * iIii1I11I1II1 + iIIIiI11
  Ii11iII1 = '1'
  Oo0O0O0ooO0O = """ UPDATE installed SET enabled= ? WHERE addonID = ? """
  OOO0OOO00oo . execute ( Oo0O0O0ooO0O , ( str ( Ii11iII1 ) , str ( id ) ) )
  Ii11I . commit ( )
  if 15 - 15: I1ii11iIi11i + OoOoOO00 - OoooooooOO / i1iIIII
  o0oO0 . ok ( o0OOO , id + ' has been enabled!' , 'Thank you for using Sports.' )
  xbmc . executebuiltin ( "Container.Refresh" )
  xbmc . executebuiltin ( "UpdateAddonRepos" )
  xbmc . executebuiltin ( "UpdateLocalAddons" )
 except :
  o0oO0 . ok ( o0OOO , 'We were unable to enable ' + id + '. You can try to enable this manually in your Addons if you wish.' )
  quit ( )
  if 58 - 58: i11iIiiIii % I1
  if 71 - 71: i1iIIII + o0oOo0Ooo0O % i11iIiiIii + I1ii11iIi11i - iII111ii
def oO0OOoO0 ( ) :
 if 34 - 34: iII111ii - iII111ii * I1IiiI + i111IiI % iII111ii
 i111IiI1I = 'http://www.wheresthematch.com/tv/home.asp'
 OO0O00 = iiI1IiI ( i111IiI1I ) . replace ( '\r' , '' ) . replace ( '\n' , '' ) . replace ( '\t' , '' )
 O0iII = re . compile ( 'href="http://www.wheresthematch.com/fixtures/(.+?).asp.+?class="">(.+?)</em> <em class="">v</em> <em class="">(.+?)</em>.+?time-channel ">(.+?)</span>' ) . findall ( OO0O00 )
 for o0 , ooOooo000oOO , Oo0oOOo , Oo0OoO00oOO0o in O0iII :
  OOO00O , OOoOO0oo0ooO = Oo0OoO00oOO0o . split ( " on " )
  O0o0O00Oo0o0 ( '[COLOR yellow]' + ooOooo000oOO + '[COLOR red] vs [COLOR yellow]' + Oo0oOOo + '[COLOR snow] - [COLOR aqua]' + OOO00O + ' [/COLOR]' , '' , '' , Iii1ii1II11i , iIiiiI , '' )
  #addLink('[COLOR blue][B]Watch on '+b+'[/B][/COLOR]','','',icon,fanarts,'')
  #addLink('==========================================','','',icon,fanarts,'')
  if 87 - 87: o0oOo0Ooo0O * Oo0Ooo % i11iIiiIii % OoOoOO00 - i1iIIII
 O0ooo0O0oo0 = oo0oOo ( "list" )
 xbmc . executebuiltin ( O0ooo0O0oo0 )
 if 89 - 89: OoOoOO00
def oo0oOo ( name ) :
 if 68 - 68: OoO0O00 * OoooooooOO % O0 + OoO0O00 + o0oOo0Ooo0O
 i11i1I1 = ii1I ( )
 if 67 - 67: i11iIiiIii - i1IIi % I1ii11iIi11i . O0
 if name == "list" :
  if i11i1I1 == "Jarvis" :
   o0oo = '"Container.SetViewMode(50)"'
  elif i11i1I1 == "Krypton" :
   o0oo = '"Container.SetViewMode(55)"'
  else : o0oo = '"Container.SetViewMode(50)"'
 elif name == "thumbs" :
  if i11i1I1 == "Jarvis" :
   o0oo = '"Container.SetViewMode(500)"'
  elif i11i1I1 == "Krypton" :
   o0oo = '"Container.SetViewMode(52)"'
  else : o0oo = '"Container.SetViewMode(500)"'
 else :
  if i11i1I1 == "Jarvis" :
   o0oo = '"Container.SetViewMode(50)"'
  elif i11i1I1 == "Krypton" :
   o0oo = '"Container.SetViewMode(55)"'
  else : o0oo = '"Container.SetViewMode(50)"'
  if 91 - 91: iII111ii
 return o0oo
 if 15 - 15: II111iiii
def ii1I ( ) :
 if 18 - 18: i11iIiiIii . i1IIi % OoooooooOO / O0
 OO0OoO0o00 = xbmc . getInfoLabel ( "System.BuildVersion" )
 ooOO0O0ooOooO = float ( OO0OoO0o00 [ : 4 ] )
 if ooOO0O0ooOooO >= 11.0 and ooOO0O0ooOooO <= 11.9 :
  oOOOo00O00oOo = 'Eden'
 elif ooOO0O0ooOooO >= 12.0 and ooOO0O0ooOooO <= 12.9 :
  oOOOo00O00oOo = 'Frodo'
 elif ooOO0O0ooOooO >= 13.0 and ooOO0O0ooOooO <= 13.9 :
  oOOOo00O00oOo = 'Gotham'
 elif ooOO0O0ooOooO >= 14.0 and ooOO0O0ooOooO <= 14.9 :
  oOOOo00O00oOo = 'Helix'
 elif ooOO0O0ooOooO >= 15.0 and ooOO0O0ooOooO <= 15.9 :
  oOOOo00O00oOo = 'Isengard'
 elif ooOO0O0ooOooO >= 16.0 and ooOO0O0ooOooO <= 16.9 :
  oOOOo00O00oOo = 'Jarvis'
 elif ooOO0O0ooOooO >= 17.0 and ooOO0O0ooOooO <= 17.9 :
  oOOOo00O00oOo = 'Krypton'
 else : oOOOo00O00oOo = "Decline"
 if 34 - 34: O0 + i1iIIII + Oo0Ooo
 return oOOOo00O00oOo
 if 16 - 16: iIIIiI11 . O0 . iIIIiI11 % I1ii11iIi11i - I1IiiI - iIii1I11I1II1
def I111IIIiIii ( ) :
 I111IIIiIii = xbmc . translatePath ( os . path . join ( 'special://home/addons' , 'plugin.video.SportsDevil' ) )
 oO0000OOo00 = xbmc . translatePath ( os . path . join ( 'special://home/addons' , 'plugin.video.SportsDevil-master' ) )
 iI1 = xbmc . translatePath ( os . path . join ( 'special://home/addons' , 'packages' ) )
 iiIi1IIiIi = xbmc . translatePath ( os . path . join ( 'special://home/addons' ) )
 if 75 - 75: I1IiiI + Oo0Ooo
 OoooO0oO = xbmcgui . Dialog ( ) . yesno ( o0OOO , '[B][COLOR red]This option will remove and reinstall Sports Devil !![/COLOR][/B]' , 'Would you like to continue?' , yeslabel = '[B][COLOR yellow]YES[/COLOR][/B]' , nolabel = '[B][COLOR red]NO[/COLOR][/B]' )
 if OoooO0oO == 0 :
  sys . exit ( 1 )
 o0oO0 = xbmcgui . Dialog ( )
 if os . path . exists ( I111IIIiIii ) :
  shutil . rmtree ( I111IIIiIii )
 elif os . path . exists ( oO0000OOo00 ) :
  shutil . rmtree ( oO0000OOo00 )
 i1iIi = xbmc . translatePath ( 'special://home/addons/packages' )
 for i11Iiii , iI , I1i1I1II in os . walk ( i1iIi ) :
  ooOOoooooo = 0
  ooOOoooooo += len ( I1i1I1II )
 for i11Iiii , iI , I1i1I1II in os . walk ( i1iIi ) :
  ooOOoooooo = 0
  ooOOoooooo += len ( I1i1I1II )
  if ooOOoooooo > 0 :
   for OooO0OO in I1i1I1II :
    os . unlink ( os . path . join ( i11Iiii , OooO0OO ) )
   for i1IiIiiI in iI :
    shutil . rmtree ( os . path . join ( i11Iiii , i1IiIiiI ) )
 if not os . path . exists ( iI1 ) :
  os . makedirs ( iI1 )
 i111IiI1I = ( 'https://github.com/Colossal1/plugin.video.SportsDevil/archive/master.zip' )
 iiIIIII1i1iI = xbmcgui . DialogProgress ( )
 iiIIIII1i1iI . create ( o0OOO , "" , "" , "Installing Sports Devil" )
 II1I = os . path . join ( iI1 , 'addon.zip' )
 if 84 - 84: iII111ii . i11iIiiIii . iII111ii * I1ii11iIi11i - I1
 downloader . download ( i111IiI1I , II1I , iiIIIII1i1iI )
 ii = xbmc . translatePath ( os . path . join ( 'special://home' , 'addons' ) )
 time . sleep ( 2 )
 iiIIIII1i1iI . update ( 0 , "" , "Extracting Zip Please Wait" , "" )
 extract . all ( II1I , ii , iiIIIII1i1iI )
 try :
  os . remove ( II1I )
 except :
  pass
 os . rename ( os . path . join ( iiIi1IIiIi , oO0000OOo00 ) , os . path . join ( iiIi1IIiIi , I111IIIiIii ) )
 xbmc . executebuiltin ( "UpdateAddonRepos" )
 xbmc . executebuiltin ( "UpdateLocalAddons" )
 if 81 - 81: oOo0Oo % iIIIiI11 . I1ii11iIi11i / o0oOOo0O0Ooo
 o0oO0 . ok ( o0OOO , "[COLOR yellow]The Sports Devil plugin should now be fixed. If you have any issues please turn AUTO UPDATE OFF on Sports Devil and run this fix again.[/COLOR]" )
 quit ( )
 if 40 - 40: I1IiiI + OoooooooOO
def o0O000oo ( ) :
 IIi1I11I1II ( '[B][COLOR red]*[COLOR snow]Todays Sports Schedule[COLOR red]*[/COLOR][/B]' , 'null' , 1235 , Iii1ii1II11i , iIiiiI , '' )
 try :
  OooOoooOo = plugintools . get_setting ( "check_rtmp" )
  if OooOoooOo == 'true' :
   ii11IIII11I = III1ii1iII ( 'inputstream.rtmp' )
   if ii11IIII11I == 0 :
    O0o0O00Oo0o0 ( '[COLOR red][B]RTMP Input is Disabled. Click here to Enable.[/B][/COLOR]' , 'inputstream.rtmp' , 996 , Iii1ii1II11i , iIiiiI , '' )
   OOooo = III1ii1iII ( 'inputstream.adaptive' )
   if OOooo == 0 :
    O0o0O00Oo0o0 ( '[COLOR red][B]InputStream Adaptive is Disabled. Click here to Enable.[/B][/COLOR]' , 'inputstream.adaptive' , 996 , Iii1ii1II11i , iIiiiI , '' )
 except : pass
 if 90 - 90: o0oOOo0O0Ooo % i1IIi / OoO0O00
 if os . path . isfile ( i1i1II ) :
  IIi = I1i1iiI1
  OO0O00 = open ( i1i1II )
  i1Iii1i1I = OO0O00 . read ( )
  i1Iii1i1I = i1Iii1i1I . replace ( '\n' , '' ) . replace ( '\r' , '' ) . replace ( '<fanart></fanart>' , '<fanart>x</fanart>' ) . replace ( '<thumbnail></thumbnail>' , '<thumbnail>x</thumbnail>' ) . replace ( '<utube>' , '<link>https://www.youtube.com/watch?v=' ) . replace ( '</utube>' , '</link>' )
  O0iII = re . compile ( '<item>(.+?)</item>' ) . findall ( i1Iii1i1I )
 else :
  iii11iII ( )
  o0OOOOO00o0O0 ( )
  OOoO00 = cache . get ( IiI111111IIII , 4 , I1i1iiI1 )
  IIi = I1i1iiI1
  OOoO00 = OOoO00 . replace ( '\n' , '' ) . replace ( '\r' , '' ) . replace ( '<fanart></fanart>' , '<fanart>x</fanart>' ) . replace ( '<thumbnail></thumbnail>' , '<thumbnail>x</thumbnail>' ) . replace ( '<utube>' , '<link>https://www.youtube.com/watch?v=' ) . replace ( '</utube>' , '</link>' )
  O0iII = re . compile ( '<item>(.+?)</item>' ) . findall ( OOoO00 )
  if 37 - 37: oOo0Oo / OoOoOO00
 for i1I1iI1iIi111i in O0iII :
  if 44 - 44: i1IIi % II111iiii + I1
  if "<notice>" in i1I1iI1iIi111i :
   I1I = re . compile ( '<title>(.+?)</title>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   i111IiI1I = re . compile ( '<notice>(.+?)</notice>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   I1I1I = re . compile ( '<thumbnail>(.+?)</thumbnail>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   OoOO000 = re . compile ( '<fanart>(.+?)</fanart>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   O0o0O00Oo0o0 ( I1I , i111IiI1I , 995 , I1I1I , OoOO000 , '' )
   if 14 - 14: iII111ii - I1ii11iIi11i
  elif "<247hd>" in i1I1iI1iIi111i :
   I1I = re . compile ( '<title>(.+?)</title>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   i111IiI1I = re . compile ( '<247hd>(.+?)</247hd>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   I1I1I = re . compile ( '<thumbnail>(.+?)</thumbnail>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   OoOO000 = re . compile ( '<fanart>(.+?)</fanart>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   IIi1I11I1II ( I1I , i111IiI1I , 312 , I1I1I , OoOO000 , '' )
   if 11 - 11: II111iiii * II111iiii % iIii1I11I1II1 * oOo0Oo + OoOoOO00 / I1IiiI
  elif "<reddit>" in i1I1iI1iIi111i :
   I1I = re . compile ( '<title>(.+?)</title>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   i111IiI1I = re . compile ( '<reddit>(.+?)</reddit>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   I1I1I = re . compile ( '<thumbnail>(.+?)</thumbnail>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   OoOO000 = re . compile ( '<fanart>(.+?)</fanart>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   IIi1I11I1II ( I1I , 'url' , 320 , I1I1I , OoOO000 , '' )
   if 3 - 3: o0oOOo0O0Ooo
  elif "<reddit_link>" in i1I1iI1iIi111i :
   I1I = re . compile ( '<title>(.+?)</title>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   i111IiI1I = re . compile ( '<reddit_link>(.+?)</reddit_link>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   I1I1I = re . compile ( '<thumbnail>(.+?)</thumbnail>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   OoOO000 = re . compile ( '<fanart>(.+?)</fanart>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   IIi1I11I1II ( I1I , i111IiI1I , 319 , I1I1I , OoOO000 , '' )
   if 24 - 24: i11iIiiIii + iIIIiI11 * i111IiI - II111iiii . i1iIIII % iIii1I11I1II1
  elif "<redditevents>" in i1I1iI1iIi111i :
   I1I = re . compile ( '<title>(.+?)</title>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   i111IiI1I = re . compile ( '<redditevents>(.+?)</redditevents>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   I1I1I = re . compile ( '<thumbnail>(.+?)</thumbnail>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   OoOO000 = re . compile ( '<fanart>(.+?)</fanart>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   IIi1I11I1II ( I1I , i111IiI1I , 317 , I1I1I , OoOO000 , '' )
   if 71 - 71: O0 . iIIIiI11 / o0oOOo0O0Ooo
  elif "<reddit_suggested>" in i1I1iI1iIi111i :
   I1I = re . compile ( '<title>(.+?)</title>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   i111IiI1I = re . compile ( '<reddit_suggested>(.+?)</reddit_suggested>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   I1I1I = re . compile ( '<thumbnail>(.+?)</thumbnail>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   OoOO000 = re . compile ( '<fanart>(.+?)</fanart>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   IIi1I11I1II ( I1I , i111IiI1I , 322 , I1I1I , OoOO000 , '' )
   if 73 - 73: II111iiii . i11iIiiIii / i111IiI + OoOoOO00
  elif "<goaltogoals>" in i1I1iI1iIi111i :
   I1I = re . compile ( '<title>(.+?)</title>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   i111IiI1I = re . compile ( '<goaltogoals>(.+?)</goaltogoals>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   I1I1I = re . compile ( '<thumbnail>(.+?)</thumbnail>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   OoOO000 = re . compile ( '<fanart>(.+?)</fanart>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   IIi1I11I1II ( I1I , i111IiI1I , 314 , I1I1I , OoOO000 , '' )
   if 12 - 12: i11iIiiIii - i1IIi - OoO0O00 . i1IIi - i1iIIII + O0
  elif "<hesgoal>" in i1I1iI1iIi111i :
   I1I = re . compile ( '<title>(.+?)</title>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   I1I1I = re . compile ( '<thumbnail>(.+?)</thumbnail>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   OoOO000 = re . compile ( '<fanart>(.+?)</fanart>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   IIi1I11I1II ( I1I , 'url' , 205 , I1I1I , OoOO000 , '' )
   if 98 - 98: o0oOOo0O0Ooo
  elif "<livescores>" in i1I1iI1iIi111i :
   I1I = re . compile ( '<title>(.+?)</title>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   I1I1I = re . compile ( '<thumbnail>(.+?)</thumbnail>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   OoOO000 = re . compile ( '<fanart>(.+?)</fanart>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   IIi1I11I1II ( I1I , 'url' , 80 , I1I1I , OoOO000 , '' )
   if 51 - 51: Oo0Ooo - O0o + II111iiii * i111IiI . I1 + O0o
  elif "<livetv>" in i1I1iI1iIi111i :
   I1I = re . compile ( '<title>(.+?)</title>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   IIi1I11I1II ( I1I , 'url' , 313 , Iii1ii1II11i , iIiiiI , '' )
   if 78 - 78: i11iIiiIii / iIIIiI11 - i111IiI / i1iIIII + O0o
  elif "<fixtureoverview>" in i1I1iI1iIi111i :
   I1I = re . compile ( '<title>(.+?)</title>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   I1I1I = re . compile ( '<thumbnail>(.+?)</thumbnail>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   OoOO000 = re . compile ( '<fanart>(.+?)</fanart>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   IIi1I11I1II ( I1I , 'url' , 70 , I1I1I , OoOO000 , '' )
   if 82 - 82: i111IiI
  elif "<predictions>" in i1I1iI1iIi111i :
   I1I = re . compile ( '<title>(.+?)</title>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   I1I1I = re . compile ( '<thumbnail>(.+?)</thumbnail>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   OoOO000 = re . compile ( '<fanart>(.+?)</fanart>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   IIi1I11I1II ( I1I , 'url' , 40 , I1I1I , OoOO000 , '' )
   if 46 - 46: OoooooooOO . i11iIiiIii
  elif "<oddschecker>" in i1I1iI1iIi111i :
   I1I = re . compile ( '<title>(.+?)</title>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   I1I1I = re . compile ( '<thumbnail>(.+?)</thumbnail>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   OoOO000 = re . compile ( '<fanart>(.+?)</fanart>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   IIi1I11I1II ( I1I , 'url' , 50 , I1I1I , OoOO000 , '' )
   if 94 - 94: o0oOOo0O0Ooo * i111IiI / Oo0Ooo / i111IiI
  elif "<formguide>" in i1I1iI1iIi111i :
   I1I = re . compile ( '<title>(.+?)</title>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   I1I1I = re . compile ( '<thumbnail>(.+?)</thumbnail>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   OoOO000 = re . compile ( '<fanart>(.+?)</fanart>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   IIi1I11I1II ( I1I , 'url' , 60 , I1I1I , OoOO000 , '' )
   if 87 - 87: Oo0Ooo . iII111ii
  elif "<mamahd>" in i1I1iI1iIi111i :
   I1I = re . compile ( '<title>(.+?)</title>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   i111IiI1I = re . compile ( '<mamahd>(.+?)</mamahd>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   I1I1I = re . compile ( '<thumbnail>(.+?)</thumbnail>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   OoOO000 = re . compile ( '<fanart>(.+?)</fanart>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   IIi1I11I1II ( I1I , i111IiI1I , 310 , I1I1I , OoOO000 , '' )
   if 75 - 75: o0oOo0Ooo0O + OoOoOO00 + o0oOOo0O0Ooo * I1 % O0o . iIIIiI11
  elif "<soccerstreams>" in i1I1iI1iIi111i :
   I1I = re . compile ( '<title>(.+?)</title>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   i111IiI1I = re . compile ( '<soccerstreams>(.+?)</soccerstreams>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   I1I1I = re . compile ( '<thumbnail>(.+?)</thumbnail>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   OoOO000 = re . compile ( '<fanart>(.+?)</fanart>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   IIi1I11I1II ( I1I , i111IiI1I , 307 , I1I1I , OoOO000 , '' )
   if 55 - 55: i1iIIII . I1IiiI
  elif "<bigsports>" in i1I1iI1iIi111i :
   I1I = re . compile ( '<title>(.+?)</title>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   i111IiI1I = re . compile ( '<bigsports>(.+?)</bigsports>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   I1I1I = re . compile ( '<thumbnail>(.+?)</thumbnail>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   OoOO000 = re . compile ( '<fanart>(.+?)</fanart>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   IIi1I11I1II ( I1I , i111IiI1I , 301 , I1I1I , OoOO000 , '' )
   if 61 - 61: Oo0Ooo % iII111ii . Oo0Ooo
  elif "<cricbox>" in i1I1iI1iIi111i :
   I1I = re . compile ( '<title>(.+?)</title>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   i111IiI1I = re . compile ( '<cricbox>(.+?)</cricbox>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   I1I1I = re . compile ( '<thumbnail>(.+?)</thumbnail>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   OoOO000 = re . compile ( '<fanart>(.+?)</fanart>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   IIi1I11I1II ( I1I , i111IiI1I , 302 , I1I1I , OoOO000 , '' )
   if 100 - 100: oOo0Oo * O0
  elif "<cricfree>" in i1I1iI1iIi111i :
   I1I = re . compile ( '<title>(.+?)</title>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   i111IiI1I = re . compile ( '<cricfree>(.+?)</cricfree>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   I1I1I = re . compile ( '<thumbnail>(.+?)</thumbnail>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   OoOO000 = re . compile ( '<fanart>(.+?)</fanart>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   IIi1I11I1II ( I1I , i111IiI1I , 303 , I1I1I , OoOO000 , '' )
   if 64 - 64: i1iIIII % iIii1I11I1II1 * O0o
  elif "<sports4u>" in i1I1iI1iIi111i :
   I1I = re . compile ( '<title>(.+?)</title>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   i111IiI1I = re . compile ( '<sports4u>(.+?)</sports4u>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   I1I1I = re . compile ( '<thumbnail>(.+?)</thumbnail>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   OoOO000 = re . compile ( '<fanart>(.+?)</fanart>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   IIi1I11I1II ( I1I , i111IiI1I , 304 , I1I1I , OoOO000 , '' )
   if 79 - 79: O0
  elif "<sports4ulive>" in i1I1iI1iIi111i :
   I1I = re . compile ( '<title>(.+?)</title>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   I1I1I = re . compile ( '<thumbnail>(.+?)</thumbnail>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   OoOO000 = re . compile ( '<fanart>(.+?)</fanart>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   IIi1I11I1II ( I1I , "url" , 305 , I1I1I , OoOO000 , '' )
   if 78 - 78: I1ii11iIi11i + i1iIIII - oOo0Oo
  elif '<fightclubsearch>' in i1I1iI1iIi111i :
   I1I = re . compile ( '<title>(.+?)</title>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   i111IiI1I = re . compile ( '<fightclubsearch>(.+?)</fightclubsearch>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   i111IiI1I = 'true|SPLIT|' + i111IiI1I
   IIi1I11I1II ( I1I , i111IiI1I , 222 , Iii1ii1II11i , iIiiiI )
   if 38 - 38: o0oOOo0O0Ooo - O0o + iIii1I11I1II1 / OoOoOO00 % Oo0Ooo
  elif '<fightclubterms>' in i1I1iI1iIi111i :
   I1I = re . compile ( '<title>(.+?)</title>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   i111IiI1I = re . compile ( '<fightclubterms>(.+?)</fightclubterms>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   i111IiI1I = 'false|SPLIT|' + i111IiI1I + '|SPLIT|' + IIi + '|SPLIT|' + I1I
   IIi1I11I1II ( I1I , i111IiI1I , 222 , Iii1ii1II11i , iIiiiI )
   if 57 - 57: OoO0O00 / o0oOo0Ooo0O
  elif '<search>display</search>' in i1I1iI1iIi111i :
   I1I = re . compile ( '<title>(.+?)</title>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   IIi1I11I1II ( I1I , I1i1iiI1 , 100 , Iii1ii1II11i , iIiiiI , '' )
   if 29 - 29: iIii1I11I1II1 + OoOoOO00 * OoO0O00 * i1iIIII . I1IiiI * I1IiiI
  elif '<arenavision>display</arenavision>' in i1I1iI1iIi111i :
   I1I = re . compile ( '<title>(.+?)</title>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   if os . path . exists ( Oo0oO0ooo ) : IIi1I11I1II ( I1I , I1i1iiI1 , 95 , Iii1ii1II11i , iIiiiI , '' )
   else : O0o0O00Oo0o0 ( '[COLOR darkgray]' + I1I + ' - INSTALL PLEXUS TO USE.[/COLOR]' , I1i1iiI1 , 999 , Iii1ii1II11i , iIiiiI , '' )
   if 7 - 7: iII111ii * oOo0Oo % i111IiI - o0oOOo0O0Ooo
  elif '<vip>' in i1I1iI1iIi111i :
   I1I = re . compile ( '<title>(.+?)</title>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   IIi1I11I1II ( I1I , 'none' , 24 , Iii1ii1II11i , iIiiiI )
   if 13 - 13: i111IiI . i11iIiiIii
  elif '<divider>null</divider>' in i1I1iI1iIi111i :
   I1I = re . compile ( '<title>(.+?)</title>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   O0o0O00Oo0o0 ( I1I , I1i1iiI1 , 999 , Iii1ii1II11i , iIiiiI )
   if 56 - 56: I1ii11iIi11i % O0 - I1IiiI
  elif '<m3ulists>display</m3ulists>' in i1I1iI1iIi111i :
   I1I = re . compile ( '<title>(.+?)</title>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   IIi1I11I1II ( I1I , I1i1iiI1 , 11 , Iii1ii1II11i , iIiiiI )
   if 100 - 100: i111IiI - O0 % O0o * i1iIIII + I1IiiI
  elif '<plexus>' in i1I1iI1iIi111i :
   I1I = re . compile ( '<title>(.+?)</title>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   I1I1I = re . compile ( '<thumbnail>(.+?)</thumbnail>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   try :
    OoOO000 = re . compile ( '<fanart>(.+?)</fanart>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   except : OoOO000 = iIiiiI
   if os . path . exists ( Oo0oO0ooo ) : O0o0O00Oo0o0 ( I1I , IIi + 'NOTPLAY' , 7 , Iii1ii1II11i , OoOO000 )
   else : O0o0O00Oo0o0 ( '[COLOR darkgray]' + I1I + ' - INSTALL PLEXUS TO USE.[/COLOR]' , I1i1iiI1 , 999 , I1I1I , OoOO000 , '' )
   if 88 - 88: OoooooooOO - OoO0O00 * O0 * OoooooooOO . OoooooooOO
  elif '<rutubeplaylist>' in i1I1iI1iIi111i :
   I1I = re . compile ( '<title>(.+?)</title>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   I1I1I = re . compile ( '<thumbnail>(.+?)</thumbnail>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   try :
    OoOO000 = re . compile ( '<fanart>(.+?)</fanart>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   except : OoOO000 = iIiiiI
   IIi1I11I1II ( I1I , IIi , 90 , I1I1I , OoOO000 )
   if 33 - 33: oOo0Oo + iIIIiI11 * O0o / iIii1I11I1II1 - I1IiiI
  elif '<folder>' in i1I1iI1iIi111i :
   O0oO = re . compile ( '<title>(.+?)</title>.+?folder>(.+?)</folder>.+?thumbnail>(.+?)</thumbnail>.+?fanart>(.+?)</fanart>' ) . findall ( i1I1iI1iIi111i )
   for I1I , i111IiI1I , I1I1I , OoOO000 in O0oO :
    IIi1I11I1II ( I1I , i111IiI1I , 1 , I1I1I , OoOO000 )
    if 73 - 73: I1ii11iIi11i * i11iIiiIii % O0o . I1ii11iIi11i
  elif '<m3u>' in i1I1iI1iIi111i :
   O0oO = re . compile ( '<title>(.+?)</title>.+?m3u>(.+?)</m3u>.+?thumbnail>(.+?)</thumbnail>.+?fanart>(.+?)</fanart>' ) . findall ( i1I1iI1iIi111i )
   for I1I , i111IiI1I , I1I1I , OoOO000 in O0oO :
    IIi1I11I1II ( I1I , i111IiI1I , 10 , I1I1I , OoOO000 )
    if 66 - 66: O0o + O0o + o0oOo0Ooo0O / iIIIiI11 + i1iIIII
  elif '<regex>' in i1I1iI1iIi111i :
   if 30 - 30: O0
   hash = [ ]
   if 44 - 44: O0o / I1 / I1
   OOO = re . compile ( '(<regex>.+?</regex>)' , re . MULTILINE | re . DOTALL ) . findall ( i1I1iI1iIi111i )
   OOO = '' . join ( OOO )
   iiiiI = re . compile ( '(<listrepeat>.+?</listrepeat>)' , re . MULTILINE | re . DOTALL ) . findall ( OOO )
   OOO = urllib . quote_plus ( OOO )
   if 62 - 62: OoooooooOO * I1IiiI
   oOOOoo0O0oO = hashlib . md5 ( )
   for iIII1I111III in OOO : oOOOoo0O0oO . update ( str ( iIII1I111III ) )
   oOOOoo0O0oO = str ( oOOOoo0O0oO . hexdigest ( ) )
   if 20 - 20: o0oOOo0O0Ooo . II111iiii % i1iIIII * iIii1I11I1II1
   try : I1I = re . findall ( '<title>(.+?)</title>' , i1I1iI1iIi111i ) [ 0 ]
   except : I1I = '0'
   if 98 - 98: I1IiiI % i111IiI * OoooooooOO
   try : i111IiI1I = re . findall ( '<link>(.+?)</link>' , i1I1iI1iIi111i ) [ 0 ]
   except : i111IiI1I = '0'
   if 51 - 51: iIii1I11I1II1 . OoOoOO00 / O0o + o0oOOo0O0Ooo
   try : I11iI1i1I11I11 = re . findall ( '<thumbnail>(.+?)</thumbnail>' , i1I1iI1iIi111i ) [ 0 ]
   except : I11iI1i1I11I11 = Iii1ii1II11i
   if 69 - 69: OoOoOO00
   try : OO0OoOO0o0o = re . findall ( '<fanart>(.+?)</fanart>' , i1I1iI1iIi111i ) [ 0 ]
   except : OO0OoOO0o0o = iIiiiI
   if 95 - 95: i11iIiiIii
   hash . append ( { 'regex' : oOOOoo0O0oO , 'response' : OOO } )
   i111IiI1I += '|regex=%s' % OOO
   if 32 - 32: i1iIIII
   O0o0O00Oo0o0 ( I1I , i111IiI1I , 30 , I11iI1i1I11I11 , OO0OoOO0o0o )
   if 42 - 42: iII111ii * O0 % i1IIi . i1iIIII / o0oOOo0O0Ooo
  elif '<sportsdevil>' in i1I1iI1iIi111i :
   iII11I1IiiIi = re . compile ( '<sportsdevil>(.+?)</sportsdevil>' ) . findall ( i1I1iI1iIi111i )
   if len ( iII11I1IiiIi ) == 1 :
    I1I = re . compile ( '<title>(.+?)</title>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
    try :
     I1I1I = re . compile ( '<thumbnail>(.+?)</thumbnail>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
    except : I1I1I = Iii1ii1II11i
    try :
     OoOO000 = re . compile ( '<fanart>(.+?)</fanart>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
    except : OoOO000 = iIiiiI
    i111IiI1I = re . compile ( '<sportsdevil>(.+?)</sportsdevil>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
    try :
     oo0oO = re . compile ( '<referer>(.+?)</referer>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
    except : oo0oO = i111IiI1I
    Oo0O0 = oo0oO
    Ooo0OOoOoO0 = "/"
    if not Oo0O0 . endswith ( Ooo0OOoOoO0 ) :
     oOo0OOoO0 = Oo0O0 + "/"
    else :
     oOo0OOoO0 = Oo0O0
    OOoO00 = 'plugin://plugin.video.SportsDevil/?mode=1&amp;item=catcher%3dstreams%26title=' + str ( I1I ) + '%26url=' + i111IiI1I
    i111IiI1I = OOoO00 + '%26referer=' + oOo0OOoO0
    O0o0O00Oo0o0 ( I1I , i111IiI1I , 4 , I1I1I , OoOO000 )
   elif len ( iII11I1IiiIi ) > 1 :
    I1I = re . compile ( '<title>(.+?)</title>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
    I1I1I = re . compile ( '<thumbnail>(.+?)</thumbnail>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
    O0o0O00Oo0o0 ( I1I , IIi + 'NOTPLAY' , 8 , I1I1I , OoOO000 )
    if 11 - 11: I1ii11iIi11i . OoO0O00 * iII111ii * OoooooooOO + o0oOo0Ooo0O
  else :
   iII11I1IiiIi = re . compile ( '<link>(.+?)</link>' ) . findall ( i1I1iI1iIi111i )
   if len ( iII11I1IiiIi ) == 1 :
    O0oO = re . compile ( '<title>(.+?)</title>.+?link>(.+?)</link>.+?thumbnail>(.+?)</thumbnail>.+?fanart>(.+?)</fanart>' ) . findall ( i1I1iI1iIi111i )
    IiII111i1i11 = len ( O0iII )
    for I1I , i111IiI1I , I1I1I , OoOO000 in O0oO :
     O0o0O00Oo0o0 ( I1I , i111IiI1I , 2 , I1I1I , OoOO000 )
   elif len ( iII11I1IiiIi ) > 1 :
    I1I = re . compile ( '<title>(.+?)</title>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
    I1I1I = re . compile ( '<thumbnail>(.+?)</thumbnail>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
    OoOO000 = re . compile ( '<fanart>(.+?)</fanart>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
    O0o0O00Oo0o0 ( I1I , I1i1iiI1 , 3 , I1I1I , OoOO000 )
 O0o0O00Oo0o0 ( '[B][COLOR red]* [COLOR snow]Clear Sports Cache [COLOR red]*[/COLOR][/B]' , 'null' , 1234 , Iii1ii1II11i , iIiiiI , '' )
 O0o0O00Oo0o0 ( '[B][COLOR red]* [COLOR snow]Sports Devil Fix [COLOR red]*[/COLOR][/B]' , 'null' , 1236 , Iii1ii1II11i , iIiiiI , '' )
 i11i1I1 = ii1I ( )
 if 40 - 40: o0oOo0Ooo0O * iII111ii * i11iIiiIii
 if i11i1I1 == "Jarvis" :
  xbmc . executebuiltin ( 'Container.SetViewMode(50)' )
 elif i11i1I1 == "Krypton" :
  xbmc . executebuiltin ( 'Container.SetViewMode(55)' )
 else : xbmc . executebuiltin ( 'Container.SetViewMode(50)' )
 if 57 - 57: o0oOo0Ooo0O
def II11Iiii ( name , url ) :
 if 46 - 46: I1 / i111IiI
 hash = [ ]
 IIi = url
 OOoO00 = IiI111111IIII ( url )
 if 57 - 57: iII111ii / iIIIiI11 * O0 - OoooooooOO % iIii1I11I1II1
 O0iII = re . compile ( '<item>(.+?)</item>' ) . findall ( OOoO00 )
 for i1I1iI1iIi111i in O0iII :
  if 33 - 33: i1IIi / i111IiI
  if "<hesgoal>" in i1I1iI1iIi111i :
   name = re . compile ( '<title>(.+?)</title>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   I1I1I = re . compile ( '<thumbnail>(.+?)</thumbnail>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   OoOO000 = re . compile ( '<fanart>(.+?)</fanart>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   IIi1I11I1II ( name , 'url' , 205 , I1I1I , OoOO000 , '' )
   if 96 - 96: i11iIiiIii % i1iIIII
  elif "<reddit>" in i1I1iI1iIi111i :
   name = re . compile ( '<title>(.+?)</title>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   url = re . compile ( '<reddit>(.+?)</reddit>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   I1I1I = re . compile ( '<thumbnail>(.+?)</thumbnail>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   OoOO000 = re . compile ( '<fanart>(.+?)</fanart>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   IIi1I11I1II ( name , 'url' , 320 , I1I1I , OoOO000 , '' )
   if 70 - 70: iIii1I11I1II1
  elif "<reddit_link>" in i1I1iI1iIi111i :
   name = re . compile ( '<title>(.+?)</title>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   url = re . compile ( '<reddit_link>(.+?)</reddit_link>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   I1I1I = re . compile ( '<thumbnail>(.+?)</thumbnail>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   OoOO000 = re . compile ( '<fanart>(.+?)</fanart>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   IIi1I11I1II ( name , url , 319 , I1I1I , OoOO000 , '' )
   if 31 - 31: iII111ii - I1IiiI % iIii1I11I1II1
  elif "<redditevents>" in i1I1iI1iIi111i :
   name = re . compile ( '<title>(.+?)</title>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   url = re . compile ( '<redditevents>(.+?)</redditevents>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   I1I1I = re . compile ( '<thumbnail>(.+?)</thumbnail>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   OoOO000 = re . compile ( '<fanart>(.+?)</fanart>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   IIi1I11I1II ( name , url , 317 , I1I1I , OoOO000 , '' )
   if 92 - 92: i1IIi - iIii1I11I1II1
  elif "<reddit_suggested>" in i1I1iI1iIi111i :
   name = re . compile ( '<title>(.+?)</title>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   url = re . compile ( '<reddit_suggested>(.+?)</reddit_suggested>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   I1I1I = re . compile ( '<thumbnail>(.+?)</thumbnail>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   OoOO000 = re . compile ( '<fanart>(.+?)</fanart>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   IIi1I11I1II ( name , url , 322 , I1I1I , OoOO000 , '' )
   if 16 - 16: OoO0O00 - OoOoOO00 - i1iIIII - i1IIi / i111IiI
  elif "<goaltogoals>" in i1I1iI1iIi111i :
   name = re . compile ( '<title>(.+?)</title>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   url = re . compile ( '<goaltogoals>(.+?)</goaltogoals>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   I1I1I = re . compile ( '<thumbnail>(.+?)</thumbnail>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   OoOO000 = re . compile ( '<fanart>(.+?)</fanart>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   IIi1I11I1II ( name , url , 314 , I1I1I , OoOO000 , '' )
   if 88 - 88: OoO0O00
  elif "<livetv>" in i1I1iI1iIi111i :
   name = re . compile ( '<title>(.+?)</title>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   IIi1I11I1II ( name , 'url' , 313 , Iii1ii1II11i , iIiiiI , '' )
   if 71 - 71: I1ii11iIi11i
  elif "<livescores>" in i1I1iI1iIi111i :
   name = re . compile ( '<title>(.+?)</title>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   I1I1I = re . compile ( '<thumbnail>(.+?)</thumbnail>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   OoOO000 = re . compile ( '<fanart>(.+?)</fanart>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   IIi1I11I1II ( name , 'url' , 80 , I1I1I , OoOO000 , '' )
   if 7 - 7: I1ii11iIi11i - I1IiiI . iIii1I11I1II1 - i1IIi
  elif "<fixtureoverview>" in i1I1iI1iIi111i :
   name = re . compile ( '<title>(.+?)</title>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   I1I1I = re . compile ( '<thumbnail>(.+?)</thumbnail>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   OoOO000 = re . compile ( '<fanart>(.+?)</fanart>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   IIi1I11I1II ( name , 'url' , 70 , I1I1I , OoOO000 , '' )
   if 59 - 59: o0oOOo0O0Ooo
  elif "<predictions>" in i1I1iI1iIi111i :
   name = re . compile ( '<title>(.+?)</title>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   I1I1I = re . compile ( '<thumbnail>(.+?)</thumbnail>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   OoOO000 = re . compile ( '<fanart>(.+?)</fanart>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   IIi1I11I1II ( name , 'url' , 40 , I1I1I , OoOO000 , '' )
   if 81 - 81: OoOoOO00 - OoOoOO00 . iIIIiI11
  elif "<oddschecker>" in i1I1iI1iIi111i :
   name = re . compile ( '<title>(.+?)</title>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   I1I1I = re . compile ( '<thumbnail>(.+?)</thumbnail>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   OoOO000 = re . compile ( '<fanart>(.+?)</fanart>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   IIi1I11I1II ( name , 'url' , 50 , I1I1I , OoOO000 , '' )
   if 73 - 73: I1 % i11iIiiIii - I1IiiI
  elif "<formguide>" in i1I1iI1iIi111i :
   name = re . compile ( '<title>(.+?)</title>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   I1I1I = re . compile ( '<thumbnail>(.+?)</thumbnail>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   OoOO000 = re . compile ( '<fanart>(.+?)</fanart>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   IIi1I11I1II ( name , 'url' , 60 , I1I1I , OoOO000 , '' )
   if 7 - 7: O0 * i11iIiiIii * i111IiI + o0oOo0Ooo0O % OoO0O00 - o0oOo0Ooo0O
  elif "<mamahd>" in i1I1iI1iIi111i :
   name = re . compile ( '<title>(.+?)</title>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   url = re . compile ( '<mamahd>(.+?)</mamahd>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   I1I1I = re . compile ( '<thumbnail>(.+?)</thumbnail>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   OoOO000 = re . compile ( '<fanart>(.+?)</fanart>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   IIi1I11I1II ( name , url , 310 , I1I1I , OoOO000 , '' )
   if 39 - 39: Oo0Ooo * i1iIIII % i1iIIII - OoooooooOO + o0oOOo0O0Ooo - I1
  elif "<soccerstreams>" in i1I1iI1iIi111i :
   name = re . compile ( '<title>(.+?)</title>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   url = re . compile ( '<soccerstreams>(.+?)</soccerstreams>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   I1I1I = re . compile ( '<thumbnail>(.+?)</thumbnail>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   OoOO000 = re . compile ( '<fanart>(.+?)</fanart>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   IIi1I11I1II ( name , url , 307 , I1I1I , OoOO000 , '' )
   if 23 - 23: i11iIiiIii
  elif "<247hd>" in i1I1iI1iIi111i :
   name = re . compile ( '<title>(.+?)</title>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   url = re . compile ( '<247hd>(.+?)</247hd>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   I1I1I = re . compile ( '<thumbnail>(.+?)</thumbnail>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   OoOO000 = re . compile ( '<fanart>(.+?)</fanart>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   IIi1I11I1II ( name , url , 312 , I1I1I , OoOO000 , '' )
   if 30 - 30: o0oOOo0O0Ooo - i1IIi % II111iiii + I1 * iIii1I11I1II1
  elif "<bigsports>" in i1I1iI1iIi111i :
   name = re . compile ( '<title>(.+?)</title>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   url = re . compile ( '<bigsports>(.+?)</bigsports>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   I1I1I = re . compile ( '<thumbnail>(.+?)</thumbnail>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   OoOO000 = re . compile ( '<fanart>(.+?)</fanart>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   IIi1I11I1II ( name , url , 301 , I1I1I , OoOO000 , '' )
   if 81 - 81: iII111ii % i1IIi . iIii1I11I1II1
  elif "<cricbox>" in i1I1iI1iIi111i :
   name = re . compile ( '<title>(.+?)</title>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   url = re . compile ( '<cricbox>(.+?)</cricbox>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   I1I1I = re . compile ( '<thumbnail>(.+?)</thumbnail>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   OoOO000 = re . compile ( '<fanart>(.+?)</fanart>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   IIi1I11I1II ( name , url , 302 , I1I1I , OoOO000 , '' )
   if 4 - 4: i11iIiiIii % OoO0O00 % i1IIi / iII111ii
  elif "<cricfree>" in i1I1iI1iIi111i :
   name = re . compile ( '<title>(.+?)</title>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   url = re . compile ( '<cricfree>(.+?)</cricfree>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   I1I1I = re . compile ( '<thumbnail>(.+?)</thumbnail>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   OoOO000 = re . compile ( '<fanart>(.+?)</fanart>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   IIi1I11I1II ( name , url , 303 , I1I1I , OoOO000 , '' )
   if 6 - 6: iIIIiI11 / I1IiiI % i1iIIII - I1IiiI
  elif "<sports4u>" in i1I1iI1iIi111i :
   name = re . compile ( '<title>(.+?)</title>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   url = re . compile ( '<sports4u>(.+?)</sports4u>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   I1I1I = re . compile ( '<thumbnail>(.+?)</thumbnail>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   OoOO000 = re . compile ( '<fanart>(.+?)</fanart>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   IIi1I11I1II ( name , url , 304 , I1I1I , OoOO000 , '' )
   if 31 - 31: i1iIIII
  elif "<sports4ulive>" in i1I1iI1iIi111i :
   name = re . compile ( '<title>(.+?)</title>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   I1I1I = re . compile ( '<thumbnail>(.+?)</thumbnail>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   OoOO000 = re . compile ( '<fanart>(.+?)</fanart>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   IIi1I11I1II ( name , "url" , 305 , I1I1I , OoOO000 , '' )
   if 23 - 23: oOo0Oo . iII111ii
  elif '<folder>' in i1I1iI1iIi111i :
   O0oO = re . compile ( '<title>(.+?)</title>.+?folder>(.+?)</folder>.+?thumbnail>(.+?)</thumbnail>.+?fanart>(.+?)</fanart>' ) . findall ( i1I1iI1iIi111i )
   for name , url , I1I1I , OoOO000 in O0oO :
    IIi1I11I1II ( name , url , 1 , I1I1I , iIiiiI )
    if 92 - 92: OoOoOO00 + oOo0Oo * i111IiI % I1IiiI
  elif '<m3u>' in i1I1iI1iIi111i :
   O0oO = re . compile ( '<title>(.+?)</title>.+?m3u>(.+?)</m3u>.+?thumbnail>(.+?)</thumbnail>.+?fanart>(.+?)</fanart>' ) . findall ( i1I1iI1iIi111i )
   for name , url , I1I1I , OoOO000 in O0oO :
    IIi1I11I1II ( name , url , 10 , I1I1I , iIiiiI )
    if 42 - 42: Oo0Ooo
  elif '<rutube>' in i1I1iI1iIi111i :
   O0oO = re . compile ( '<title>(.+?)</title>.+?rutube>(.+?)</rutube>.+?thumbnail>(.+?)</thumbnail>.+?fanart>(.+?)</fanart>' ) . findall ( i1I1iI1iIi111i )
   for name , url , I1I1I , OoOO000 in O0oO :
    IIi = 'https://rutube.ru/play/embed/' + url + '?wmode=opaque&fakeFullscreen=1'
    IIi1I11I1II ( name , IIi , 2 , I1I1I , iIiiiI )
    if 76 - 76: I1IiiI * iIIIiI11 % oOo0Oo
  elif '<m3ulists>display</m3ulists>' in i1I1iI1iIi111i :
   name = re . compile ( '<title>(.+?)</title>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   IIi1I11I1II ( name , I1i1iiI1 , 11 , Iii1ii1II11i , iIiiiI )
   if 57 - 57: iIii1I11I1II1 - i1IIi / oOo0Oo - O0 * OoooooooOO % II111iiii
  elif '<fightclubsearch>' in i1I1iI1iIi111i :
   name = re . compile ( '<title>(.+?)</title>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   url = re . compile ( '<fightclubsearch>(.+?)</fightclubsearch>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   url = 'true|SPLIT|' + url
   IIi1I11I1II ( name , url , 222 , Iii1ii1II11i , iIiiiI )
   if 68 - 68: OoooooooOO * I1 % OoOoOO00 - iII111ii
  elif '<fightclubterms>' in i1I1iI1iIi111i :
   name = re . compile ( '<title>(.+?)</title>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   url = re . compile ( '<fightclubterms>(.+?)</fightclubterms>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   url = 'false|SPLIT|' + url + '|SPLIT|' + IIi + '|SPLIT|' + name
   IIi1I11I1II ( name , url , 222 , Iii1ii1II11i , iIiiiI )
   if 34 - 34: oOo0Oo . iIii1I11I1II1 * OoOoOO00 * O0o / oOo0Oo / I1ii11iIi11i
  elif '<arenavision>display</arenavision>' in i1I1iI1iIi111i :
   name = re . compile ( '<title>(.+?)</title>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   if os . path . exists ( Oo0oO0ooo ) : IIi1I11I1II ( name , I1i1iiI1 , 95 , Iii1ii1II11i , iIiiiI , '' )
   else : O0o0O00Oo0o0 ( '[COLOR darkgray]' + name + ' - INSTALL PLEXUS TO USE.[/COLOR]' , I1i1iiI1 , 999 , Iii1ii1II11i , iIiiiI , '' )
   if 78 - 78: Oo0Ooo - o0oOOo0O0Ooo / OoOoOO00
  elif '<divider>null</divider>' in i1I1iI1iIi111i :
   name = re . compile ( '<title>(.+?)</title>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   O0o0O00Oo0o0 ( name , I1i1iiI1 , 999 , Iii1ii1II11i , iIiiiI )
   if 10 - 10: iIIIiI11 + Oo0Ooo * I1ii11iIi11i + iIii1I11I1II1 / oOo0Oo / I1ii11iIi11i
  elif '<plexus>' in i1I1iI1iIi111i :
   name = re . compile ( '<title>(.+?)</title>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   I1I1I = re . compile ( '<thumbnail>(.+?)</thumbnail>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   try :
    OoOO000 = re . compile ( '<fanart>(.+?)</fanart>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   except : OoOO000 = iIiiiI
   if os . path . exists ( Oo0oO0ooo ) : O0o0O00Oo0o0 ( name , IIi + 'NOTPLAY' , 7 , Iii1ii1II11i , iIiiiI )
   else : O0o0O00Oo0o0 ( '[COLOR darkgray]' + name + ' - INSTALL PLEXUS TO USE.[/COLOR]' , I1i1iiI1 , 999 , I1I1I , iIiiiI , '' )
   if 42 - 42: I1IiiI
  elif '<rutubeplaylist>' in i1I1iI1iIi111i :
   name = re . compile ( '<title>(.+?)</title>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   I1I1I = re . compile ( '<thumbnail>(.+?)</thumbnail>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   try :
    OoOO000 = re . compile ( '<fanart>(.+?)</fanart>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   except : OoOO000 = iIiiiI
   IIi1I11I1II ( name , IIi , 90 , I1I1I , iIiiiI )
   if 38 - 38: i1iIIII + II111iiii % o0oOo0Ooo0O % OoOoOO00 - i111IiI / OoooooooOO
  elif '<search>' in i1I1iI1iIi111i :
   iII11I1IiiIi = re . compile ( '<search>(.+?)</search>' ) . findall ( i1I1iI1iIi111i )
   if len ( iII11I1IiiIi ) == 1 :
    name = re . compile ( '<title>(.+?)</title>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
    url = re . compile ( '<search>(.+?)</search>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
    I1I1I = re . compile ( '<thumbnail>(.+?)</thumbnail>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
    url = name + "!" + url + "!" + I1I1I
    name = '[COLOR white]' + name + '[/COLOR]'
    IIi1I11I1II ( name , url , 20 , I1I1I , iIiiiI )
    if 73 - 73: o0oOOo0O0Ooo * O0 - i11iIiiIii
   elif len ( iII11I1IiiIi ) > 1 :
    name = re . compile ( '<title>(.+?)</title>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
    I1I1I = re . compile ( '<thumbnail>(.+?)</thumbnail>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
    url = IIi + "!" + name + "!" + I1I1I
    name = '[COLOR white]' + name + '[/COLOR]'
    IIi1I11I1II ( name , url , 22 , I1I1I , iIiiiI )
    if 85 - 85: i111IiI % iIIIiI11 + I1 / o0oOOo0O0Ooo . O0o + i1iIIII
  elif '<regex>' in i1I1iI1iIi111i :
   if 62 - 62: i11iIiiIii + i11iIiiIii - o0oOOo0O0Ooo
   hash = [ ]
   if 28 - 28: iIIIiI11 . iIIIiI11 % iIii1I11I1II1 * iIii1I11I1II1 . o0oOOo0O0Ooo / iIIIiI11
   OOO = re . compile ( '(<regex>.+?</regex>)' , re . MULTILINE | re . DOTALL ) . findall ( i1I1iI1iIi111i )
   OOO = '' . join ( OOO )
   iiiiI = re . compile ( '(<listrepeat>.+?</listrepeat>)' , re . MULTILINE | re . DOTALL ) . findall ( OOO )
   OOO = urllib . quote_plus ( OOO )
   if 27 - 27: OoO0O00 + o0oOo0Ooo0O - i1IIi
   oOOOoo0O0oO = hashlib . md5 ( )
   for iIII1I111III in OOO : oOOOoo0O0oO . update ( str ( iIII1I111III ) )
   oOOOoo0O0oO = str ( oOOOoo0O0oO . hexdigest ( ) )
   if 69 - 69: iII111ii - O0 % I1ii11iIi11i + i11iIiiIii . OoOoOO00 / OoO0O00
   try : name = re . findall ( '<title>(.+?)</title>' , i1I1iI1iIi111i ) [ 0 ]
   except : name = '0'
   if 79 - 79: O0 * i11iIiiIii - iII111ii / iII111ii
   try : url = re . findall ( '<link>(.+?)</link>' , i1I1iI1iIi111i ) [ 0 ]
   except : url = '0'
   if 48 - 48: O0
   try : I11iI1i1I11I11 = re . findall ( '<thumbnail>(.+?)</thumbnail>' , i1I1iI1iIi111i ) [ 0 ]
   except : I11iI1i1I11I11 = Iii1ii1II11i
   if 93 - 93: i11iIiiIii - I1IiiI * I1ii11iIi11i * I1 % O0 + OoooooooOO
   try : OO0OoOO0o0o = re . findall ( '<fanart>(.+?)</fanart>' , i1I1iI1iIi111i ) [ 0 ]
   except : OO0OoOO0o0o = iIiiiI
   if 25 - 25: iII111ii + i111IiI / o0oOo0Ooo0O . o0oOOo0O0Ooo % O0 * OoO0O00
   hash . append ( { 'regex' : oOOOoo0O0oO , 'response' : OOO } )
   url += '|regex=%s' % OOO
   if 84 - 84: o0oOo0Ooo0O % i111IiI + i11iIiiIii
   O0o0O00Oo0o0 ( name , url , 30 , I11iI1i1I11I11 , OO0OoOO0o0o )
   if 28 - 28: Oo0Ooo + OoO0O00 * i1iIIII % O0o . I1 % O0
  elif '<sportsdevil>' in i1I1iI1iIi111i :
   iII11I1IiiIi = re . compile ( '<sportsdevil>(.+?)</sportsdevil>' ) . findall ( i1I1iI1iIi111i )
   if len ( iII11I1IiiIi ) == 1 :
    name = re . compile ( '<title>(.+?)</title>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
    try :
     I1I1I = re . compile ( '<thumbnail>(.+?)</thumbnail>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
    except : I1I1I = Iii1ii1II11i
    try :
     OoOO000 = re . compile ( '<fanart>(.+?)</fanart>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
    except : OoOO000 = iIiiiI
    url = re . compile ( '<sportsdevil>(.+?)</sportsdevil>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
    try :
     oo0oO = re . compile ( '<referer>(.+?)</referer>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
    except : oo0oO = url
    Oo0O0 = oo0oO
    Ooo0OOoOoO0 = "/"
    if not Oo0O0 . endswith ( Ooo0OOoOoO0 ) :
     oOo0OOoO0 = Oo0O0 + "/"
    else :
     oOo0OOoO0 = Oo0O0
    OOoO00 = 'plugin://plugin.video.SportsDevil/?mode=1&amp;item=catcher%3dstreams%26title=' + str ( name ) + '%26url=' + url
    url = OOoO00 + '%26referer=' + oOo0OOoO0
    O0o0O00Oo0o0 ( name , url , 4 , I1I1I , OoOO000 )
   elif len ( iII11I1IiiIi ) > 1 :
    name = re . compile ( '<title>(.+?)</title>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
    I1I1I = re . compile ( '<thumbnail>(.+?)</thumbnail>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
    O0o0O00Oo0o0 ( name , IIi + 'NOTPLAY' , 8 , I1I1I , OoOO000 )
    if 16 - 16: I1 - iIii1I11I1II1 / I1IiiI . II111iiii + iIii1I11I1II1
  else :
   iII11I1IiiIi = re . compile ( '<link>(.+?)</link>' ) . findall ( i1I1iI1iIi111i )
   if len ( iII11I1IiiIi ) == 1 :
    O0oO = re . compile ( '<title>(.+?)</title>.+?link>(.+?)</link>.+?thumbnail>(.+?)</thumbnail>.+?fanart>(.+?)</fanart>' ) . findall ( i1I1iI1iIi111i )
    IiII111i1i11 = len ( O0iII )
    for name , url , I1I1I , OoOO000 in O0oO :
     O0o0O00Oo0o0 ( name , url , 2 , I1I1I , OoOO000 )
   elif len ( iII11I1IiiIi ) > 1 :
    name = re . compile ( '<title>(.+?)</title>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
    I1I1I = re . compile ( '<thumbnail>(.+?)</thumbnail>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
    try :
     OoOO000 = re . compile ( '<fanart>(.+?)</fanart>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
    except : OoOO000 = iIiiiI
    O0o0O00Oo0o0 ( name , IIi , 3 , I1I1I , OoOO000 )
    if 19 - 19: OoO0O00 - Oo0Ooo . O0
 i11i1I1 = ii1I ( )
 if 60 - 60: II111iiii + Oo0Ooo
 if i11i1I1 == "Jarvis" :
  xbmc . executebuiltin ( 'Container.SetViewMode(50)' )
 elif i11i1I1 == "Krypton" :
  xbmc . executebuiltin ( 'Container.SetViewMode(55)' )
 else : xbmc . executebuiltin ( 'Container.SetViewMode(50)' )
 if 9 - 9: o0oOo0Ooo0O * OoooooooOO - iIii1I11I1II1 + OoOoOO00 / OoO0O00 . OoO0O00
def iiIIi ( ) :
 if 11 - 11: I1IiiI * O0o
 xbmc . executebuiltin ( "ActivateWindow(busydialog)" )
 if 81 - 81: iIIIiI11 + iII111ii
 IIi1I11I1II ( 'Click for Sports Recommended Reddits' , 'url' , 322 , Iii1ii1II11i , iIiiiI )
 O0o0O00Oo0o0 ( 'Add A Reddit/Subreddit' , 'url' , 321 , Iii1ii1II11i , iIiiiI )
 O0o0O00Oo0o0 ( '-----------------------------------' , 'url' , 999 , Iii1ii1II11i , iIiiiI )
 O0o0O00Oo0o0 ( 'User Added Reddits' , 'url' , 999 , I1I1I , OoOO000 )
 if 98 - 98: I1IiiI
 if os . path . exists ( O0oo0OO0 ) :
  OooO0OO = open ( O0oo0OO0 , mode = 'r' ) ; o00o0 = OooO0OO . read ( ) ; OooO0OO . close ( )
  o00o0 = o00o0 . replace ( '\n' , '' )
  if '<item>' in o00o0 :
   O0iII = re . compile ( '<item>(.+?)</item>' ) . findall ( o00o0 )
   for i1I1iI1iIi111i in O0iII :
    I1I = re . compile ( '<name>(.+?)</name>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
    i111IiI1I = re . compile ( '<url>(.+?)</url>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
    II1III1I1I1Ii = [ ]
    II1III1I1I1Ii . append ( ( 'Remove from list' , 'XBMC.RunPlugin(%s?mode=323&name=%s&url=%s)' % ( sys . argv [ 0 ] , I1I , i111IiI1I ) ) )
    IIi1I11I1II ( '[COLOR blue]' + I1I . encode ( 'utf-8' ) + '[/COLOR]' , i111IiI1I . encode ( 'utf-8' ) , 319 , I1I1I , OoOO000 , '' , II1III1I1I1Ii )
  else : O0o0O00Oo0o0 ( 'No user added Reddits detected.' , 'url' , 999 , I1I1I , OoOO000 )
 xbmc . executebuiltin ( "Dialog.Close(busydialog)" )
 if 70 - 70: OoO0O00 % O0o + i1iIIII / i111IiI % O0
def oO00O0 ( ) :
 if 36 - 36: O0o - i111IiI . Oo0Ooo - i11iIiiIii - i1iIIII * Oo0Ooo
 xbmc . executebuiltin ( "ActivateWindow(busydialog)" )
 if not os . path . isfile ( O0oo0OO0 ) :
  OooO0OO = open ( O0oo0OO0 , 'w' ) ; OooO0OO . write ( '#START OF FILE#' ) ; OooO0OO . close ( )
  if 76 - 76: i11iIiiIii + o0oOOo0O0Ooo / I1ii11iIi11i - OoO0O00 - i111IiI + I1ii11iIi11i
 ooI1i = ''
 iIII = xbmc . Keyboard ( ooI1i , 'Enter Reddit URL/Name' )
 iIII . doModal ( )
 if iIII . isConfirmed ( ) :
  ooI1i = iIII . getText ( )
  if len ( ooI1i ) > 1 :
   if not 'http' in ooI1i . lower ( ) : ooI1i = 'https://www.reddit.com/r/' + ooI1i
   OO0O00 = o0o0O ( ooI1i )
   if '<p id="noresults" class="error">' in OO0O00 :
    o0oO0 . ok ( o0OOO , 'An invalid URL has been entered.' )
    xbmc . executebuiltin ( "Dialog.Close(busydialog)" )
    quit ( )
   i111IiI1I = ooI1i
  else :
   xbmc . executebuiltin ( "Dialog.Close(busydialog)" )
   quit ( )
 else :
  xbmc . executebuiltin ( "Dialog.Close(busydialog)" )
  quit ( )
  if 68 - 68: o0oOo0Ooo0O
 try :
  I1I = re . compile ( '<h1 class="hover redditname">.+?>(.+?)<\/a>' ) . findall ( OO0O00 ) [ 0 ]
  OOO00O = open ( O0oo0OO0 ) . read ( )
  OOoOO0oo0ooO = OOO00O . replace ( '#START OF FILE#' , '#START OF FILE#\n<item>\n<name>' + str ( I1I ) + '</name>\n<url>' + str ( i111IiI1I ) + '</url>\n</item>\n' )
  OooO0OO = open ( O0oo0OO0 , mode = 'w' )
  OooO0OO . write ( str ( OOoOO0oo0ooO ) )
  OooO0OO . close ( )
 except :
  o0oO0 . ok ( o0OOO , 'Sorry, we were unable to add this Reddit.' )
  xbmc . executebuiltin ( "Dialog.Close(busydialog)" )
  quit ( )
 o0oO0 . ok ( o0OOO , I1I + ' has been added!' )
 xbmc . executebuiltin ( "Dialog.Close(busydialog)" )
 xbmc . executebuiltin ( "Container.Refresh" )
 if 25 - 25: I1ii11iIi11i . o0oOo0Ooo0O
def iIIi ( ) :
 if 62 - 62: Oo0Ooo - I1
 OO0O00 = IiI111111IIII ( 'https://pastebin.com/raw/4b2DegdY' )
 if 21 - 21: O0 % iII111ii . I1IiiI / II111iiii + iII111ii
 OO0O00 = re . compile ( '<link>(.+?)</link>' ) . findall ( OO0O00 )
 if 53 - 53: O0o - I1IiiI - O0o * iIIIiI11
 for oooooo0OO in OO0O00 :
  if 14 - 14: O0o / O0o % o0oOo0Ooo0O
  OO0O00 = o0o0O ( oooooo0OO )
  if 56 - 56: I1IiiI . O0 + Oo0Ooo
  try :
   I1I = re . compile ( '<h1 class="hover redditname">.+?>(.+?)<\/a>' ) . findall ( OO0O00 ) [ 0 ]
   IIi1I11I1II ( I1I . encode ( 'utf-8' ) , oooooo0OO , 319 , Iii1ii1II11i , iIiiiI )
  except : pass
  if 1 - 1: iIIIiI11
def O0O0Ooo ( url ) :
 if 77 - 77: o0oOOo0O0Ooo / OoooooooOO
 OO0O00 = o0o0O ( url )
 if 46 - 46: o0oOOo0O0Ooo % iIii1I11I1II1 . iIIIiI11 % iIIIiI11 + i11iIiiIii
 if not 'comments' in url :
  if 72 - 72: iIii1I11I1II1 * i111IiI % o0oOo0Ooo0O / OoO0O00
  I11i1II = [ ] ; Ooo = [ ] ; iiIi1i = [ ] ; I1i11111i1i11 = [ ] ; OOoOOO0 = [ ]
  try :
   I1I1i = re . compile ( '<h1 class="hover redditname">.+?>(.+?)<\/a>' ) . findall ( OO0O00 ) [ 0 ]
   O0o0O00Oo0o0 ( '[COLOR blue][B]Welcome to the ' + I1I1i . title ( ) + ' Reddit![/B][/COLOR]' , 'url' , 999 , Iii1ii1II11i , OoOO000 )
  except : pass
  if 1 - 1: I1 % i1iIIII + O0 + i1IIi - OoO0O00
  OO0O00 = dom_parser . parse_dom ( OO0O00 , 'div' , { 'class' : re . compile ( '\sthing\sid' ) } )
  if 22 - 22: I1IiiI % I1ii11iIi11i
  if OO0O00 :
   for iIII1I111III in OO0O00 :
    o0oo0O = re . compile ( '<a class="title may-blank.+?rel=".+?>(.+?)<' ) . findall ( iIII1I111III . content ) [ 0 ]
    url = re . compile ( 'href="([^"]+)' ) . findall ( iIII1I111III . content )
    url = [ oooooo0OO for oooooo0OO in url if ( 'comments' in oooooo0OO ) and ( 'reddit' in oooooo0OO ) ]
    try : Ii1i1iI = re . compile ( '<div class="score unvoted" title=".+?">([0-9]+)</div>' ) . findall ( iIII1I111III . content ) [ 0 ]
    except : Ii1i1iI = '0'
    try : IIiI1 = re . compile ( 'data-event-action="comments".+?>([0-9]+)\scomments<\/a>' ) . findall ( iIII1I111III . content ) [ 0 ]
    except : IIiI1 = '0'
    if 17 - 17: i1iIIII / i1iIIII / I1
    if 'comments' in url [ 0 ] :
     url = url [ 0 ]
     if not 'reddit.com' in url : url = 'https://www.reddit.com' + url
     I11i1II . append ( o0oo0O . encode ( 'utf-8' ) )
     Ooo . append ( url . encode ( 'utf-8' ) )
     iiIi1i . append ( Ii1i1iI . encode ( 'utf-8' ) )
     I1i11111i1i11 . append ( IIiI1 . encode ( 'utf-8' ) )
     OOoOOO0 = list ( zip ( iiIi1i , I11i1II , Ooo , I1i11111i1i11 ) )
     if 1 - 1: i1IIi . i11iIiiIii % i1iIIII
     if 82 - 82: iIii1I11I1II1 + Oo0Ooo . iIii1I11I1II1 % iII111ii / i111IiI . i111IiI
   for Ii1i1iI , o0oo0O , url , IIiI1 in OOoOOO0 :
    o0oo0O = o0oo0O . replace ( '&amp;' , '&' )
    IIi1I11I1II ( '[COLOR blue][B]' + Ii1i1iI + '[/B][/COLOR] - [COLOR white]' + o0oo0O + '[/COLOR] - ' + IIiI1 + ' Comments' , url , 319 , Iii1ii1II11i , iIiiiI )
  else : O0o0O00Oo0o0 ( 'No Sub Reddits Found' , 'url' , 999 , Iii1ii1II11i , OoOO000 )
  if 14 - 14: o0oOOo0O0Ooo . i1iIIII . I1 + OoooooooOO - i1iIIII + iII111ii
 else :
  if 9 - 9: i111IiI
  oooooOOO000Oo = [ 'acestream' , 'href' ]
  Ooo00OoOOO = [ 'ads' ]
  Oo0OO0000oooo = 1
  if 7 - 7: O0o - OoO0O00 - O0 % O0o - II111iiii
  OO0O00 = dom_parser . parse_dom ( OO0O00 , 'div' , { 'class' : re . compile ( 'md' ) } )
  I1II = re . compile ( '([0-9a-z]+)' ) . findall ( str ( OO0O00 ) )
  Oo000ooOOO = [ iIII1I111III for iIII1I111III in I1II if len ( iIII1I111III ) == 40 ]
  oooooo0OO = [ iIII1I111III [ 1 ] for iIII1I111III in OO0O00 [ 1 : ] if ( '<p>' in iIII1I111III [ 1 ] ) and any ( f for f in oooooOOO000Oo if f in iIII1I111III [ 1 ] ) and not any ( f for f in Ooo00OoOOO if f in iIII1I111III [ 1 ] ) ]
  OO0O00 = re . findall ( 'acestream:\/\/([0-9 a-z]+)[\s|<]' , str ( oooooo0OO ) ) + re . findall ( '<a href=\"http(.+?)\"' , str ( oooooo0OO ) )
  OOO00O = [ ]
  OOO00O . extend ( Oo000ooOOO )
  OOO00O . extend ( OO0O00 )
  if 31 - 31: iIii1I11I1II1 % I1 % o0oOo0Ooo0O . i111IiI - I1
  ii11i1ii1Ii = [ ]
  if 46 - 46: I1ii11iIi11i + II111iiii + iIii1I11I1II1
  if OOO00O :
   OOo0 = [ ]
   I11i1II = [ ]
   Ooo = [ ]
   for iIII1I111III in OOO00O :
    if not iIII1I111III . endswith ( ( '.jpg' , '.jpeg' , '.png' , '.gif' ) ) :
     iIII1I111III = iIII1I111III . encode ( 'utf-8' )
     if '://' in iIII1I111III : iIII1I111III = 'http' + iIII1I111III
     if not 'reddit' in iIII1I111III :
      if not 'http' in iIII1I111III :
       if os . path . exists ( Oo0oO0ooo ) :
        I1I = '[COLOR blue][B]Link ' + str ( Oo0OO0000oooo ) + '[/B][/COLOR] - Acestream: ' + iIII1I111III
        I11i1II . append ( I1I )
        if not iIII1I111III in Ooo : Ooo . append ( 'acestream://' + iIII1I111III )
        OOo0 . append ( '0' )
        ii11i1ii1Ii = list ( zip ( OOo0 , I11i1II , Ooo ) )
        Oo0OO0000oooo += 1
      else :
       I1I = '[COLOR blue][B]Link ' + str ( Oo0OO0000oooo ) + '[/B][/COLOR] - ' + iIII1I111III
       I11i1II . append ( I1I )
       if not iIII1I111III in Ooo : Ooo . append ( iIII1I111III )
       OOo0 . append ( '1' )
       ii11i1ii1Ii = list ( zip ( OOo0 , I11i1II , Ooo ) )
       Oo0OO0000oooo += 1
   if Oo0OO0000oooo == 1 : O0o0O00Oo0o0 ( 'No Links Found' , 'url' , 999 , Iii1ii1II11i , OoOO000 )
  else : O0o0O00Oo0o0 ( 'No Links Found' , 'url' , 999 , Iii1ii1II11i , OoOO000 )
  if 25 - 25: OoooooooOO + iII111ii * I1ii11iIi11i
  if ii11i1ii1Ii :
   OoO0ooO = 0
   O000 = 0
   i1iIiIIIII = sorted ( ii11i1ii1Ii , key = lambda oOO00oOO : int ( oOO00oOO [ 0 ] ) )
   for o0ooOoO000oO , I1I , url in i1iIiIIIII :
    if o0ooOoO000oO == '0' :
     if OoO0ooO == 0 :
      O0o0O00Oo0o0 ( '[COLOR blue][B]Acestream Links Below[/B][/COLOR]' , 'url' , 999 , Iii1ii1II11i , OoOO000 )
      O0o0O00Oo0o0 ( '---------------------------------------------------------' , 'url' , 999 , Iii1ii1II11i , OoOO000 )
      OoO0ooO = 1
     O0o0O00Oo0o0 ( I1I . encode ( 'utf-8' ) , url , 318 , Iii1ii1II11i , OoOO000 )
    else :
     if O000 == 0 :
      O0o0O00Oo0o0 ( '[COLOR blue][B]HTTP Links Below[/B][/COLOR]' , 'url' , 999 , Iii1ii1II11i , OoOO000 )
      O0o0O00Oo0o0 ( '---------------------------------------------------------' , 'url' , 999 , Iii1ii1II11i , OoOO000 )
      O000 = 1
     O0o0O00Oo0o0 ( I1I . encode ( 'utf-8' ) , url , 318 , Iii1ii1II11i , OoOO000 )
     if 85 - 85: o0oOOo0O0Ooo . OoOoOO00 / o0oOo0Ooo0O . O0 % oOo0Oo
def OO0ooo0oOO ( name , url ) :
 if 97 - 97: I1IiiI / iIIIiI11
 try :
  name = name . replace ( '[COLOR blue]' , '' ) . replace ( '[/COLOR]' , '' )
  OOO00O = open ( O0oo0OO0 ) . read ( )
  OOoOO0oo0ooO = OOO00O . replace ( '<item>\n<name>' + str ( name ) + '</name>\n<url>' + str ( url ) + '</url>\n</item>' , '' )
  OooO0OO = open ( O0oo0OO0 , mode = 'w' )
  OooO0OO . write ( str ( OOoOO0oo0ooO ) )
  xbmc . executebuiltin ( "Container.Refresh" )
 except :
  o0oO0 . ok ( o0OOO , 'There was an error removing the entry from the list.' )
  quit ( )
  if 71 - 71: II111iiii / i1IIi . I1ii11iIi11i % OoooooooOO . OoOoOO00
def Iiiiii111i1ii ( ) :
 if 25 - 25: i1iIIII - o0oOo0Ooo0O / i11iIiiIii
 OO0O00 = IiI111111IIII ( 'https://pastebin.com/raw/6w0TPFBx' )
 OO0O00 = re . compile ( '<link>(.+?)</link>' ) . findall ( OO0O00 )
 if 41 - 41: i1IIi % iIIIiI11 + iIii1I11I1II1
 oooooOOO000Oo = [ 'acestream' , 'href' ]
 Ooo00OoOOO = [ 'ads' ]
 Oo0OO0000oooo = 1
 for oooooo0OO in OO0O00 :
  OO0O00 = IiI111111IIII ( oooooo0OO )
  oooooOOO000Oo = [ 'acestream' , 'href' ]
  Ooo00OoOOO = [ 'ads' ]
  Oo0OO0000oooo = 1
  if 2 - 2: iIii1I11I1II1 * Oo0Ooo % O0o - II111iiii - iIIIiI11
  OO0O00 = dom_parser . parse_dom ( OO0O00 , 'div' , { 'class' : re . compile ( 'md' ) } )
  I1II = re . compile ( '([0-9a-z]+)' ) . findall ( str ( OO0O00 ) )
  Oo000ooOOO = [ iIII1I111III for iIII1I111III in I1II if len ( iIII1I111III ) == 40 ]
  oooooo0OO = [ iIII1I111III [ 1 ] for iIII1I111III in OO0O00 [ 1 : ] if ( '<p>' in iIII1I111III [ 1 ] ) and any ( f for f in oooooOOO000Oo if f in iIII1I111III [ 1 ] ) and not any ( f for f in Ooo00OoOOO if f in iIII1I111III [ 1 ] ) ]
  OO0O00 = re . findall ( 'acestream:\/\/([0-9 a-z]+)[\s|<]' , str ( oooooo0OO ) ) + re . findall ( '<a href=\"http(.+?)\"' , str ( oooooo0OO ) )
  OOO00O = [ ]
  OOO00O . extend ( Oo000ooOOO )
  OOO00O . extend ( OO0O00 )
  if 3 - 3: oOo0Oo
  ii11i1ii1Ii = [ ]
  if 45 - 45: oOo0Oo
  if OOO00O :
   OOo0 = [ ]
   I11i1II = [ ]
   Ooo = [ ]
   for iIII1I111III in OOO00O :
    if not iIII1I111III . endswith ( ( '.jpg' , '.jpeg' , '.png' , '.gif' ) ) :
     iIII1I111III = iIII1I111III . encode ( 'utf-8' )
     if '://' in iIII1I111III : iIII1I111III = 'http' + iIII1I111III
     if not 'reddit' in iIII1I111III :
      if not 'http' in iIII1I111III :
       if os . path . exists ( Oo0oO0ooo ) :
        I1I = '[COLOR blue][B]Link ' + str ( Oo0OO0000oooo ) + '[/B][/COLOR] - Acestream: ' + iIII1I111III
        I11i1II . append ( I1I )
        Ooo . append ( 'acestream://' + iIII1I111III )
        OOo0 . append ( '0' )
        ii11i1ii1Ii = list ( zip ( OOo0 , I11i1II , Ooo ) )
        Oo0OO0000oooo += 1
      else :
       I1I = '[COLOR blue][B]Link ' + str ( Oo0OO0000oooo ) + '[/B][/COLOR] - ' + iIII1I111III
       I11i1II . append ( I1I )
       Ooo . append ( iIII1I111III )
       OOo0 . append ( '1' )
       ii11i1ii1Ii = list ( zip ( OOo0 , I11i1II , Ooo ) )
       Oo0OO0000oooo += 1
   if Oo0OO0000oooo == 1 : O0o0O00Oo0o0 ( 'No Links Found' , 'url' , 999 , Iii1ii1II11i , OoOO000 )
  else : O0o0O00Oo0o0 ( 'No Links Found' , 'url' , 999 , Iii1ii1II11i , OoOO000 )
  if 83 - 83: OoOoOO00 . OoooooooOO
  if ii11i1ii1Ii :
   OoO0ooO = 0
   O000 = 0
   i1iIiIIIII = sorted ( ii11i1ii1Ii , key = lambda oOO00oOO : int ( oOO00oOO [ 0 ] ) , reverse = False )
   for o0ooOoO000oO , I1I , i111IiI1I in i1iIiIIIII :
    if o0ooOoO000oO == '0' :
     if OoO0ooO == 0 :
      O0o0O00Oo0o0 ( '---------------------------------------------------------' , 'url' , 999 , Iii1ii1II11i , OoOO000 )
      O0o0O00Oo0o0 ( '[COLOR blue][B]Acestream Links Below[/B][/COLOR]' , 'url' , 999 , Iii1ii1II11i , OoOO000 )
      O0o0O00Oo0o0 ( '---------------------------------------------------------' , 'url' , 999 , Iii1ii1II11i , OoOO000 )
      OoO0ooO = 1
     O0o0O00Oo0o0 ( I1I . encode ( 'utf-8' ) , i111IiI1I , 318 , Iii1ii1II11i , OoOO000 )
    else :
     if O000 == 0 :
      O0o0O00Oo0o0 ( '---------------------------------------------------------' , 'url' , 999 , Iii1ii1II11i , OoOO000 )
      O0o0O00Oo0o0 ( '[COLOR blue][B]HTTP Links Below[/B][/COLOR]' , 'url' , 999 , Iii1ii1II11i , OoOO000 )
      O0o0O00Oo0o0 ( '---------------------------------------------------------' , 'url' , 999 , Iii1ii1II11i , OoOO000 )
      O000 = 1
     O0o0O00Oo0o0 ( I1I . encode ( 'utf-8' ) , i111IiI1I , 318 , Iii1ii1II11i , OoOO000 )
     if 58 - 58: i11iIiiIii + OoooooooOO % OoooooooOO / iII111ii / i11iIiiIii
def oOOoo ( name , url , iconimage ) :
 if 14 - 14: o0oOOo0O0Ooo * O0o
 iiIIIII1i1iI . create ( o0OOO , "[COLOR blue]Opening link...[/COLOR]" , '[COLOR yellow]Please wait...[/COLOR]' , '' )
 iiIIIII1i1iI . update ( 0 )
 import urlresolver
 import liveresolver
 if 'acestream' in url : url = "plugin://program.plexus/?url=" + url + "&mode=1&name=acestream+" + name
 elif '.m3u8' in url :
  url = 'plugin://plugin.video.f4mTester/?streamtype=HLSRETRY&amp;name=' + name + '&amp;url=' + url + '&amp;iconImage=' + iconimage
 elif '.ts' in url :
  url = 'plugin://plugin.video.f4mTester/?streamtype=TSDOWNLOADER&amp;name=' + name + '&amp;url=' + url + '&amp;iconImage=' + iconimage
 elif urlresolver . HostedMediaFile ( url ) . valid_url ( ) :
  url = urlresolver . HostedMediaFile ( url ) . resolve ( )
  O0OOO0OOooo00 = xbmcgui . ListItem ( name , iconImage = iconimage , thumbnailImage = iconimage )
  O0OOO0OOooo00 . setPath ( url )
  iiIIIII1i1iI . close ( )
  xbmc . Player ( ) . play ( url , O0OOO0OOooo00 , False )
 elif liveresolver . isValid ( url ) == True :
  url = liveresolver . resolve ( url )
  O0OOO0OOooo00 = xbmcgui . ListItem ( name , iconImage = iconimage , thumbnailImage = iconimage )
  O0OOO0OOooo00 . setPath ( url )
  iiIIIII1i1iI . close ( )
  xbmc . Player ( ) . play ( url , O0OOO0OOooo00 , False )
 else :
  url = 'plugin://plugin.video.SportsDevil/?mode=1&amp;item=catcher%3dstreams%26title=' + str ( name ) + '%26url=' + url + '%26referer=none'
 O0OOO0OOooo00 = xbmcgui . ListItem ( name , iconImage = iconimage , thumbnailImage = iconimage )
 O0OOO0OOooo00 . setPath ( url )
 iiIIIII1i1iI . close ( )
 xbmc . Player ( ) . play ( url , O0OOO0OOooo00 , False )
 if 6 - 6: i111IiI - o0oOo0Ooo0O * i1iIIII . iIIIiI11 / O0 * o0oOo0Ooo0O
def II11iI111i1 ( ) :
 if 95 - 95: OoooooooOO - iII111ii * I1IiiI + OoOoOO00
 I11i1II = [ ] ; Ooo = [ ] ; OOoOOO0 = [ ]
 if 10 - 10: o0oOOo0O0Ooo / i11iIiiIii
 o00oO = [ 'aHR0cDovL3d3dy5pcHR2c2F0LmNvbS9wL2lwdHZzcG9ydC5odG1s' ]
 if 92 - 92: iII111ii * Oo0Ooo * Oo0Ooo * I1IiiI . iIii1I11I1II1
 for i111IiI1I in o00oO :
  I1Ii1111iIi = o0o0O ( base64 . b64decode ( i111IiI1I ) )
  I1Ii1111iIi = I1Ii1111iIi . replace ( '#AAASTREAM:' , '#A:' ) . replace ( '#EXTINF:' , '#A:' ) . replace ( '</h4>' , '' ) . replace ( '<h4>' , '' )
  I11o0oO00oO0o0o0 = re . compile ( '#A:-?[0-9]*(.*?),(.*?)(?:<br\s\/>)?\n(.*?)(?:<|\n)' , re . I + re . M + re . U + re . S ) . findall ( I1Ii1111iIi )
  if 17 - 17: I1 . iII111ii - II111iiii + O0 / iIii1I11I1II1 / i11iIiiIii
  for I1IIIiI1I1ii1 , iiiI1I1iIIIi1 , IIi in I11o0oO00oO0o0o0 :
   iiiI1I1iIIIi1 = iiiI1I1iIIIi1 . lstrip ( )
   I11i1II . append ( iiiI1I1iIIIi1 . title ( ) ) ; Ooo . append ( IIi ) ; OOoOOO0 = list ( zip ( I11i1II , Ooo ) )
   if 17 - 17: iIii1I11I1II1 . OoooooooOO / I1 % II111iiii % i1IIi / i11iIiiIii
 for I1I , i111IiI1I in sorted ( OOoOOO0 ) : O0o0O00Oo0o0 ( I1I , i111IiI1I , 2 , Iii1ii1II11i , OoOO000 )
 if 58 - 58: Oo0Ooo . II111iiii + O0o - i11iIiiIii / II111iiii / O0
def oOOoOo ( ) :
 if 89 - 89: II111iiii + i1IIi + II111iiii
 OO0O00 = o0o0O ( 'https://goaltogoals.com' )
 if 7 - 7: O0 % o0oOOo0O0Ooo + I1ii11iIi11i * iIIIiI11 - iIIIiI11
 OO0O00 = re . compile ( '<li id="menu-item.+? href="(.+?)">(.+?)<\/a><\/li>' ) . findall ( OO0O00 )
 for iIII1I111III in OO0O00 [ 1 : ] [ : - 7 ] :
  IIi1I11I1II ( iIII1I111III [ 1 ] , iIII1I111III [ 0 ] , 315 , Iii1ii1II11i , iIiiiI , '' )
  if 42 - 42: OoOoOO00 * OoOoOO00 * oOo0Oo . I1
def O0Oo0o000oO ( url ) :
 if 99 - 99: O0o * II111iiii * oOo0Oo
 oooooo0OO = o0o0O ( url )
 if 92 - 92: Oo0Ooo
 if 'No posts to display' in oooooo0OO :
  O0o0O00Oo0o0 ( 'No Games to Display' , 'url' , 999 , Iii1ii1II11i , iIiiiI , '' )
 else :
  try : OO0O00 = re . compile ( '<head>(.+?)<div class="page-nav td-pb-padding-side">' , re . DOTALL ) . findall ( oooooo0OO ) [ 0 ]
  except : OO0O00 = re . compile ( '<head>(.+?)</html>' , re . DOTALL ) . findall ( oooooo0OO ) [ 0 ]
  if 40 - 40: OoOoOO00 / iII111ii
  OO0O00 = re . compile ( '<div class="td-module-thumb"><a href="(.+?)" rel=.+?title="(.+?)"><img width="[0-9]+" height="[0-9]+" class="entry-thumb" src="(.+?)"' , re . DOTALL ) . findall ( OO0O00 )
  if 79 - 79: OoO0O00 - iIii1I11I1II1 + i111IiI - oOo0Oo
  if OO0O00 :
   for iIII1I111III in OO0O00 :
    try : I1I = iIII1I111III [ 1 ] . split ( '&#' ) [ 0 ] . encode ( 'utf-8' )
    except : I1I = iIII1I111III [ 1 ]
    O0o0O00Oo0o0 ( I1I , iIII1I111III [ 0 ] , 316 , iIII1I111III [ 2 ] , iIiiiI , '' )
    if 93 - 93: II111iiii . I1IiiI - Oo0Ooo + OoOoOO00
  try :
   OO0O00 = re . compile ( '<link rel="next" href="(.+?)" />' ) . findall ( oooooo0OO ) [ 0 ]
   IIi1I11I1II ( 'Next Page -->' , OO0O00 , 315 , Iii1ii1II11i , iIiiiI , '' )
  except : pass
  if 61 - 61: II111iiii
def Ii1ii111i1 ( name , url , iconimage ) :
 if 31 - 31: i1iIIII + O0
 xbmc . executebuiltin ( "ActivateWindow(busydialog)" )
 if 87 - 87: o0oOo0Ooo0O
 IIIii = [ ]
 O00OooOo00o = [ ]
 if 20 - 20: i1IIi * oOo0Oo + II111iiii % o0oOOo0O0Ooo % O0o
 oooooo0OO = o0o0O ( url )
 if 13 - 13: Oo0Ooo
 OO0O00 = re . compile ( '<h4 class="vc_tta-panel-title">(.+?)</div>\n\t</div>' , re . DOTALL ) . findall ( oooooo0OO )
 if OO0O00 :
  for iIII1I111III in OO0O00 :
   o0oo0O = re . compile ( '<span class="vc_tta-title-text">(.+?)</span>' ) . findall ( iIII1I111III ) [ 0 ]
   if 60 - 60: I1ii11iIi11i * I1IiiI
   if 17 - 17: i1iIIII % Oo0Ooo / I1ii11iIi11i . iII111ii * i1iIIII - II111iiii
   if 'data-config=' in iIII1I111III : url = re . compile ( 'data-config="(.+?)"' ) . findall ( iIII1I111III ) [ 0 ]
   else : url = re . compile ( 'src="(.+?)"' ) . findall ( iIII1I111III ) [ 0 ]
   if not 'http' in url : url = 'http:' + url
   IIIii . append ( url )
   O00OooOo00o . append ( o0oo0O )
   if 41 - 41: i111IiI
   if 77 - 77: oOo0Oo
 if len ( O00OooOo00o ) < 1 :
  o0oO0 . ok ( o0OOO , 'Nothing found for this game. Please try again later.' )
  xbmc . executebuiltin ( "Dialog.Close(busydialog)" )
  quit ( )
 xbmc . executebuiltin ( "Dialog.Close(busydialog)" )
 o0oO0 = xbmcgui . Dialog ( )
 Oo = o0oO0 . select ( name , O00OooOo00o )
 if Oo < 0 :
  quit ( )
 else :
  xbmc . executebuiltin ( "ActivateWindow(busydialog)" )
  OO0O00 = o0o0O ( IIIii [ Oo ] )
  if '.json' in IIIii [ Oo ] :
   OO0O00 = re . compile ( 'f4m":"(.+?)"' ) . findall ( OO0O00 ) [ 0 ]
   OO0O00 = o0o0O ( OO0O00 )
   OOoOO0oo0ooO = re . compile ( '<baseURL>(.+?)</baseURL>' ) . findall ( OO0O00 ) [ 0 ]
   oOOOOoO00OoOO = re . compile ( '<media url="(.+?)"' ) . findall ( OO0O00 ) [ 0 ]
   url = OOoOO0oo0ooO + '/' + oOOOOoO00OoOO
  elif 'weshare.me' in IIIii [ Oo ] :
   url = re . compile ( '<source src="(.+?)"' ) . findall ( OO0O00 ) [ 0 ]
  elif 'streamable.com' in IIIii [ Oo ] :
   OO0O00 = re . compile ( 'url": "(.+?)"' , re . DOTALL ) . findall ( OO0O00 )
   Oo000ooOOO = [ Oo000ooOOO for Oo000ooOOO in OO0O00 if '.mp4' in Oo000ooOOO ]
   if Oo000ooOOO :
    if not 'http' in Oo000ooOOO [ 0 ] : url = 'http:' + Oo000ooOOO [ 0 ]
    else : url = Oo000ooOOO [ 0 ]
  else : url = IIIii [ Oo ]
  if 85 - 85: O0o - iIii1I11I1II1 / O0
 xbmc . executebuiltin ( "Dialog.Close(busydialog)" )
 if '.mp4' in url :
  O0OOO0OOooo00 = xbmcgui . ListItem ( name , iconImage = iconimage , thumbnailImage = iconimage )
  O0OOO0OOooo00 . setPath ( url )
  xbmc . Player ( ) . play ( url , O0OOO0OOooo00 , False )
 else : Oo00oo0000OO ( name , url , iconimage )
 if 69 - 69: o0oOo0Ooo0O - OoO0O00 / i11iIiiIii + I1ii11iIi11i % OoooooooOO
def o000O000 ( ) :
 if 19 - 19: iIii1I11I1II1
 OOoO00 = cache . get ( IiI111111IIII , 1 , 'http://www.genti.stream/' )
 if 26 - 26: OoooooooOO % I1IiiI % Oo0Ooo . I1IiiI % i111IiI
 OOoO00 = OOoO00 . replace ( '\n' , '' ) . replace ( '\r' , '' )
 OOoO00 = OOoO00 . replace ( '<tr>' , '</tr><tr>' ) . replace ( '</tbody>' , '</tr></tbody>' )
 O0iII = re . compile ( '<tr>(.+?)</tr>' ) . findall ( OOoO00 )
 for i1I1I in O0iII :
  if "href" in i1I1I :
   time = re . compile ( '<td>(.+?)</td>' , re . DOTALL ) . findall ( i1I1I ) [ 0 ] . strip ( )
   oO0Ooo0ooOO0 = re . compile ( '<td><strong>(.+?)</strong></td>' , re . DOTALL ) . findall ( i1I1I ) [ 0 ] . strip ( )
   i1IIiIii1i = re . compile ( '<td>(.+?)</td>' , re . DOTALL ) . findall ( i1I1I ) [ 2 ] . strip ( )
   iII11I1IiiIi = re . compile ( '<td><a href="(.+?)">(.+?)<a/></td>' ) . findall ( i1I1I )
   for i111IiI1I , ooOOO0OooOo in iII11I1IiiIi :
    O0o0O00Oo0o0 ( "[COLOR blue]" + oO0Ooo0ooOO0 + " | [/COLOR][COLOR white][B]" + i1IIiIii1i . title ( ) + " [/B][/COLOR][COLOR blue]| " + time + "[/COLOR]" , i111IiI1I , 4 , Iii1ii1II11i , iIiiiI , '' )
    if 33 - 33: i1iIIII / i1IIi - I1IiiI % Oo0Ooo . I1ii11iIi11i
def Ii1II ( ) :
 if 89 - 89: oOo0Oo + OoooooooOO + oOo0Oo * i1IIi + iIii1I11I1II1 % I1
 OOoO00 = cache . get ( IiI111111IIII , 1 , 'https://mamahd.tv/' )
 if 59 - 59: i1iIIII + i11iIiiIii
 IIi1I11I1II ( "[COLOR white][B]Live Channels[/B][/COLOR]" , i111IiI1I , 311 , Iii1ii1II11i , iIiiiI , '' )
 if 88 - 88: i11iIiiIii - o0oOo0Ooo0O
 O0iIi1IiII = OOoO00 . replace ( '\n' , '' ) . replace ( '\r' , '' )
 OO0O00 = dom_parser . parse_dom ( O0iIi1IiII , 'tr' , { 'data-toggle' : 'collapse' } )
 OO0O00 = [ ( dom_parser . parse_dom ( iIII1I111III , 'span' , { 'class' : 'date' } ) , dom_parser . parse_dom ( iIII1I111III , 'div' , { 'id' : re . compile ( 'time\d+' ) } ) , dom_parser . parse_dom ( iIII1I111III , 'td' , { 'class' : 'home-league' } ) , dom_parser . parse_dom ( iIII1I111III , 'td' , { 'class' : 'home-team' } ) , dom_parser . parse_dom ( iIII1I111III , 'td' , { 'class' : 'home-away' } ) , dom_parser . parse_dom ( iIII1I111III , 'a' , req = 'href' ) ) for iIII1I111III in OO0O00 if iIII1I111III ]
 if 27 - 27: iIIIiI11 . I1 . iIii1I11I1II1 . iIii1I11I1II1
 if 20 - 20: o0oOOo0O0Ooo / i1IIi
 if 71 - 71: OoOoOO00 . i1IIi
 if 94 - 94: i1iIIII . oOo0Oo
 if 84 - 84: O0 . I1 - II111iiii . o0oOo0Ooo0O / II111iiii
 if 47 - 47: OoooooooOO
 OO0O00 = [ ( iIII1I111III [ 0 ] [ 0 ] . content , re . sub ( '<.+?</.+?>' , '' , iIII1I111III [ 1 ] [ 0 ] . content ) . strip ( ) , iIII1I111III [ 2 ] [ 0 ] . content , re . sub ( '<.+?>' , '' , iIII1I111III [ 3 ] [ 0 ] . content ) . strip ( ) , re . sub ( '<.+?>' , '' , iIII1I111III [ 4 ] [ 0 ] . content ) . strip ( ) , iIII1I111III [ 5 ] [ - 1 ] . attrs [ 'href' ] ) for iIII1I111III in OO0O00 if iIII1I111III [ 4 ] ]
 if 4 - 4: I1IiiI % I1
 if 10 - 10: iII111ii . OoooooooOO - OoO0O00 + iII111ii - O0
 if 82 - 82: o0oOo0Ooo0O + II111iiii
 if OO0O00 :
  for iIII1I111III in OO0O00 :
   I1I = iIII1I111III [ 3 ] + ' vs ' + iIII1I111III [ 4 ]
   O0o0O00Oo0o0 ( "[COLOR blue]" + iIII1I111III [ 0 ] + "-" + iIII1I111III [ 1 ] + "[/COLOR]- [COLOR white]" + I1I . title ( ) + "[/COLOR] - " + iIII1I111III [ 2 ] , iIII1I111III [ 5 ] , 309 , Iii1ii1II11i , iIiiiI , '' )
   if 39 - 39: O0o % iIii1I11I1II1 % O0 % OoooooooOO * I1ii11iIi11i + iIIIiI11
def oOo000 ( ) :
 if 14 - 14: OoO0O00 . II111iiii . I1 / i111IiI % I1ii11iIi11i - o0oOo0Ooo0O
 OOoO00 = cache . get ( IiI111111IIII , 1 , 'https://mamahd.tv/' )
 if 67 - 67: I1 - i1iIIII . i1IIi
 O0iIi1IiII = OOoO00 . replace ( '\n' , '' ) . replace ( '\r' , '' )
 OO0O00 = dom_parser . parse_dom ( O0iIi1IiII , 'ul' , { 'class' : 'dropdown-menu' } )
 OO0O00 = dom_parser . parse_dom ( OO0O00 [ 1 ] . content , 'a' , req = [ 'href' , 'title' ] )
 OO0O00 = [ ( iIII1I111III . attrs [ 'title' ] , iIII1I111III . attrs [ 'href' ] ) for iIII1I111III in OO0O00 if iIII1I111III ]
 if OO0O00 :
  for iIII1I111III in OO0O00 :
   O0o0O00Oo0o0 ( iIII1I111III [ 0 ] . title ( ) , iIII1I111III [ 1 ] , 309 , Iii1ii1II11i , iIiiiI , '' )
   if 35 - 35: iIIIiI11 + o0oOo0Ooo0O - O0o . iIIIiI11 . iII111ii
def oo0ooOO ( name , url , iconimage ) :
 if 24 - 24: OoO0O00 % OoO0O00 * iIii1I11I1II1
 try :
  OOoO00 = IiI111111IIII ( url )
  url = re . compile ( 'href="([^"]+)">Watch' ) . findall ( OOoO00 ) [ 0 ]
  url = 'plugin://plugin.video.SportsDevil/?mode=1&item=catcher%3dstreams%26url=' + url + '%26referer=no%26icon%3d' + Iii1ii1II11i
  III ( name , url , iconimage )
 except :
  o0oO0 . ok ( o0OOO , "Sorry, we could not find any live links at the moment. Please try again later." )
  quit ( )
  if 1 - 1: O0o
def oo00OooO ( url ) :
 if 57 - 57: i1iIIII + iIii1I11I1II1 % i1IIi % I1IiiI
 IIi1I11I1II ( "[COLOR white][B]Live Channels[/B][/COLOR]" , url , 299 , Iii1ii1II11i , iIiiiI , '' )
 if 83 - 83: o0oOOo0O0Ooo / i11iIiiIii % iIii1I11I1II1 . I1 % O0o . OoooooooOO
 try :
  OOoO00 = cache . get ( IiI111111IIII , 1 , 'http://livetv.sc/' )
  iII11I1IiiIi = re . compile ( 'Schedule -->(.+?)end grid' , re . DOTALL ) . findall ( OOoO00 ) [ 0 ]
  o00oO00 = re . compile ( 'class="menu-img.+?<td>[^\d]+([\d\/]+).+?time">[^\d]+([\d:]+).+?<td>.+?<td>[^\w]+([^<]+).+?href="([^"]+)">[^\w]+([^<]+)' , re . DOTALL ) . findall ( iII11I1IiiIi )
  for OO0oOOo , time , oO0Ooo0ooOO0 , url , i1IIiIii1i in o00oO00 :
   oO0Ooo0ooOO0 = oO0Ooo0ooOO0 . strip ( )
   i1IIiIii1i = i1IIiIii1i . strip ( )
   O0o0O00Oo0o0 ( "[COLOR blue]%s | [/COLOR][COLOR white][B]%s [/B][/COLOR][COLOR blue]| %s - %s GMT +1[/COLOR]" % ( oO0Ooo0ooOO0 , i1IIiIii1i , OO0oOOo , time ) , url , 300 , Iii1ii1II11i , iIiiiI , '' )
 except :
  o0oO0 . ok ( o0OOO , "Sorry, we could not find any live links at the moment. Please try again later." )
  quit ( )
  if 94 - 94: o0oOOo0O0Ooo + OoooooooOO * I1 - Oo0Ooo . iII111ii - o0oOOo0O0Ooo
def I1i11IiI11i1 ( url ) :
 if 87 - 87: O0o * O0o / I1IiiI / o0oOo0Ooo0O % i1iIIII
 OOoO00 = cache . get ( IiI111111IIII , 1 , 'http://livetv.sc/' )
 iII11I1IiiIi = re . compile ( 'sports-channels-inner(.+?)end grid' , re . DOTALL ) . findall ( OOoO00 ) [ 0 ]
 OooOOO0O00 = re . compile ( 'href="([^"]+)"\stitle="(?!Channels)([^"]+)"' ) . findall ( iII11I1IiiIi )
 for url , I1I in OooOOO0O00 :
  O0o0O00Oo0o0 ( I1I , url , 300 , Iii1ii1II11i , iIiiiI , '' )
  if 29 - 29: o0oOOo0O0Ooo % iIii1I11I1II1 . OoooooooOO % OoooooooOO % II111iiii / iIIIiI11
  if 70 - 70: i11iIiiIii % iIIIiI11
def I11Ii11iI1 ( name , url , iconimage ) :
 if 39 - 39: I1IiiI * i11iIiiIii - O0o / iII111ii % oOo0Oo % I1
 try :
  OOoO00 = IiI111111IIII ( url )
  url = re . compile ( '<iframe.+?src="([^"]+)"' ) . findall ( OOoO00 ) [ 0 ]
  OOoO00 = IiI111111IIII ( url )
  OOoO00 = re . compile ( '<iframe.+?src="([^"]+)"' ) . findall ( OOoO00 ) [ 0 ]
  url = 'plugin://plugin.video.SportsDevil/?mode=1&item=catcher%3dstreams%26url=' + OOoO00 + '%26referer=no%26icon%3d' + Iii1ii1II11i
  III ( name , url , iconimage )
 except :
  o0oO0 . ok ( o0OOO , "Sorry, we could not find any live links at the moment. Please try again later." )
  quit ( )
  if 65 - 65: O0o - o0oOo0Ooo0O % OoooooooOO / OoooooooOO % OoooooooOO
def oOoOoo0 ( url ) :
 if 16 - 16: I1IiiI
 IIi1I11I1II ( "[COLOR white][B]Live Channels[/B][/COLOR]" , url , 298 , Iii1ii1II11i , iIiiiI , '' )
 try :
  IIIII1iii = 'http://cricbox.net/'
  OOoO00 = cache . get ( IiI111111IIII , 1 , IIIII1iii )
  iII11I1IiiIi = re . compile ( '<td><i\s.+?href="([^"]+)">.+?>([^<]+).+?px">([^&<]+).+?>([^<]+).+?dt">([\d:]+)' , re . DOTALL ) . findall ( OOoO00 )
  for url , oO0Ooo0ooOO0 , IIiiii , iI111i1I1II , O00OO in iII11I1IiiIi :
   url = IIIII1iii + url + '/'
   O0o0O00Oo0o0 ( "[COLOR blue]%s | [/COLOR][COLOR white]Starts %s %s GMT, ends %s[/COLOR]" % ( oO0Ooo0ooOO0 , IIiiii , iI111i1I1II , O00OO ) , url , 306 , Iii1ii1II11i , iIiiiI , '' )
 except :
  o0oO0 . ok ( o0OOO , "Sorry, we could not find any live links at the moment. Please try again later." )
  quit ( )
  if 29 - 29: Oo0Ooo % OoO0O00 % iII111ii . o0oOOo0O0Ooo / OoooooooOO * o0oOo0Ooo0O
def o0OoO000O ( url ) :
 if 94 - 94: OoOoOO00 . O0 / i111IiI . I1ii11iIi11i - i1IIi
 OOoO00 = cache . get ( IiI111111IIII , 1 , 'http://cricbox.net/' )
 OooOOO0O00 = re . compile ( 'class="has-sub".+?href="([^"]+).+?(?:icon|icon2)\s([^"]+)' ) . findall ( OOoO00 )
 for url , I1I in OooOOO0O00 :
  url += '/'
  O0o0O00Oo0o0 ( I1I , url , 306 , Iii1ii1II11i , iIiiiI , '' )
  if 26 - 26: OoO0O00 - i1iIIII . o0oOOo0O0Ooo
def OO0o0o0oo0O ( name , url , iconimage ) :
 if 40 - 40: o0oOOo0O0Ooo + Oo0Ooo . o0oOOo0O0Ooo % o0oOo0Ooo0O
 try :
  OOoO00 = IiI111111IIII ( url )
  url = re . compile ( '<iframe.+?src="([^"]+)"' ) . findall ( OOoO00 ) [ 0 ]
  OOoO00 = IiI111111IIII ( url )
  if 'cricbox.co' in OOoO00 :
   url = re . compile ( '<a\shref="([^"]+)"' ) . findall ( OOoO00 ) [ 0 ]
   OOoO00 = IiI111111IIII ( url )
   url = re . compile ( '<iframe.+?src="([^"]+)"' ) . findall ( OOoO00 ) [ 0 ]
  url = 'plugin://plugin.video.SportsDevil/?mode=1&item=catcher%3dstreams%26url=' + url + '%26referer=no%26icon%3d' + Iii1ii1II11i
  III ( name , url , iconimage )
 except :
  o0oO0 . ok ( o0OOO , "Sorry, we could not find any live links at the moment. Please try again later." )
  quit ( )
  if 15 - 15: i111IiI * Oo0Ooo % I1ii11iIi11i * iIii1I11I1II1 - i11iIiiIii
def Oo00OOOOoo0oo ( ) :
 if 80 - 80: oOo0Oo * OoOoOO00 * II111iiii - O0 . OoOoOO00 % I1IiiI
 II1 = IiI111111IIII ( 'http://arenavision.in/iguide' )
 O0iII = re . compile ( '<tr><td class="auto-style3"(.+?)</tr>' , re . DOTALL ) . findall ( II1 )
 if 32 - 32: I1IiiI - I1ii11iIi11i - Oo0Ooo
 for i1I1iI1iIi111i in O0iII :
  try :
   iiI1i11II = re . compile ( 'style="width:.+?">(.+?)</td' , re . DOTALL ) . findall ( i1I1iI1iIi111i )
   OO0oOOo = iiI1i11II [ 0 ]
   time = iiI1i11II [ 1 ]
   II11 = iiI1i11II [ 2 ]
   I1iii = iiI1i11II [ 3 ] . title ( )
   o0 = iiI1i11II [ 4 ] . replace ( '<br/>' , ' ' ) . title ( ) . replace ( '-' , '[COLOR yellow] vs [/COLOR]' )
   oOO0OO0O = iiI1i11II [ 5 ]
   i111IiI1I = I1iii + '|SPLIT|' + oOO0OO0O
   O0o0O00Oo0o0 ( '[COLOR white][B]' + II11 + ' - ' + I1iii + '[/COLOR][COLOR blue][B] | ' + o0 + '[/B][/COLOR] - [COLOR white]' + OO0oOOo + ' | [COLOR orangered][B]' + time + '[/B][/COLOR]' , i111IiI1I , 97 , Iii1ii1II11i , iIiiiI )
  except : pass
 i11i1I1 = ii1I ( )
 if 78 - 78: i111IiI / II111iiii % OoOoOO00
 if i11i1I1 == "Jarvis" :
  xbmc . executebuiltin ( 'Container.SetViewMode(50)' )
 elif i11i1I1 == "Krypton" :
  xbmc . executebuiltin ( 'Container.SetViewMode(55)' )
 else : xbmc . executebuiltin ( 'Container.SetViewMode(50)' )
 if 52 - 52: i1iIIII - iIIIiI11 * O0o
def Ii1I11I ( name , url , iconimage ) :
 if 36 - 36: O0 + Oo0Ooo
 name , url = url . split ( '|SPLIT|' )
 iII11I1IiiIi = [ ]
 iIIIi1i1I11i = False
 if '-' in url or '<br/>' in url :
  iIIIi1i1I11i = True
  if 55 - 55: Oo0Ooo - i1iIIII
 if iIIIi1i1I11i :
  O0OO0O = url . split ( '<br/>' )
  for IiiiIiiI in O0OO0O :
   o00O , i1i = IiiiIiiI . split ( ' ' )
   if '-' in o00O :
    IIioo0OO , IiiI11i1I = o00O . split ( '-' )
    iII11I1IiiIi . append ( ( IIioo0OO , i1i ) )
    iII11I1IiiIi . append ( ( IiiI11i1I , i1i ) )
   else :
    iII11I1IiiIi . append ( ( o00O , i1i ) )
  OOo0iiIii1IIi = [ ]
  ii1IiIiI1 = 1
  for OOoO00 in iII11I1IiiIi :
   OOo0iiIii1IIi . append ( '[COLOR white]Link %s %s[/COLOR]' % ( ii1IiIiI1 , OOoO00 [ 1 ] ) )
   ii1IiIiI1 += 1
   if 90 - 90: o0oOOo0O0Ooo - i11iIiiIii + i1IIi - i111IiI % Oo0Ooo
  OoooO0oO = o0oO0 . select ( "[COLOR red]Please select an stream[/COLOR]" , OOo0iiIii1IIi )
  if 59 - 59: i1iIIII % iIii1I11I1II1 . i1IIi + II111iiii * iII111ii
  if OoooO0oO :
   o00O = iII11I1IiiIi [ OoooO0oO ] [ 0 ]
   if len ( o00O ) < 2 : o00O = '0' + o00O
   url = 'http://arenavision.in/' + o00O
  else : quit ( )
  if 41 - 41: i111IiI % I1ii11iIi11i
 else :
  o00O , i1i = url . split ( ' ' )
  if len ( o00O ) < 2 : o00O = '0' + o00O
  url = 'http://arenavision.in/' + o00O
  if 12 - 12: i1iIIII
 ooOo0O ( name , url , iconimage )
 if 37 - 37: i111IiI % OoO0O00
def ooOo0O ( name , url , iconimage ) :
 if 79 - 79: I1ii11iIi11i + I1IiiI / I1IiiI
 try :
  II1 = IiI111111IIII ( url )
  O0iII = re . compile ( 'this.loadPlayer(.+?),' , re . DOTALL ) . findall ( II1 ) [ 0 ]
  url = O0iII . replace ( '(' , '' ) . replace ( ')' , '' ) . replace ( '"' , '' ) . replace ( ' ' , '' )
  if 71 - 71: i1iIIII * OoO0O00 % OoooooooOO % OoO0O00 / I1IiiI
  IIi = 'plugin://program.plexus/?url=acestream://' + str ( url ) + '&mode=1&name=acestream+' + str ( name )
  if 56 - 56: OoooooooOO % i11iIiiIii * iIii1I11I1II1 . OoO0O00 * O0
  Oo00oo0000OO ( name , IIi , iconimage )
 except : quit ( )
 if 23 - 23: i11iIiiIii
def II1I11IIi ( ) :
 if 66 - 66: i11iIiiIii / o0oOOo0O0Ooo - OoooooooOO / i1IIi . i11iIiiIii
 i111IiI1I = 'http://www.hesgoal.com/league/11/Football_News'
 IIIII1iii11 = datetime . date . today ( )
 IIi1I = datetime . datetime . strftime ( IIIII1iii11 , '%A %d %B %Y' )
 if 27 - 27: O0 . oOo0Oo / iIIIiI11
 O0o0O00Oo0o0 ( '[COLOR mediumpurple][B]EVENTS FOR ' + str ( IIi1I ) . upper ( ) + '[/B][/COLOR]' , i111IiI1I , 999 , Iii1ii1II11i , iIiiiI , "" )
 O0o0O00Oo0o0 ( '##############################################' , i111IiI1I , 999 , Iii1ii1II11i , iIiiiI , "" )
 if 96 - 96: I1ii11iIi11i % o0oOo0Ooo0O % i111IiI - o0oOo0Ooo0O % OoOoOO00 + I1ii11iIi11i
 II1 = IiI111111IIII ( i111IiI1I )
 O0iII = re . compile ( '<div class="file browse_file">(.+?)<p class="played">' , re . DOTALL ) . findall ( II1 )
 iIOo0O = 0
 iIII1I111III = 0
 for i1I1iI1iIi111i in O0iII :
  try :
   o0oo0O = re . compile ( 'title="(.+?)"' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   try :
    Ii11 = re . compile ( '<p>(.+?)</p>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   except : Ii11 = "Unknown"
   i111IiI1I = re . compile ( '<a href="(.+?)">' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   I1I1I = re . compile ( '<img src="(.+?)"' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
  except : iIOo0O = 1
  if 8 - 8: Oo0Ooo + II111iiii * i1iIIII * OoOoOO00 * I1 / iII111ii
  if iIOo0O == 0 :
   if 'vs' in o0oo0O :
    I1I = '[COLOR yellow][B]' + o0oo0O + ' - ' + '[/B][/COLOR][COLOR aqua]' + Ii11 + '[/COLOR]'
    iIII1I111III = iIII1I111III + 1
    O0o0O00Oo0o0 ( I1I , i111IiI1I , 206 , I1I1I , iIiiiI , '' )
  iIOo0O = 0
  if 21 - 21: O0o / OoooooooOO
 if iIII1I111III == 0 :
  o0oO0 . ok ( o0OOO , "[COLOR yellow]We could not find any live games at this time.[/COLOR]" , "[COLOR yellow]Please try again later.[/COLOR]" )
  quit ( )
  if 11 - 11: i1iIIII % i111IiI - i11iIiiIii - O0o + o0oOo0Ooo0O + iII111ii
 o0ooOo0OOOO0o ( )
 if 98 - 98: i1iIIII + i1IIi . I1IiiI - II111iiii - o0oOOo0O0Ooo
def iIIi1I1ii ( name , url , iconimage ) :
 if 14 - 14: O0 / i1IIi / Oo0Ooo + iIii1I11I1II1
 II1 = IiI111111IIII ( url )
 ooO00O00oOO = re . compile ( '<iframe.+?src="(.+?)"' ) . findall ( II1 ) [ 0 ]
 if 40 - 40: iIIIiI11 . O0o + I1IiiI + I1ii11iIi11i + oOo0Oo
 if not "http" in ooO00O00oOO :
  ooO00O00oOO = ooO00O00oOO . replace ( "//" , "" )
  url = "http://" + ooO00O00oOO
 else :
  url = ooO00O00oOO
  if 26 - 26: iIii1I11I1II1
 OOOo = url
 if 79 - 79: OoOoOO00 % iII111ii % Oo0Ooo
 Ii1 = IiI111111IIII ( url )
 try :
  ooO00O00oOO = re . compile ( "atob(.+?)," ) . findall ( Ii1 ) [ 0 ]
  ooO00O00oOO = ooO00O00oOO . replace ( "('" , "" ) . replace ( "')" , "" )
  url = base64 . b64decode ( ooO00O00oOO )
 except : url = re . compile ( "source: '(.+?)'" ) . findall ( Ii1 ) [ 0 ]
 url = url + '|User-Agent=Mozilla/5.0 (Windows NT 10.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.87 Safari/537.36&Referer=' + OOOo + '&Host=91.121.222.160:1935&X-Requested-With=ShockwaveFlash/24.0.0.186'
 Oo00oo0000OO ( name , url , iconimage )
 if 34 - 34: iIIIiI11 - OoooooooOO . I1IiiI / II111iiii
def II1II ( url ) :
 if 97 - 97: i11iIiiIii / i1iIIII % oOo0Oo
 II1 = IiI111111IIII ( url )
 O0iII = re . compile ( '<div class="col-lg-3 col-md-4 col-sm-6 col-xs1-8 col-xs-12">(.+?)</div> </div>' , re . DOTALL ) . findall ( II1 )
 if 71 - 71: OoooooooOO
def iIiI1iiiI1ii ( name , url , iconimage ) :
 if 29 - 29: iIIIiI11 . i1iIIII . I1IiiI * OoOoOO00
 OO00o = [ ]
 OOOOoOO0O = [ ]
 ii11I = [ ]
 OOoO00 = IiI111111IIII ( url )
 o00oO = re . compile ( '<title>' + re . escape ( name ) + '</title>(.+?)</item>' , re . DOTALL ) . findall ( OOoO00 ) [ 0 ]
 iII11I1IiiIi = re . compile ( '<rutubeplaylist>(.+?)</rutubeplaylist>' ) . findall ( o00oO )
 if 47 - 47: oOo0Oo
 for oO in iII11I1IiiIi :
  iIIi1IIi = oO
  if '(' in oO :
   oO = oO . split ( '(' ) [ 0 ]
   i111i11I1ii = str ( iIIi1IIi . split ( '(' ) [ 1 ] . replace ( ')' , '' ) )
   OO00o . append ( i111i11I1ii )
   OOOOoOO0O . append ( oO )
   ii11I = list ( zip ( OO00o , OOOOoOO0O ) )
   if 64 - 64: O0o / i11iIiiIii / o0oOOo0O0Ooo . OoooooooOO
 i1iIiIIIII = sorted ( ii11I )
 if 11 - 11: I1 % i1IIi
 for ii11I1 , url in i1iIiIIIII :
  II1 = IiI111111IIII ( url )
  O0iII = re . compile ( '<article id="(.+?)</article>' , re . DOTALL ) . findall ( II1 )
  for i1I1iI1iIi111i in O0iII :
   o0oo0O = re . compile ( 'title="(.+?)"' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   url = re . compile ( '<a class="preview-link" href="(.+?)"' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   iconimage = re . compile ( 'https://pic.rutube.ru(.+?)size' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   iconimage = "https://pic.rutube.ru" + iconimage + "size=l"
   if ii11I1 . lower ( ) == "all" :
    o0oo0O = o0oo0O . replace ( '.' , ' ' )
    O0o0O00Oo0o0 ( o0oo0O , url , 2 , iconimage , iconimage , '' )
   elif ii11I1 . lower ( ) in o0oo0O . lower ( ) :
    o0oo0O = o0oo0O . replace ( '.' , ' ' )
    O0o0O00Oo0o0 ( o0oo0O , url , 2 , iconimage , iconimage , '' )
    if 34 - 34: O0 * O0 % OoooooooOO + iIIIiI11 * iIii1I11I1II1 % i111IiI
 try :
  O0iII = re . compile ( '<a class="paginator-item active(.+?)</html>' ) . findall ( II1 )
  ooI1i = str ( O0iII )
  I1iI1I1 = re . compile ( 'href="(.+?)"' ) . findall ( ooI1i ) [ 1 ]
  url = I1iI1I1 + "|SPLIT|" + ii11I1
  IIi1I11I1II ( "[COLOR mediumpurple][B]Next Page -->[/B][/COLOR]" , url , 91 , Iii1ii1II11i , iIiiiI , '' )
 except : pass
 if 48 - 48: I1IiiI / i11iIiiIii - o0oOOo0O0Ooo * O0o / OoooooooOO
def OoOoi1i ( name , url , iconimage ) :
 if 5 - 5: I1ii11iIi11i + O0 + O0 . oOo0Oo - o0oOo0Ooo0O
 url , ii11I1 = url . split ( "|SPLIT|" )
 if 63 - 63: O0o
 II1 = IiI111111IIII ( url )
 O0iII = re . compile ( '<article id="(.+?)</article>' , re . DOTALL ) . findall ( II1 )
 for i1I1iI1iIi111i in O0iII :
  o0oo0O = re . compile ( 'title="(.+?)"' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
  url = re . compile ( '<a class="preview-link" href="(.+?)"' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
  iconimage = re . compile ( 'https://pic.rutube.ru(.+?)size' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
  iconimage = "https://pic.rutube.ru" + iconimage + "size=l"
  if ii11I1 . lower ( ) == "all" :
   o0oo0O = o0oo0O . replace ( '.' , ' ' )
   O0o0O00Oo0o0 ( o0oo0O , url , 2 , iconimage , iconimage , '' )
  elif ii11I1 . lower ( ) in o0oo0O . lower ( ) :
   o0oo0O = o0oo0O . replace ( '.' , ' ' )
   O0o0O00Oo0o0 ( o0oo0O , url , 2 , iconimage , iconimage , '' )
   if 71 - 71: i1IIi . i111IiI * iIIIiI11 % OoooooooOO + i1iIIII
 try :
  O0iII = re . compile ( '<a class="paginator-item active(.+?)</html>' ) . findall ( II1 )
  ooI1i = str ( O0iII )
  I1iI1I1 = re . compile ( 'href="(.+?)"' ) . findall ( ooI1i ) [ 1 ]
  url = I1iI1I1 + "|SPLIT|" + ii11I1
  IIi1I11I1II ( "[COLOR mediumpurple][B]Next Page -->[/B][/COLOR]" , url , 91 , Iii1ii1II11i , iIiiiI , '' )
 except : pass
 if 36 - 36: iII111ii
def i1iiI ( name , url , iconimage ) :
 if 74 - 74: oOo0Oo % I1ii11iIi11i
 OO0O00 , oOO00oOO = re . findall ( '(.+?)\|regex=(.+?)$' , url ) [ 0 ]
 OO0O00 += urllib . unquote_plus ( oOO00oOO )
 url = regex . resolve ( OO0O00 )
 if 7 - 7: II111iiii
 Oo00oo0000OO ( name , url , iconimage )
 if 27 - 27: O0o . OoooooooOO + i11iIiiIii
def O0OO ( url ) :
 if 39 - 39: I1ii11iIi11i + I1IiiI - iIii1I11I1II1 - o0oOOo0O0Ooo
 if "iptvembed" in url :
  II1 = IiI111111IIII ( url )
  O0iII = re . compile ( '#EXTM3U<br />(.+?)<div></div>' , re . DOTALL ) . findall ( II1 )
  for i1I1iI1iIi111i in O0iII :
   i1I1iI1iIi111i = replace ( '<br />' , '\n' )
   i1I1iI1iIi111i = replace ( '</pre>' , '' )
   url = i1I1iI1iIi111i
   if 7 - 7: iII111ii . OoOoOO00 / I1ii11iIi11i . i1iIIII * I1 - II111iiii
 if "sourcetv" in url :
  II1 = IiI111111IIII ( url )
  O0iII = re . compile ( '<pre class="alt2"(.+?)<br class="clearer" />' , re . DOTALL ) . findall ( II1 )
  for i1I1iI1iIi111i in O0iII :
   i1I1iI1iIi111i = replace ( '<br />' , '\n' )
   i1I1iI1iIi111i = replace ( '</pre>' , '' )
   url = i1I1iI1iIi111i
   if 37 - 37: oOo0Oo . OoOoOO00 / O0 * iIIIiI11
 url = url . replace ( '#AAASTREAM:' , '#A:' )
 url = url . replace ( '#EXTINF:' , '#A:' )
 I11o0oO00oO0o0o0 = re . compile ( '^#A:-?[0-9]*(.*?),(.*?)\n(.*?)$' , re . I + re . M + re . U + re . S ) . findall ( url )
 III11iiii11i1 = [ ]
 for I1IIIiI1I1ii1 , iiiI1I1iIIIi1 , url in I11o0oO00oO0o0o0 :
  ooOo0OoO = { "params" : I1IIIiI1I1ii1 , "display_name" : iiiI1I1iIIIi1 , "url" : url }
  III11iiii11i1 . append ( ooOo0OoO )
 list = [ ]
 for oOO0OO0O in III11iiii11i1 :
  ooOo0OoO = { "display_name" : oOO0OO0O [ "display_name" ] , "url" : oOO0OO0O [ "url" ] }
  I11o0oO00oO0o0o0 = re . compile ( ' (.+?)="(.+?)"' , re . I + re . M + re . U + re . S ) . findall ( oOO0OO0O [ "params" ] )
  for i1iiIIi1I , iiI1I1IIi11i1 in I11o0oO00oO0o0o0 :
   ooOo0OoO [ i1iiIIi1I . strip ( ) . lower ( ) . replace ( '-' , '_' ) ] = iiI1I1IIi11i1 . strip ( )
  list . append ( ooOo0OoO )
  if 45 - 45: o0oOo0Ooo0O % o0oOOo0O0Ooo - o0oOo0Ooo0O
 i1i1 = 0
 for oOO0OO0O in list :
  i1i1 = 1
  I1I = oO0ooOoO ( oOO0OO0O [ "display_name" ] )
  url = oO0ooOoO ( oOO0OO0O [ "url" ] )
  url = url . replace ( '\\r' , '' ) . replace ( '\\t' , '' ) . replace ( '\r' , '' ) . replace ( '\t' , '' ) . replace ( ' ' , '' ) . replace ( 'm3u8' , 'm3u8' )
  if not ".m3u8" in url :
   O0o0O00Oo0o0 ( '[COLOR white]' + I1I + '[/COLOR]' , url , 2 , Iii1ii1II11i , iIiiiI , '' )
  else :
   IIi1I11I1II ( '[COLOR white]' + I1I + '[/COLOR]' , url , 10 , Iii1ii1II11i , iIiiiI , '' )
   if 59 - 59: O0 % Oo0Ooo
 if i1i1 == 0 :
  O0o0O00Oo0o0 ( '[COLOR red]Sorry, No links found in this list.[/COLOR]' , url , 999 , Iii1ii1II11i , iIiiiI , '' )
  if 92 - 92: i111IiI % iIIIiI11 / I1ii11iIi11i % I1ii11iIi11i * I1IiiI
def OooO00oOOo0Oo ( url ) :
 if 5 - 5: o0oOOo0O0Ooo . O0 / Oo0Ooo % OoO0O00
 OOoO00 = IiI111111IIII ( url )
 IIi = url
 O0iII = re . compile ( '<item>(.+?)</item>' ) . findall ( OOoO00 )
 for i1I1iI1iIi111i in O0iII :
  if 60 - 60: II111iiii / iIii1I11I1II1 + I1ii11iIi11i . i11iIiiIii
  iII11I1IiiIi = re . compile ( '<search>(.+?)</search>' ) . findall ( i1I1iI1iIi111i )
  if len ( iII11I1IiiIi ) == 1 :
   I1I = re . compile ( '<title>(.+?)</title>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   url = re . compile ( '<search>(.+?)</search>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   I1I1I = re . compile ( '<thumbnail>(.+?)</thumbnail>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   url = I1I + "!" + url + "!" + I1I1I
   I1I = '[COLOR white]' + I1I + '[/COLOR]'
   IIi1I11I1II ( I1I , url , 20 , I1I1I , I1I1I )
   if 40 - 40: o0oOOo0O0Ooo
  elif len ( iII11I1IiiIi ) > 1 :
   I1I = re . compile ( '<title>(.+?)</title>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   I1I1I = re . compile ( '<thumbnail>(.+?)</thumbnail>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   url = IIi + "!" + I1I + "!" + I1I1I
   I1I = '[COLOR white]' + I1I + '[/COLOR]'
   IIi1I11I1II ( I1I , url , 22 , I1I1I , I1I1I )
   if 78 - 78: iIii1I11I1II1
 xbmc . executebuiltin ( 'Container.SetViewMode(500)' )
 if 56 - 56: OoooooooOO - I1 - i1IIi
def I1i1I ( name , url , iconimage ) :
 IIIii = [ ]
 O00OooOo00o = [ ]
 iii1I1Iii = [ ]
 OOoO00 = IiI111111IIII ( url )
 o00oO = re . compile ( '<title>' + re . escape ( name ) + '</title>(.+?)</item>' , re . DOTALL ) . findall ( OOoO00 ) [ 0 ]
 iconimage = re . compile ( '<thumbnail>(.+?)</thumbnail>' ) . findall ( o00oO ) [ 0 ]
 iII11I1IiiIi = re . compile ( '<link>(.+?)</link>' ) . findall ( o00oO )
 iIII1I111III = 1
 for oO in iII11I1IiiIi :
  iIIi1IIi = oO
  if '(' in oO :
   oO = oO . split ( '(' ) [ 0 ]
   i111i11I1ii = str ( iIIi1IIi . split ( '(' ) [ 1 ] . replace ( ')' , '' ) )
   IIIii . append ( oO )
   O00OooOo00o . append ( i111i11I1ii )
  else :
   IIIii . append ( oO )
   O00OooOo00o . append ( 'Link ' + str ( iIII1I111III ) )
  iIII1I111III = iIII1I111III + 1
 name = '[COLOR red]' + name + '[/COLOR]'
 o0oO0 = xbmcgui . Dialog ( )
 Oo = o0oO0 . select ( name , O00OooOo00o )
 if Oo < 0 :
  quit ( )
 else :
  url = IIIii [ Oo ]
  print url
  if 82 - 82: i111IiI + iII111ii
 url = IIIii [ Oo ]
 name = O00OooOo00o [ Oo ]
 Oo00oo0000OO ( name , url , Iii1ii1II11i )
 if 12 - 12: oOo0Oo
def Oo0oOooOoOo ( name , url , iconimage ) :
 if 49 - 49: i1iIIII . I1ii11iIi11i . i11iIiiIii - II111iiii / i111IiI
 IIIii = [ ]
 O00OooOo00o = [ ]
 iii1I1Iii = [ ]
 ooOo0O0o0 = [ ]
 url = url . replace ( 'NOTPLAY' , '' )
 OOoO00 = IiI111111IIII ( url )
 o00oO = re . compile ( '<title>' + re . escape ( name ) + '</title>(.+?)</item>' , re . DOTALL ) . findall ( OOoO00 ) [ 0 ]
 iII11I1IiiIi = re . compile ( '<plexus>(.+?)</plexus>' ) . findall ( o00oO )
 iconimage = re . compile ( '<thumbnail>(.+?)</thumbnail>' ) . findall ( o00oO ) [ 0 ]
 if 65 - 65: o0oOo0Ooo0O + O0
 IiII1iiI = "plugin://program.plexus/?url="
 iII = "&mode=1&name=acestream+"
 iIII1I111III = 0
 if 63 - 63: o0oOOo0O0Ooo * iIIIiI11
 for oO in iII11I1IiiIi :
  iIII1I111III = iIII1I111III + 1
  if 63 - 63: iIIIiI11 * I1ii11iIi11i . OoooooooOO / i1iIIII * Oo0Ooo . o0oOo0Ooo0O
  iIIi1IIi = oO
  if '(' in oO :
   oO = oO . split ( '(' ) [ 0 ]
   i111i11I1ii = str ( iIIi1IIi . split ( '(' ) [ 1 ] . replace ( ')' , '' ) )
   IIIii . append ( oO )
   O00OooOo00o . append ( i111i11I1ii )
   ooOo0O0o0 . append ( 'Stream ' + str ( iIII1I111III ) )
  else :
   IIIii . append ( oO )
   O00OooOo00o . append ( 'Link ' + str ( iIII1I111III ) )
   i111i11I1ii = name
   if 62 - 62: i1IIi / o0oOo0Ooo0O . I1IiiI * o0oOOo0O0Ooo
   if 21 - 21: o0oOOo0O0Ooo
 if iIII1I111III > 1 :
  o0oO0 = xbmcgui . Dialog ( )
  Oo = o0oO0 . select ( name , O00OooOo00o )
  if Oo < 0 :
   quit ( )
  else :
   O0Oo0 = IIIii [ Oo ]
   if not 'acestream://' in O0Oo0 :
    O0Oo0 = 'acestream://' + O0Oo0
   url = IiII1iiI + O0Oo0 + iII + O00OooOo00o [ Oo ]
   name = O00OooOo00o [ Oo ]
 else :
  O0Oo0 = oO
  if not 'acestream://' in O0Oo0 :
   O0Oo0 = 'acestream://' + O0Oo0
  url = IiII1iiI + O0Oo0 + iII + i111i11I1ii
  name = i111i11I1ii
  if 98 - 98: oOo0Oo
 Oo00oo0000OO ( name , url , Iii1ii1II11i )
 if 92 - 92: oOo0Oo - iIii1I11I1II1
def I11III111i ( name , url , iconimage ) :
 if 78 - 78: OoooooooOO
 IIIii = [ ]
 O00OooOo00o = [ ]
 iii1I1Iii = [ ]
 ooOo0O0o0 = [ ]
 url = url . replace ( 'NOTPLAY' , '' )
 OOoO00 = IiI111111IIII ( url )
 o00oO = re . compile ( '<title>' + re . escape ( name ) + '</title>(.+?)</item>' , re . DOTALL ) . findall ( OOoO00 ) [ 0 ]
 iII11I1IiiIi = re . compile ( '<sportsdevil>(.+?)</sportsdevil>' ) . findall ( o00oO )
 iconimage = re . compile ( '<thumbnail>(.+?)</thumbnail>' ) . findall ( o00oO ) [ 0 ]
 if 77 - 77: I1ii11iIi11i / i1IIi / Oo0Ooo % i1iIIII
 I1I1Iiii1 = 'plugin://plugin.video.SportsDevil/?mode=1&amp;item=catcher%3dstreams%26title=' + str ( name ) + '%26url='
 if 2 - 2: I1 + o0oOo0Ooo0O
 iIII1I111III = 1
 if 76 - 76: oOo0Oo
 for oO in iII11I1IiiIi :
  iIIi1IIi = oO
  if '(' in oO :
   oO = oO . split ( '(' ) [ 0 ]
   i111i11I1ii = str ( iIIi1IIi . split ( '(' ) [ 1 ] . replace ( ')' , '' ) )
   IIIii . append ( oO )
   O00OooOo00o . append ( i111i11I1ii )
   ooOo0O0o0 . append ( 'Stream ' + str ( iIII1I111III ) )
  else :
   IIIii . append ( oO )
   O00OooOo00o . append ( 'Link ' + str ( iIII1I111III ) )
   if 99 - 99: I1IiiI + i1IIi + i11iIiiIii + Oo0Ooo % O0o / I1
  iIII1I111III = iIII1I111III + 1
  if 60 - 60: i111IiI * OoOoOO00 - i11iIiiIii % o0oOo0Ooo0O
 name = '[COLOR red]' + name + '[/COLOR]'
 if 52 - 52: I1ii11iIi11i % O0o - i11iIiiIii
 o0oO0 = xbmcgui . Dialog ( )
 Oo = o0oO0 . select ( name , O00OooOo00o )
 if Oo < 0 :
  quit ( )
 else :
  Oo0O0 = O00OooOo00o [ Oo ]
  Ooo0OOoOoO0 = "/"
  if not Oo0O0 . endswith ( Ooo0OOoOoO0 ) :
   oOo0OOoO0 = Oo0O0 + "/"
  else :
   oOo0OOoO0 = Oo0O0
  url = I1I1Iiii1 + IIIii [ Oo ] + "%26referer=" + oOo0OOoO0
  if 30 - 30: iIIIiI11 / OoO0O00 + O0o
 name = O00OooOo00o [ Oo ]
 Oo00oo0000OO ( name , url , Iii1ii1II11i )
 if 6 - 6: iIIIiI11 . I1 + i111IiI . oOo0Oo
def oOoO0o ( url ) :
 if 46 - 46: oOo0Oo % i111IiI
 try :
  oOO , url = url . split ( '|SPLIT|' )
 except : oOO , url , IIi , I1I = url . split ( '|SPLIT|' )
 if 53 - 53: o0oOOo0O0Ooo % Oo0Ooo * Oo0Ooo
 if oOO == 'true' :
  ooI1i = ''
  iIII = xbmc . Keyboard ( ooI1i , 'Enter Search Term' )
  iIII . doModal ( )
  if iIII . isConfirmed ( ) :
   ooI1i = iIII . getText ( )
   if len ( ooI1i ) > 1 :
    ii11I1 = ooI1i . lower ( )
   else : quit ( )
   if 77 - 77: i1iIIII - iII111ii . I1 / I1IiiI + OoO0O00 % O0o
  I11i1II = [ ]
  Ooo = [ ]
  iIiI = [ ]
  ii11I = [ ]
  if 86 - 86: iII111ii . I1ii11iIi11i / OoO0O00 + O0
  iiIIIII1i1iI . create ( o0OOO , "[COLOR white]We are searching for " + ii11I1 + ".[/COLOR]" , '' , '[COLOR yellow]Please wait...[/COLOR]' )
  iiIIIII1i1iI . update ( 0 )
  if 61 - 61: O0o - I1ii11iIi11i
  iIII1I111III = 1
  oOo = 0
  II1 = IiI111111IIII ( url )
  O0iII = re . compile ( '<search>(.+?)</search>' , re . DOTALL ) . findall ( II1 )
  Oo0oOo0O0O0o = len ( O0iII )
  for i1I1iI1iIi111i in O0iII :
   IiiIIiIIii1iI = 100 * int ( iIII1I111III ) / int ( Oo0oOo0O0O0o )
   iiIIIII1i1iI . update ( IiiIIiIIii1iI , '' , '[COLOR blue]Searching list ' + str ( iIII1I111III ) + ' of ' + str ( Oo0oOo0O0O0o ) + '[/COLOR]' )
   Oo0O0O000 = IiI111111IIII ( i1I1iI1iIi111i )
   O0iII = re . compile ( '<article id="(.+?)</article>' , re . DOTALL ) . findall ( Oo0O0O000 )
   for i1I1I in O0iII :
    o0oo0O = re . compile ( 'title="(.+?)"' ) . findall ( i1I1I ) [ 0 ]
    url = re . compile ( '<a class="preview-link" href="(.+?)"' ) . findall ( i1I1I ) [ 0 ]
    I1I1I = re . compile ( 'https://pic.rutube.ru(.+?)size' ) . findall ( i1I1I ) [ 0 ]
    I1I1I = "https://pic.rutube.ru" + I1I1I + "size=l"
    o0oo0O = o0oo0O . replace ( '.' , ' ' )
    if ii11I1 . lower ( ) in o0oo0O . lower ( ) :
     oOo = oOo + 1
     I11i1II . append ( o0oo0O )
     Ooo . append ( url )
     iIiI . append ( I1I1I )
     ii11I = list ( zip ( I11i1II , Ooo , iIiI ) )
     if 29 - 29: o0oOOo0O0Ooo / Oo0Ooo * I1ii11iIi11i . o0oOOo0O0Ooo
   iIII1I111III = iIII1I111III + 1
   if 64 - 64: O0o / o0oOo0Ooo0O % i11iIiiIii
  i1iIiIIIII = sorted ( ii11I )
  O0o0O00Oo0o0 ( '[B][COLOR dodgerblue]We found ' + str ( oOo ) + ' matches for ' + ii11I1 + '[/B][/COLOR]' , 'url' , 999 , Iii1ii1II11i , iIiiiI , '' )
  O0o0O00Oo0o0 ( '#######################################################' , 'url' , 999 , Iii1ii1II11i , iIiiiI , '' )
  for I1I , url , I1I1I in i1iIiIIIII :
   O0o0O00Oo0o0 ( '[COLOR white]' + I1I + '[/COLOR]' , url , 2 , I1I1I , I1I1I , '' )
   if 3 - 3: iIIIiI11 . o0oOo0Ooo0O % I1IiiI + I1ii11iIi11i
 else :
  if 64 - 64: i1IIi
  I11i1II = [ ]
  Ooo = [ ]
  iIiI = [ ]
  ii11I = [ ]
  if 29 - 29: o0oOOo0O0Ooo / i11iIiiIii / I1IiiI % O0o % i11iIiiIii
  iiIIIII1i1iI . create ( o0OOO , "[COLOR white]We are searching for " + I1I + ".[/COLOR]" , '' , '[COLOR yellow]Please wait...[/COLOR]' )
  iiIIIII1i1iI . update ( 0 )
  if 18 - 18: i1iIIII + oOo0Oo
  iIII1I111III = 1
  oOo = 0
  II1 = IiI111111IIII ( IIi )
  o00oO = re . compile ( '<title>' + re . escape ( I1I ) + '</title>(.+?)</item>' , re . DOTALL ) . findall ( II1 ) [ 0 ]
  iII11I1IiiIi = re . compile ( '<term>(.+?)</term>' ) . findall ( o00oO )
  Oo0O0O000 = IiI111111IIII ( url )
  OO0OO0O = re . compile ( '<search>(.+?)</search>' , re . DOTALL ) . findall ( Oo0O0O000 )
  Oo0oOo0O0O0o = len ( OO0OO0O )
  for i1I1iI1iIi111i in OO0OO0O :
   IiiIIiIIii1iI = 100 * int ( iIII1I111III ) / int ( Oo0oOo0O0O0o )
   iiIIIII1i1iI . update ( IiiIIiIIii1iI , '' , '[COLOR blue]Searching list ' + str ( iIII1I111III ) + ' of ' + str ( Oo0oOo0O0O0o ) + '[/COLOR]' )
   Oo0O0O000 = IiI111111IIII ( i1I1iI1iIi111i )
   O0iII = re . compile ( '<article id="(.+?)</article>' , re . DOTALL ) . findall ( Oo0O0O000 )
   for i1I1I in O0iII :
    o0oo0O = re . compile ( 'title="(.+?)"' ) . findall ( i1I1I ) [ 0 ]
    url = re . compile ( '<a class="preview-link" href="(.+?)"' ) . findall ( i1I1I ) [ 0 ]
    I1I1I = re . compile ( 'https://pic.rutube.ru(.+?)size' ) . findall ( i1I1I ) [ 0 ]
    I1I1I = "https://pic.rutube.ru" + I1I1I + "size=l"
    o0oo0O = o0oo0O . replace ( '.' , ' ' )
    for ii11I1 in iII11I1IiiIi :
     if ii11I1 . lower ( ) in o0oo0O . lower ( ) :
      oOo = oOo + 1
      I11i1II . append ( o0oo0O )
      Ooo . append ( url )
      iIiI . append ( I1I1I )
      ii11I = list ( zip ( I11i1II , Ooo , iIiI ) )
   iIII1I111III = iIII1I111III + 1
   if 75 - 75: I1 / o0oOOo0O0Ooo / i1iIIII / iII111ii % o0oOo0Ooo0O + II111iiii
  i1iIiIIIII = sorted ( ii11I )
  O0o0O00Oo0o0 ( '[B][COLOR dodgerblue]' + I1I + '[/B][/COLOR]' , 'url' , 999 , Iii1ii1II11i , iIiiiI , '' )
  O0o0O00Oo0o0 ( '#######################################################' , 'url' , 999 , Iii1ii1II11i , iIiiiI , '' )
  for I1I , url , I1I1I in i1iIiIIIII :
   O0o0O00Oo0o0 ( '[COLOR white]' + I1I + '[/COLOR]' , url , 2 , I1I1I , I1I1I , '' )
   if 4 - 4: iIIIiI11 - Oo0Ooo - iII111ii - I1 % i11iIiiIii / OoO0O00
def i1iii11 ( url ) :
 if 92 - 92: OoOoOO00 . OoooooooOO - oOo0Oo
 IIIII1iii11 = datetime . date . today ( )
 IIi1I = datetime . datetime . strftime ( IIIII1iii11 , '%A %d %B %Y' )
 if 74 - 74: iIii1I11I1II1 % iIIIiI11 * i1iIIII * iIii1I11I1II1
 O0o0O00Oo0o0 ( '[COLOR dodgerblue]EVENTS FOR ' + str ( IIi1I ) . upper ( ) + '[/COLOR]' , url , 20 , Iii1ii1II11i , iIiiiI , "" )
 O0o0O00Oo0o0 ( '##############################################' , url , 20 , Iii1ii1II11i , iIiiiI , "" )
 if 73 - 73: o0oOOo0O0Ooo % oOo0Oo . i1iIIII
 OOoO00 = IiI111111IIII ( url )
 IIi = url
 O0iII = re . compile ( '<item>(.+?)</item>' ) . findall ( OOoO00 )
 for i1I1iI1iIi111i in O0iII :
  if 60 - 60: OoOoOO00
  iII11I1IiiIi = re . compile ( '<search>(.+?)</search>' ) . findall ( i1I1iI1iIi111i )
  if len ( iII11I1IiiIi ) == 1 :
   I1I = re . compile ( '<title>(.+?)</title>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   url = re . compile ( '<search>(.+?)</search>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   I1I1I = re . compile ( '<thumbnail>(.+?)</thumbnail>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   url = I1I + "!" + url + "!" + I1I1I
   I1I = '[COLOR white]' + I1I + '[/COLOR]'
   IIi1I11I1II ( I1I , url , 20 , I1I1I , I1I1I )
   if 5 - 5: I1IiiI - I1IiiI - I1IiiI * OoooooooOO
  elif len ( iII11I1IiiIi ) > 1 :
   I1I = re . compile ( '<title>(.+?)</title>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   I1I1I = re . compile ( '<thumbnail>(.+?)</thumbnail>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   url = IIi + "!" + I1I + "!" + I1I1I
   I1I = '[COLOR white]' + I1I + '[/COLOR]'
   IIi1I11I1II ( I1I , url , 22 , I1I1I , I1I1I )
   if 28 - 28: iIii1I11I1II1 + iIii1I11I1II1
def iIiIii1ii ( name , url , iconimage ) :
 if 8 - 8: OoO0O00 + OoOoOO00 . iIii1I11I1II1 % O0
 try :
  url , iI11Ii111 , iconimage = url . split ( '!' )
 except :
  o0oO0 . ok ( o0OOO , "[COLOR blue]Sorry there was a problem processing your request.[/COLOR]" , "[COLOR blue]Sporie has plenty of content to choose from :-D[/COLOR]" )
  quit ( )
  if 54 - 54: OoOoOO00 % iIIIiI11 . OoOoOO00 * i1iIIII + OoOoOO00 % i1IIi
 I1I1I11Ii = [ ]
 if 48 - 48: OoooooooOO + O0o % iIii1I11I1II1
 OOoO00 = IiI111111IIII ( url )
 o00oO = re . compile ( '<title>' + re . escape ( iI11Ii111 ) + '</title>(.+?)</item>' , re . DOTALL ) . findall ( OOoO00 ) [ 0 ]
 iconimage = re . compile ( '<thumbnail>(.+?)</thumbnail>' ) . findall ( o00oO ) [ 0 ]
 iII11I1IiiIi = re . compile ( '<search>(.+?)</search>' ) . findall ( o00oO )
 for oO in iII11I1IiiIi :
  I1I1I11Ii . append ( oO )
  if 11 - 11: I1IiiI % i111IiI - OoO0O00 - O0o + o0oOOo0O0Ooo
 iiIIIII1i1iI . create ( o0OOO , "[COLOR blue]We are just getting the channel links for you.[/COLOR]" , '[COLOR yellow]Please wait...[/COLOR]' , '' )
 iiIIIII1i1iI . update ( 0 )
 if 98 - 98: iIIIiI11 + i111IiI - OoO0O00
 OOo0oOO0o0oo0 = 0
 if 78 - 78: i1iIIII + iIIIiI11 . iII111ii
 I11i1II = [ ]
 Ooo = [ ]
 OOo0 = [ ]
 ii11I = [ ]
 if 91 - 91: iIii1I11I1II1 . o0oOOo0O0Ooo . I1ii11iIi11i + OoooooooOO
 iiIIIII1i1iI . update ( 0 )
 o0o0O0Oo = 0
 if 1 - 1: iIii1I11I1II1 + Oo0Ooo / O0 - iIIIiI11 % iII111ii + iII111ii
 if scrape1 == "true" :
  o0o0O0Oo = 1
  II1 = IiI111111IIII ( base64 . b64decode ( b'aHR0cDovL2R2YnNhdC5ydS9zbWYvaW5kZXgucGhwP2FjdGlvbj1yZWNlbnQ7c3RhcnQ9MA==' ) )
  O0iII = re . compile ( '#EXTM3U(.+?)</div>' , re . DOTALL ) . findall ( II1 )
  for i1I1iI1iIi111i in O0iII :
   if OOo0oOO0o0oo0 < 100 :
    iiIIIII1i1iI . update ( OOo0oOO0o0oo0 )
    OOo0oOO0o0oo0 = OOo0oOO0o0oo0 + 3
   i1I1iI1iIi111i = replace ( '<br />' , '\n' )
   url = i1I1iI1iIi111i
   url = url . replace ( '#AAASTREAM:' , '#A:' )
   url = url . replace ( '#EXTINF:' , '#A:' )
   I11o0oO00oO0o0o0 = re . compile ( '^#A:-?[0-9]*(.*?),(.*?)\n(.*?)$' , re . I + re . M + re . U + re . S ) . findall ( url )
   III11iiii11i1 = [ ]
   for I1IIIiI1I1ii1 , iiiI1I1iIIIi1 , url in I11o0oO00oO0o0o0 :
    ooOo0OoO = { "params" : I1IIIiI1I1ii1 , "display_name" : iiiI1I1iIIIi1 , "url" : url }
    III11iiii11i1 . append ( ooOo0OoO )
   IiIIII = [ ]
   for oOO0OO0O in III11iiii11i1 :
    ooOo0OoO = { "display_name" : oOO0OO0O [ "display_name" ] , "url" : oOO0OO0O [ "url" ] }
    I11o0oO00oO0o0o0 = re . compile ( ' (.+?)="(.+?)"' , re . I + re . M + re . U + re . S ) . findall ( oOO0OO0O [ "params" ] )
    for i1iiIIi1I , iiI1I1IIi11i1 in I11o0oO00oO0o0o0 :
     ooOo0OoO [ i1iiIIi1I . strip ( ) . lower ( ) . replace ( '-' , '_' ) ] = iiI1I1IIi11i1 . strip ( )
    IiIIII . append ( ooOo0OoO )
    if 48 - 48: oOo0Oo + iIIIiI11
   for oOO0OO0O in IiIIII :
    name = oO0ooOoO ( oOO0OO0O [ "display_name" ] )
    url = oO0ooOoO ( oOO0OO0O [ "url" ] )
    url = url . replace ( '\\r' , '' ) . replace ( '\\t' , '' ) . replace ( '\r' , '' ) . replace ( '\t' , '' ) . replace ( ' ' , '' ) . replace ( 'm3u8' , 'm3u8' )
    I11i1II . append ( name )
    Ooo . append ( url )
    if "hd" in name . lower ( ) :
     OOo0 . append ( "1" )
    else :
     OOo0 . append ( "0" )
    ii11I = list ( zip ( OOo0 , I11i1II , Ooo ) )
    if 16 - 16: iIii1I11I1II1 % i11iIiiIii . OoOoOO00 % o0oOo0Ooo0O + O0o . OoO0O00
 if scrape2 == "true" :
  o0o0O0Oo = 1
  II1 = IiI111111IIII ( base64 . b64decode ( b'aHR0cDovL2R2YnNhdC5ydS9zbWYvaW5kZXgucGhwP2FjdGlvbj1yZWNlbnQ7c3RhcnQ9MTA=' ) )
  O0iII = re . compile ( '#EXTM3U(.+?)</div>' , re . DOTALL ) . findall ( II1 )
  for i1I1iI1iIi111i in O0iII :
   if OOo0oOO0o0oo0 < 100 :
    iiIIIII1i1iI . update ( OOo0oOO0o0oo0 )
    OOo0oOO0o0oo0 = OOo0oOO0o0oo0 + 3
   i1I1iI1iIi111i = replace ( '<br />' , '\n' )
   url = i1I1iI1iIi111i
   url = url . replace ( '#AAASTREAM:' , '#A:' )
   url = url . replace ( '#EXTINF:' , '#A:' )
   I11o0oO00oO0o0o0 = re . compile ( '^#A:-?[0-9]*(.*?),(.*?)\n(.*?)$' , re . I + re . M + re . U + re . S ) . findall ( url )
   III11iiii11i1 = [ ]
   for I1IIIiI1I1ii1 , iiiI1I1iIIIi1 , url in I11o0oO00oO0o0o0 :
    ooOo0OoO = { "params" : I1IIIiI1I1ii1 , "display_name" : iiiI1I1iIIIi1 , "url" : url }
    III11iiii11i1 . append ( ooOo0OoO )
   IiIIII = [ ]
   for oOO0OO0O in III11iiii11i1 :
    ooOo0OoO = { "display_name" : oOO0OO0O [ "display_name" ] , "url" : oOO0OO0O [ "url" ] }
    I11o0oO00oO0o0o0 = re . compile ( ' (.+?)="(.+?)"' , re . I + re . M + re . U + re . S ) . findall ( oOO0OO0O [ "params" ] )
    for i1iiIIi1I , iiI1I1IIi11i1 in I11o0oO00oO0o0o0 :
     ooOo0OoO [ i1iiIIi1I . strip ( ) . lower ( ) . replace ( '-' , '_' ) ] = iiI1I1IIi11i1 . strip ( )
    IiIIII . append ( ooOo0OoO )
    if 46 - 46: OoO0O00 - o0oOOo0O0Ooo / OoOoOO00 - OoooooooOO + O0o
   for oOO0OO0O in IiIIII :
    name = oO0ooOoO ( oOO0OO0O [ "display_name" ] )
    url = oO0ooOoO ( oOO0OO0O [ "url" ] )
    url = url . replace ( '\\r' , '' ) . replace ( '\\t' , '' ) . replace ( '\r' , '' ) . replace ( '\t' , '' ) . replace ( ' ' , '' ) . replace ( 'm3u8' , 'm3u8' )
    I11i1II . append ( name )
    Ooo . append ( url )
    if "hd" in name . lower ( ) :
     OOo0 . append ( "1" )
    else :
     OOo0 . append ( "0" )
    ii11I = list ( zip ( OOo0 , I11i1II , Ooo ) )
    if 58 - 58: o0oOOo0O0Ooo / o0oOOo0O0Ooo + o0oOo0Ooo0O + I1 - OoOoOO00 . i1iIIII
 if scrape3 == "true" :
  o0o0O0Oo = 1
  II1 = IiI111111IIII ( base64 . b64decode ( b'aHR0cDovL2R2YnNhdC5ydS9zbWYvaW5kZXgucGhwP2FjdGlvbj1yZWNlbnQ7c3RhcnQ9MjA=' ) )
  O0iII = re . compile ( '#EXTM3U(.+?)</div>' , re . DOTALL ) . findall ( II1 )
  for i1I1iI1iIi111i in O0iII :
   if OOo0oOO0o0oo0 < 100 :
    iiIIIII1i1iI . update ( OOo0oOO0o0oo0 )
    OOo0oOO0o0oo0 = OOo0oOO0o0oo0 + 3
   i1I1iI1iIi111i = replace ( '<br />' , '\n' )
   url = i1I1iI1iIi111i
   url = url . replace ( '#AAASTREAM:' , '#A:' )
   url = url . replace ( '#EXTINF:' , '#A:' )
   I11o0oO00oO0o0o0 = re . compile ( '^#A:-?[0-9]*(.*?),(.*?)\n(.*?)$' , re . I + re . M + re . U + re . S ) . findall ( url )
   III11iiii11i1 = [ ]
   for I1IIIiI1I1ii1 , iiiI1I1iIIIi1 , url in I11o0oO00oO0o0o0 :
    ooOo0OoO = { "params" : I1IIIiI1I1ii1 , "display_name" : iiiI1I1iIIIi1 , "url" : url }
    III11iiii11i1 . append ( ooOo0OoO )
   IiIIII = [ ]
   for oOO0OO0O in III11iiii11i1 :
    ooOo0OoO = { "display_name" : oOO0OO0O [ "display_name" ] , "url" : oOO0OO0O [ "url" ] }
    I11o0oO00oO0o0o0 = re . compile ( ' (.+?)="(.+?)"' , re . I + re . M + re . U + re . S ) . findall ( oOO0OO0O [ "params" ] )
    for i1iiIIi1I , iiI1I1IIi11i1 in I11o0oO00oO0o0o0 :
     ooOo0OoO [ i1iiIIi1I . strip ( ) . lower ( ) . replace ( '-' , '_' ) ] = iiI1I1IIi11i1 . strip ( )
    IiIIII . append ( ooOo0OoO )
    if 15 - 15: o0oOo0Ooo0O * OoOoOO00 % iII111ii . OoOoOO00 . I1
   for oOO0OO0O in IiIIII :
    name = oO0ooOoO ( oOO0OO0O [ "display_name" ] )
    url = oO0ooOoO ( oOO0OO0O [ "url" ] )
    url = url . replace ( '\\r' , '' ) . replace ( '\\t' , '' ) . replace ( '\r' , '' ) . replace ( '\t' , '' ) . replace ( ' ' , '' ) . replace ( 'm3u8' , 'm3u8' )
    I11i1II . append ( name )
    Ooo . append ( url )
    if "hd" in name . lower ( ) :
     OOo0 . append ( "1" )
    else :
     OOo0 . append ( "0" )
    ii11I = list ( zip ( OOo0 , I11i1II , Ooo ) )
    if 97 - 97: O0o
 if o0o0O0Oo == 0 :
  o0oO0 . ok ( o0OOO , "Error, no scrapers are enabled. Please enable some scrapers in the addon settings." )
  quit ( )
  if 80 - 80: I1IiiI . i111IiI
 i1iIiIIIII = sorted ( ii11I , key = lambda oOO00oOO : int ( oOO00oOO [ 0 ] ) , reverse = True )
 I1I11ii = sorted ( I1I1I11Ii )
 if 93 - 93: I1ii11iIi11i % OoOoOO00 . O0 / iIIIiI11 * O0o
 OOO00O = 0
 if 29 - 29: o0oOOo0O0Ooo
 iiIIIII1i1iI . update ( 100 )
 if 86 - 86: II111iiii . iII111ii
 O0o0O00Oo0o0 ( '[COLOR dodgerblue][B]LINKS FOR ' + iI11Ii111 . upper ( ) + '[/B][/COLOR]' , url , 999 , iconimage , iIiiiI , '' )
 O0o0O00Oo0o0 ( '================================================================' , url , 999 , iconimage , iIiiiI , '' )
 if 2 - 2: OoooooooOO
 if 60 - 60: OoO0O00
 for oO00Ooo0oO in I1I11ii :
  if 100 - 100: OoO0O00 / i1IIi - I1IiiI % i111IiI - iIii1I11I1II1
  O0o0O00Oo0o0 ( '[COLOR orangered][B]' + oO00Ooo0oO . upper ( ) + ' LINKS[/B][/COLOR]' , url , 999 , iconimage , iIiiiI , '' )
  if 17 - 17: I1 / o0oOOo0O0Ooo % Oo0Ooo
  ooI1i = oO00Ooo0oO . split ( ' ' )
  if 71 - 71: iII111ii . oOo0Oo . OoO0O00
  for o0ooOoO000oO , name , url in i1iIiIIIII :
   if 68 - 68: i11iIiiIii % O0o * OoO0O00 * iII111ii * II111iiii + O0
   o00OoO0oO00 = 0
   if 2 - 2: iIii1I11I1II1
   for iiii1 in ooI1i :
    if 66 - 66: O0o * iIii1I11I1II1 % iIii1I11I1II1 * iII111ii - o0oOo0Ooo0O - iII111ii
    if not iiii1 . lower ( ) in name . lower ( ) :
     o00OoO0oO00 = 1
     if 70 - 70: oOo0Oo + O0o
   if o00OoO0oO00 == 0 :
    OOO00O = OOO00O + 1
    if "hd" in name . lower ( ) :
     O0o0O00Oo0o0 ( '[COLOR blue]LINK[/COLOR][COLOR blue] ' + str ( OOO00O ) + '[/COLOR] - [COLOR yellow][B]HD[/B][/COLOR]' , url , 2 , iconimage , iIiiiI , '' )
    else :
     O0o0O00Oo0o0 ( '[COLOR blue]LINK[/COLOR][COLOR blue] ' + str ( OOO00O ) + '[/COLOR] - [COLOR white]SD[/COLOR]' , url , 2 , iconimage , iIiiiI , '' )
     if 93 - 93: oOo0Oo + i111IiI
  if OOO00O == 0 :
   O0o0O00Oo0o0 ( '[COLOR white]NO LINKS FOUND[/COLOR]' , url , 999 , iconimage , iIiiiI , '' )
   if 33 - 33: O0
  ooI1i = ""
  if 78 - 78: O0 / II111iiii * OoO0O00
 iiIIIII1i1iI . close ( )
 if 50 - 50: OoooooooOO - iIii1I11I1II1 + i1IIi % oOo0Oo - iIii1I11I1II1 % O0
def o0oO0Oo ( name , url , iconimage ) :
 if 71 - 71: o0oOOo0O0Ooo - OoOoOO00 * iIIIiI11 + i111IiI % i11iIiiIii - o0oOo0Ooo0O
 iiIIIII1i1iI . create ( o0OOO , "[COLOR blue]We are just getting the channel links for you.[/COLOR]" , '[COLOR yellow]Please wait...[/COLOR]' , '' )
 iiIIIII1i1iI . update ( 0 )
 if 82 - 82: oOo0Oo - i1iIIII + OoO0O00
 OOo0oOO0o0oo0 = 0
 try :
  iI11Ii111 , oO00Ooo0oO , iconimage = url . split ( '!' )
 except :
  try :
   oO00Ooo0oO , iconimage = url . split ( '!' )
   iI11Ii111 = oO00Ooo0oO
  except :
   o0oO0 . ok ( o0OOO , "[COLOR blue]Sorry there was a problem processing your request.[/COLOR]" , "[COLOR blue]Sporie has plenty of content to choose from :-D[/COLOR]" )
   quit ( )
   if 64 - 64: o0oOOo0O0Ooo . O0 * i111IiI + OoooooooOO - Oo0Ooo . OoooooooOO
 OOoO0oo0O = 0
 if 49 - 49: o0oOOo0O0Ooo
 if "all " in name . lower ( ) :
  oO00Ooo0oO = oO00Ooo0oO . replace ( 'all ' , '' ) . replace ( 'ALL ' , '' ) . replace ( 'All ' , '' )
  iI11Ii111 = iI11Ii111 . replace ( 'all ' , '' ) . replace ( 'ALL ' , '' ) . replace ( 'All ' , '' )
  OOoO0oo0O = 1
  if 31 - 31: OoO0O00 * i11iIiiIii * i111IiI . i11iIiiIii
 I11i1II = [ ]
 Ooo = [ ]
 OOo0 = [ ]
 ii11I = [ ]
 if 12 - 12: OoOoOO00 % iII111ii % I1ii11iIi11i . i11iIiiIii * iIii1I11I1II1
 iiIIIII1i1iI . update ( 0 )
 o0o0O0Oo = 0
 if scrape1 == "true" :
  o0o0O0Oo = 1
  II1 = IiI111111IIII ( base64 . b64decode ( b'aHR0cDovL2R2YnNhdC5ydS9zbWYvaW5kZXgucGhwP2FjdGlvbj1yZWNlbnQ7c3RhcnQ9MA==' ) )
  O0iII = re . compile ( '#EXTM3U(.+?)</div>' , re . DOTALL ) . findall ( II1 )
  for i1I1iI1iIi111i in O0iII :
   if OOo0oOO0o0oo0 < 100 :
    iiIIIII1i1iI . update ( OOo0oOO0o0oo0 )
    OOo0oOO0o0oo0 = OOo0oOO0o0oo0 + 3
   i1I1iI1iIi111i = replace ( '<br />' , '\n' )
   url = i1I1iI1iIi111i
   url = url . replace ( '#AAASTREAM:' , '#A:' )
   url = url . replace ( '#EXTINF:' , '#A:' )
   I11o0oO00oO0o0o0 = re . compile ( '^#A:-?[0-9]*(.*?),(.*?)\n(.*?)$' , re . I + re . M + re . U + re . S ) . findall ( url )
   III11iiii11i1 = [ ]
   for I1IIIiI1I1ii1 , iiiI1I1iIIIi1 , url in I11o0oO00oO0o0o0 :
    ooOo0OoO = { "params" : I1IIIiI1I1ii1 , "display_name" : iiiI1I1iIIIi1 , "url" : url }
    III11iiii11i1 . append ( ooOo0OoO )
   IiIIII = [ ]
   for oOO0OO0O in III11iiii11i1 :
    ooOo0OoO = { "display_name" : oOO0OO0O [ "display_name" ] , "url" : oOO0OO0O [ "url" ] }
    I11o0oO00oO0o0o0 = re . compile ( ' (.+?)="(.+?)"' , re . I + re . M + re . U + re . S ) . findall ( oOO0OO0O [ "params" ] )
    for i1iiIIi1I , iiI1I1IIi11i1 in I11o0oO00oO0o0o0 :
     ooOo0OoO [ i1iiIIi1I . strip ( ) . lower ( ) . replace ( '-' , '_' ) ] = iiI1I1IIi11i1 . strip ( )
    IiIIII . append ( ooOo0OoO )
    if 66 - 66: i11iIiiIii * iIii1I11I1II1 % OoooooooOO
   for oOO0OO0O in IiIIII :
    name = oO0ooOoO ( oOO0OO0O [ "display_name" ] )
    url = oO0ooOoO ( oOO0OO0O [ "url" ] )
    url = url . replace ( '\\r' , '' ) . replace ( '\\t' , '' ) . replace ( '\r' , '' ) . replace ( '\t' , '' ) . replace ( ' ' , '' ) . replace ( 'm3u8' , 'm3u8' )
    I11i1II . append ( name )
    Ooo . append ( url )
    if "hd" in name . lower ( ) :
     OOo0 . append ( "1" )
    else :
     OOo0 . append ( "0" )
    ii11I = list ( zip ( OOo0 , I11i1II , Ooo ) )
    if 5 - 5: OoOoOO00 % OoooooooOO
 if scrape2 == "true" :
  o0o0O0Oo = 1
  II1 = IiI111111IIII ( base64 . b64decode ( b'aHR0cDovL2R2YnNhdC5ydS9zbWYvaW5kZXgucGhwP2FjdGlvbj1yZWNlbnQ7c3RhcnQ9MTA=' ) )
  O0iII = re . compile ( '#EXTM3U(.+?)</div>' , re . DOTALL ) . findall ( II1 )
  for i1I1iI1iIi111i in O0iII :
   if OOo0oOO0o0oo0 < 100 :
    iiIIIII1i1iI . update ( OOo0oOO0o0oo0 )
    OOo0oOO0o0oo0 = OOo0oOO0o0oo0 + 3
   i1I1iI1iIi111i = replace ( '<br />' , '\n' )
   url = i1I1iI1iIi111i
   url = url . replace ( '#AAASTREAM:' , '#A:' )
   url = url . replace ( '#EXTINF:' , '#A:' )
   I11o0oO00oO0o0o0 = re . compile ( '^#A:-?[0-9]*(.*?),(.*?)\n(.*?)$' , re . I + re . M + re . U + re . S ) . findall ( url )
   III11iiii11i1 = [ ]
   for I1IIIiI1I1ii1 , iiiI1I1iIIIi1 , url in I11o0oO00oO0o0o0 :
    ooOo0OoO = { "params" : I1IIIiI1I1ii1 , "display_name" : iiiI1I1iIIIi1 , "url" : url }
    III11iiii11i1 . append ( ooOo0OoO )
   IiIIII = [ ]
   for oOO0OO0O in III11iiii11i1 :
    ooOo0OoO = { "display_name" : oOO0OO0O [ "display_name" ] , "url" : oOO0OO0O [ "url" ] }
    I11o0oO00oO0o0o0 = re . compile ( ' (.+?)="(.+?)"' , re . I + re . M + re . U + re . S ) . findall ( oOO0OO0O [ "params" ] )
    for i1iiIIi1I , iiI1I1IIi11i1 in I11o0oO00oO0o0o0 :
     ooOo0OoO [ i1iiIIi1I . strip ( ) . lower ( ) . replace ( '-' , '_' ) ] = iiI1I1IIi11i1 . strip ( )
    IiIIII . append ( ooOo0OoO )
    if 60 - 60: OoOoOO00 . i1IIi % OoO0O00 % o0oOo0Ooo0O % i1iIIII
   for oOO0OO0O in IiIIII :
    name = oO0ooOoO ( oOO0OO0O [ "display_name" ] )
    url = oO0ooOoO ( oOO0OO0O [ "url" ] )
    url = url . replace ( '\\r' , '' ) . replace ( '\\t' , '' ) . replace ( '\r' , '' ) . replace ( '\t' , '' ) . replace ( ' ' , '' ) . replace ( 'm3u8' , 'm3u8' )
    I11i1II . append ( name )
    Ooo . append ( url )
    if "hd" in name . lower ( ) :
     OOo0 . append ( "1" )
    else :
     OOo0 . append ( "0" )
    ii11I = list ( zip ( OOo0 , I11i1II , Ooo ) )
    if 33 - 33: iIii1I11I1II1 - i111IiI * I1ii11iIi11i % iIii1I11I1II1 + OoO0O00 . i1iIIII
 if scrape3 == "true" :
  o0o0O0Oo = 1
  II1 = IiI111111IIII ( base64 . b64decode ( b'aHR0cDovL2R2YnNhdC5ydS9zbWYvaW5kZXgucGhwP2FjdGlvbj1yZWNlbnQ7c3RhcnQ9MjA=' ) )
  O0iII = re . compile ( '#EXTM3U(.+?)</div>' , re . DOTALL ) . findall ( II1 )
  for i1I1iI1iIi111i in O0iII :
   if OOo0oOO0o0oo0 < 100 :
    iiIIIII1i1iI . update ( OOo0oOO0o0oo0 )
    OOo0oOO0o0oo0 = OOo0oOO0o0oo0 + 3
   i1I1iI1iIi111i = replace ( '<br />' , '\n' )
   url = i1I1iI1iIi111i
   url = url . replace ( '#AAASTREAM:' , '#A:' )
   url = url . replace ( '#EXTINF:' , '#A:' )
   I11o0oO00oO0o0o0 = re . compile ( '^#A:-?[0-9]*(.*?),(.*?)\n(.*?)$' , re . I + re . M + re . U + re . S ) . findall ( url )
   III11iiii11i1 = [ ]
   for I1IIIiI1I1ii1 , iiiI1I1iIIIi1 , url in I11o0oO00oO0o0o0 :
    ooOo0OoO = { "params" : I1IIIiI1I1ii1 , "display_name" : iiiI1I1iIIIi1 , "url" : url }
    III11iiii11i1 . append ( ooOo0OoO )
   IiIIII = [ ]
   for oOO0OO0O in III11iiii11i1 :
    ooOo0OoO = { "display_name" : oOO0OO0O [ "display_name" ] , "url" : oOO0OO0O [ "url" ] }
    I11o0oO00oO0o0o0 = re . compile ( ' (.+?)="(.+?)"' , re . I + re . M + re . U + re . S ) . findall ( oOO0OO0O [ "params" ] )
    for i1iiIIi1I , iiI1I1IIi11i1 in I11o0oO00oO0o0o0 :
     ooOo0OoO [ i1iiIIi1I . strip ( ) . lower ( ) . replace ( '-' , '_' ) ] = iiI1I1IIi11i1 . strip ( )
    IiIIII . append ( ooOo0OoO )
    if 56 - 56: i11iIiiIii * iIIIiI11 . O0o
   for oOO0OO0O in IiIIII :
    name = oO0ooOoO ( oOO0OO0O [ "display_name" ] )
    url = oO0ooOoO ( oOO0OO0O [ "url" ] )
    url = url . replace ( '\\r' , '' ) . replace ( '\\t' , '' ) . replace ( '\r' , '' ) . replace ( '\t' , '' ) . replace ( ' ' , '' ) . replace ( 'm3u8' , 'm3u8' )
    I11i1II . append ( name )
    Ooo . append ( url )
    if "hd" in name . lower ( ) :
     OOo0 . append ( "1" )
    else :
     OOo0 . append ( "0" )
    ii11I = list ( zip ( OOo0 , I11i1II , Ooo ) )
    if 78 - 78: OoOoOO00
 if o0o0O0Oo == 0 :
  o0oO0 . ok ( o0OOO , "Error, no scrapers are enabled. Please enable some scrapers in the addon settings." )
  quit ( )
  if 1 - 1: i1iIIII . iII111ii
 i1iIiIIIII = sorted ( ii11I , key = lambda oOO00oOO : int ( oOO00oOO [ 0 ] ) , reverse = True )
 if 42 - 42: i1iIIII % O0o / OoO0O00 - O0o * i11iIiiIii
 OOO00O = 0
 if 19 - 19: O0o * I1IiiI % i11iIiiIii
 iiIIIII1i1iI . update ( 100 )
 if 24 - 24: o0oOOo0O0Ooo
 O0o0O00Oo0o0 ( '[COLOR dodgerblue][B]LINKS FOR ' + iI11Ii111 . upper ( ) + '[/B][/COLOR]' , url , 999 , iconimage , iIiiiI , '' )
 O0o0O00Oo0o0 ( '================================================================' , url , 999 , iconimage , iIiiiI , '' )
 ooI1i = oO00Ooo0oO . split ( ' ' )
 for o0ooOoO000oO , name , url in i1iIiIIIII :
  if OOoO0oo0O == 1 :
   iIi1Iii111I = name
   if 18 - 18: O0o . OoO0O00 / iIIIiI11 + i11iIiiIii % I1
  o00OoO0oO00 = 0
  if 93 - 93: OoOoOO00 % iIii1I11I1II1
  for iiii1 in ooI1i :
   if 90 - 90: I1IiiI - i1iIIII / i111IiI / O0 / I1
   if not iiii1 . lower ( ) in name . lower ( ) :
    o00OoO0oO00 = 1
    if 87 - 87: OoOoOO00 / iII111ii + iIii1I11I1II1
  if o00OoO0oO00 == 0 :
   OOO00O = OOO00O + 1
   if OOoO0oo0O == 1 :
    if "hd" in name . lower ( ) :
     O0o0O00Oo0o0 ( '[COLOR blue] ' + str ( iIi1Iii111I ) + '[/COLOR] - [COLOR yellow][B]HD[/B][/COLOR]' , url , 2 , iconimage , iIiiiI , '' )
    else :
     O0o0O00Oo0o0 ( '[COLOR blue] ' + str ( iIi1Iii111I ) + '[/COLOR] - [COLOR white]SD[/COLOR]' , url , 2 , iconimage , iIiiiI , '' )
   else :
    if "hd" in name . lower ( ) :
     O0o0O00Oo0o0 ( '[COLOR blue]LINK[/COLOR][COLOR blue] ' + str ( OOO00O ) + '[/COLOR] - [COLOR yellow][B]HD[/B][/COLOR]' , url , 2 , iconimage , iIiiiI , '' )
    else :
     O0o0O00Oo0o0 ( '[COLOR blue]LINK[/COLOR][COLOR blue] ' + str ( OOO00O ) + '[/COLOR] - [COLOR white]SD[/COLOR]' , url , 2 , iconimage , iIiiiI , '' )
     if 93 - 93: iIii1I11I1II1 + O0o % o0oOo0Ooo0O
 if OOO00O == 0 :
  O0o0O00Oo0o0 ( '[COLOR white]NO LINKS FOUND[/COLOR]' , url , 999 , iconimage , iIiiiI , '' )
  if 21 - 21: i1iIIII
 iiIIIII1i1iI . close ( )
 if 6 - 6: iII111ii
def i1I1II ( term ) :
 if 17 - 17: O0 * OoOoOO00 * I1ii11iIi11i * II111iiii * I1 % i1IIi
 IIIii = [ ]
 O00OooOo00o = [ ]
 if 33 - 33: I1ii11iIi11i * I1ii11iIi11i . o0oOo0Ooo0O . i11iIiiIii
 II1 = IiI111111IIII ( base64 . b64decode ( b'aHR0cDovL2R2YnNhdC5ydS9zbWYvaW5kZXgucGhwP2FjdGlvbj1yZWNlbnQ7c3RhcnQ9MA==' ) )
 O0iII = re . compile ( '#EXTM3U(.+?)</div>' , re . DOTALL ) . findall ( II1 )
 for i1I1iI1iIi111i in O0iII :
  i1I1iI1iIi111i = replace ( '<br />' , '\n' )
  i111IiI1I = i1I1iI1iIi111i
  if 48 - 48: o0oOOo0O0Ooo . i111IiI + OoOoOO00 % I1ii11iIi11i / i11iIiiIii
  i111IiI1I = i111IiI1I . replace ( '#AAASTREAM:' , '#A:' )
  i111IiI1I = i111IiI1I . replace ( '#EXTINF:' , '#A:' )
  I11o0oO00oO0o0o0 = re . compile ( '^#A:-?[0-9]*(.*?),(.*?)\n(.*?)$' , re . I + re . M + re . U + re . S ) . findall ( i111IiI1I )
  III11iiii11i1 = [ ]
  for I1IIIiI1I1ii1 , iiiI1I1iIIIi1 , i111IiI1I in I11o0oO00oO0o0o0 :
   ooOo0OoO = { "params" : I1IIIiI1I1ii1 , "display_name" : iiiI1I1iIIIi1 , "url" : i111IiI1I }
   III11iiii11i1 . append ( ooOo0OoO )
  list = [ ]
  for oOO0OO0O in III11iiii11i1 :
   ooOo0OoO = { "display_name" : oOO0OO0O [ "display_name" ] , "url" : oOO0OO0O [ "url" ] }
   I11o0oO00oO0o0o0 = re . compile ( ' (.+?)="(.+?)"' , re . I + re . M + re . U + re . S ) . findall ( oOO0OO0O [ "params" ] )
   for i1iiIIi1I , iiI1I1IIi11i1 in I11o0oO00oO0o0o0 :
    ooOo0OoO [ i1iiIIi1I . strip ( ) . lower ( ) . replace ( '-' , '_' ) ] = iiI1I1IIi11i1 . strip ( )
   list . append ( ooOo0OoO )
   if 74 - 74: II111iiii . O0 - I1IiiI + iII111ii % i11iIiiIii % OoOoOO00
  for oOO0OO0O in list :
   I1I = oO0ooOoO ( oOO0OO0O [ "display_name" ] )
   i111IiI1I = oO0ooOoO ( oOO0OO0O [ "url" ] )
   i111IiI1I = i111IiI1I . replace ( '\\r' , '' ) . replace ( '\\t' , '' ) . replace ( '\r' , '' ) . replace ( '\t' , '' ) . replace ( ' ' , '' ) . replace ( 'm3u8' , 'm3u8' )
   if term . lower ( ) in I1I . lower ( ) :
    IIIii . append ( i111IiI1I )
    O00OooOo00o . append ( I1I )
    if 78 - 78: i111IiI + OoOoOO00 + iII111ii - iII111ii . i11iIiiIii / OoO0O00
 o0oO0 = xbmcgui . Dialog ( )
 Oo = o0oO0 . select ( '[COLOR yellow]Search Term: [I]' + term + '[/I][/COLOR]' , O00OooOo00o )
 if Oo < 0 :
  quit ( )
  if 27 - 27: i111IiI - O0 % I1 * oOo0Oo . iII111ii % iIii1I11I1II1
 i111IiI1I = IIIii [ Oo ]
 I1I = O00OooOo00o [ Oo ]
 Oo00oo0000OO ( I1I , i111IiI1I , Iii1ii1II11i )
 if 37 - 37: OoooooooOO + O0 - i1IIi % o0oOo0Ooo0O
def i1I1i1i ( name , url , iconimage ) :
 if 36 - 36: II111iiii % O0
 I1Ii1111iIi = o0o0O ( url )
 I1Ii1111iIi = I1Ii1111iIi . replace ( '#AAASTREAM:' , '#A:' )
 I1Ii1111iIi = I1Ii1111iIi . replace ( '#EXTINF:' , '#A:' )
 I11o0oO00oO0o0o0 = re . compile ( '^#A:-?[0-9]*(.*?),(.*?)\n(.*?)$' , re . I + re . M + re . U + re . S ) . findall ( I1Ii1111iIi )
 III11iiii11i1 = [ ]
 for I1IIIiI1I1ii1 , iiiI1I1iIIIi1 , url in I11o0oO00oO0o0o0 :
  ooOo0OoO = { "params" : I1IIIiI1I1ii1 , "display_name" : iiiI1I1iIIIi1 , "url" : url }
  III11iiii11i1 . append ( ooOo0OoO )
 IiIIII = [ ]
 for oOO0OO0O in III11iiii11i1 :
  ooOo0OoO = { "display_name" : oOO0OO0O [ "display_name" ] , "url" : oOO0OO0O [ "url" ] }
  I11o0oO00oO0o0o0 = re . compile ( ' (.+?)="(.+?)"' , re . I + re . M + re . U + re . S ) . findall ( oOO0OO0O [ "params" ] )
  for i1iiIIi1I , iiI1I1IIi11i1 in I11o0oO00oO0o0o0 :
   ooOo0OoO [ i1iiIIi1I . strip ( ) . lower ( ) . replace ( '-' , '_' ) ] = iiI1I1IIi11i1 . strip ( )
  IiIIII . append ( ooOo0OoO )
  if 35 - 35: iIii1I11I1II1 - i1iIIII % o0oOOo0O0Ooo
 if IiIIII :
  if 30 - 30: oOo0Oo % oOo0Oo % iII111ii . OoOoOO00
  I1ii1 = plugintools . get_setting ( "sport_filter" )
  I1ii1 = I1ii1 . replace ( ', ' , ',' ) . replace ( ' ,' , ',' )
  if ( I1ii1 == 'None' ) or ( I1ii1 == '' ) or ( I1ii1 == None ) :
   O0o0O00Oo0o0 ( 'Click here to filter results by terms.' , 'url' , 997 , Iii1ii1II11i , iIiiiI )
   O0o0O00Oo0o0 ( '-----------------------------------------' , 'url' , 997 , Iii1ii1II11i , iIiiiI )
  else :
   O0o0O00Oo0o0 ( 'Click here to change filter terms.' , 'url' , 997 , Iii1ii1II11i , iIiiiI )
   O0o0O00Oo0o0 ( 'List showing results containing: ' + I1ii1 . title ( ) . replace ( ',' , ' & ' ) , 'url' , 997 , Iii1ii1II11i , iIiiiI )
   O0o0O00Oo0o0 ( '-----------------------------------------' , 'url' , 997 , Iii1ii1II11i , iIiiiI )
   if 50 - 50: O0o - o0oOo0Ooo0O / iIii1I11I1II1 - OoO0O00 + II111iiii - O0
  if ' ' in I1ii1 : I1ii1 = I1ii1 . replace ( ' ' , '' )
  I11i1II = [ ]
  Ooo = [ ]
  ii11I = [ ]
  if 88 - 88: O0o * OoO0O00
  for oOO0OO0O in sorted ( IiIIII ) :
   name = oO0ooOoO ( oOO0OO0O [ "display_name" ] )
   name = II11I ( name )
   name = name . lstrip ( )
   name = name . rstrip ( )
   url = oO0ooOoO ( oOO0OO0O [ "url" ] )
   url = url . replace ( '\\n' , '' ) . replace ( '\n' , '' ) . replace ( '\\r' , '' ) . replace ( '\\t' , '' ) . replace ( '\r' , '' ) . replace ( '\t' , '' ) . replace ( ' ' , '' ) . replace ( 'm3u8' , 'm3u8' )
   if ( I1ii1 == 'None' ) or ( I1ii1 == '' ) or ( I1ii1 == None ) :
    I11i1II . append ( name )
    Ooo . append ( url )
    ii11I = list ( zip ( I11i1II , Ooo ) )
   else :
    if ',' in I1ii1 :
     iiiI11iIIi1 = I1ii1 . split ( ',' )
     for oO00Ooo0oO in iiiI11iIIi1 :
      if ( oO00Ooo0oO . lower ( ) in name . lower ( ) . replace ( ' ' , '' ) ) and ( url not in Ooo ) :
       I11i1II . append ( name )
       Ooo . append ( url )
       ii11I = list ( zip ( I11i1II , Ooo ) )
    else :
     if I1ii1 . lower ( ) in name . lower ( ) :
      I11i1II . append ( name )
      Ooo . append ( url )
      ii11I = list ( zip ( I11i1II , Ooo ) )
      if 72 - 72: iIIIiI11 * i1iIIII
  i1iIiIIIII = sorted ( ii11I )
  oooo = len ( i1iIiIIIII )
  Oo0O0 = 1
  if 27 - 27: i11iIiiIii - I1IiiI
  iii1IIiI = plugintools . get_setting ( "check_links" )
  if 33 - 33: I1
  if iii1IIiI == 'true' :
   try :
    oOo00OoO0O = plugintools . get_setting ( "check_limit" )
    if oOo00OoO0O == '0' : OoOoO0OooOOo = 250
    elif oOo00OoO0O == '1' : OoOoO0OooOOo = 500
    elif oOo00OoO0O == '2' : OoOoO0OooOOo = 750
    elif oOo00OoO0O == '3' : OoOoO0OooOOo = 1000
    elif oOo00OoO0O == '4' : OoOoO0OooOOo = 99999999
    else : OoOoO0OooOOo = 250
   except : OoOoO0OooOOo = 250
   if 94 - 94: o0oOOo0O0Ooo . OoO0O00
  if ( iii1IIiI == 'true' ) and ( oooo <= OoOoO0OooOOo ) :
   iiIIIII1i1iI . create ( o0OOO , "[COLOR white]We are checking link number....[/COLOR]" , "[COLOR white]Can be disabled or changed in settings.[/COLOR]" , "[COLOR blue][B]" + str ( Oo0O0 ) + " of " + str ( oooo ) + "[/B][/COLOR] | [COLOR yellow][B]Please wait.....[/B][/COLOR]" )
   iiIIIII1i1iI . update ( 0 )
   i1IiIiiI = 0
   oooooo0OO = 0
   for name , url in i1iIiIIIII :
    url = oooO00Oo ( url )
    if ( url == "None" ) or ( '=' in name ) :
     i1IiIiiI = i1IiIiiI + 1
    else : oooooo0OO = oooooo0OO + 1
    if Oo0O0 != oooo :
     Oo0O0 = Oo0O0 + 1
    IiiIIiIIii1iI = 100 * int ( Oo0O0 ) / int ( oooo )
    iiIIIII1i1iI . update ( IiiIIiIIii1iI , '' , '' , '[COLOR blue][B]Checking ' + str ( Oo0O0 ) + " of " + str ( oooo ) + ' links[/B][/COLOR] | [COLOR lime][B]UP: ' + str ( oooooo0OO ) + '[/COLOR]   -   [COLOR red]DOWN: ' + str ( i1IiIiiI ) + '[/B][/COLOR]' )
    if ( url != "None" ) and ( not '=' in name ) :
     O0o0O00Oo0o0 ( name . title ( ) , url , 2 , Iii1ii1II11i , iIiiiI , '' )
    if iiIIIII1i1iI . iscanceled ( ) :
     iiIIIII1i1iI . close ( )
     break
   iiIIIII1i1iI . close ( )
  else :
   for name , url in i1iIiIIIII :
    if ( url != "None" ) and ( not '=' in name ) :
     O0o0O00Oo0o0 ( name . title ( ) , url , 2 , Iii1ii1II11i , iIiiiI , '' )
     if 86 - 86: II111iiii + o0oOo0Ooo0O + iII111ii
def II11I ( string ) :
 if 9 - 9: o0oOo0Ooo0O + II111iiii % o0oOo0Ooo0O % iII111ii + iIii1I11I1II1
 string = string . lower ( )
 string = string . replace ( "ar:" , "" )
 string = string . replace ( "uk:" , "" )
 string = string . replace ( "fr:" , "" )
 string = string . replace ( "hi:" , "" )
 string = string . replace ( "de:" , "" )
 string = string . replace ( "it:" , "" )
 string = string . replace ( "es:" , "" )
 string = string . replace ( "nl:" , "" )
 string = string . replace ( "tr:" , "" )
 string = string . replace ( "ex:" , "" )
 string = string . replace ( "ar_" , "" )
 string = string . replace ( "uk_" , "" )
 string = string . replace ( "fr_" , "" )
 string = string . replace ( "hi_" , "" )
 string = string . replace ( "de_" , "" )
 string = string . replace ( "it_" , "" )
 string = string . replace ( "es_" , "" )
 string = string . replace ( "nl_" , "" )
 string = string . replace ( "tr_" , "" )
 string = string . replace ( "ex_" , "" )
 string = string . replace ( ":" , "" )
 string = string . replace ( "_" , "" )
 string = string . replace ( "-" , "" )
 string = string . replace ( "*" , "" )
 if 59 - 59: i1IIi
 return string
 if 48 - 48: O0 * i111IiI * OoO0O00 . OoO0O00 * I1 - i111IiI
def iIi11i ( name , url , iconimage ) :
 if 56 - 56: i11iIiiIii . o0oOo0Ooo0O / iIIIiI11
 III1iii1i1II = datetime . datetime . now ( )
 IIIII1iii = III1iii1i1II . day
 if 87 - 87: i1iIIII + o0oOOo0O0Ooo . iIIIiI11 - OoooooooOO
 iiiiI1IiI1I1 = IIIII1iii
 if 19 - 19: i111IiI
 O0o00oO0oOO = datetime . date . today ( ) + datetime . timedelta ( days = 0 )
 iiiii1I1III1 = datetime . datetime . strftime ( O0o00oO0oOO , '%A - %d %B %Y' )
 i1oO00O = 'http://www.predictz.com/predictions/'
 if 77 - 77: i11iIiiIii % i1IIi % iII111ii
 iii = datetime . date . today ( ) + datetime . timedelta ( days = 1 )
 O0o0O = datetime . datetime . strftime ( iii , '%A - %d %B %Y' )
 ii111 = datetime . datetime . strftime ( iii , '%d' )
 ooOo000OoO0o = 'http://www.predictz.com/predictions/tomorrow/'
 if 58 - 58: I1ii11iIi11i
 ii1IoO0O = datetime . date . today ( ) + datetime . timedelta ( days = 2 )
 ooOOooo0ooo00 = datetime . datetime . strftime ( ii1IoO0O , '%A - %d %B %Y' )
 oooOo = datetime . datetime . strftime ( ii1IoO0O , '%y%m%d' )
 oo0oo0O0 = 'http://www.predictz.com/predictions/20' + str ( oooOo )
 if 18 - 18: iIii1I11I1II1 + i1iIIII + iIii1I11I1II1 . I1ii11iIi11i + oOo0Oo . o0oOo0Ooo0O
 II1i11 = datetime . date . today ( ) + datetime . timedelta ( days = 3 )
 Ii1IIIII = datetime . datetime . strftime ( II1i11 , '%A - %d %B %Y' )
 iiiIIiiii11 = datetime . datetime . strftime ( II1i11 , '%y%m%d' )
 IIiI1iIIiI1I1i = 'http://www.predictz.com/predictions/20' + str ( iiiIIiiii11 )
 if 44 - 44: I1IiiI + OoOoOO00 + I1ii11iIi11i . I1IiiI * OoOoOO00 % iIii1I11I1II1
 o0O = datetime . date . today ( ) + datetime . timedelta ( days = 4 )
 O0OOO0O = datetime . datetime . strftime ( o0O , '%A - %d %B %Y' )
 Iii1I = datetime . datetime . strftime ( o0O , '%y%m%d' )
 oOoOOOOoOO0o = 'http://www.predictz.com/predictions/20' + str ( Iii1I )
 if 31 - 31: I1IiiI . iII111ii + I1ii11iIi11i
 if 91 - 91: I1ii11iIi11i % o0oOo0Ooo0O
 IIi1I11I1II ( 'Today' + ' - ' + str ( iiiii1I1III1 ) , i1oO00O , 41 , Iii1ii1II11i , iIiiiI , '' )
 IIi1I11I1II ( 'Tomorrow' + ' - ' + str ( O0o0O ) , ooOo000OoO0o , 41 , Iii1ii1II11i , iIiiiI , '' )
 IIi1I11I1II ( str ( ooOOooo0ooo00 ) , oo0oo0O0 , 41 , Iii1ii1II11i , iIiiiI , '' )
 IIi1I11I1II ( str ( Ii1IIIII ) , IIiI1iIIiI1I1i , 41 , Iii1ii1II11i , iIiiiI , '' )
 IIi1I11I1II ( str ( O0OOO0O ) , oOoOOOOoOO0o , 41 , Iii1ii1II11i , iIiiiI , '' )
 if 38 - 38: iIIIiI11 - i1iIIII . I1IiiI
def OOOOO0 ( name , url , iconimage ) :
 if 79 - 79: II111iiii - o0oOo0Ooo0O . i1IIi + O0 % O0 * I1IiiI
 OOoO00 = IiI111111IIII ( url )
 O0iII = re . compile ( '<div class="scrolltable">(.+?)<div id="footerwrapper">' ) . findall ( OOoO00 )
 ooI1i = str ( O0iII )
 OO0OO0O = re . compile ( '<tr(.+?)</tr>' ) . findall ( ooI1i )
 for i1I1iI1iIi111i in OO0OO0O :
  try :
   Ii11 = re . compile ( '<a href="[^"]*">(.+?) Predictions</a>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   O0o0O00Oo0o0 ( '#############################################' , 'url' , 999 , Iii1ii1II11i , iIiiiI , '' )
   O0o0O00Oo0o0 ( '[COLOR red][B]' + Ii11 + ' Predictions[/B][/COLOR]' , 'url' , 999 , Iii1ii1II11i , iIiiiI , '' )
   O0o0O00Oo0o0 ( '#############################################' , 'url' , 999 , Iii1ii1II11i , iIiiiI , '' )
  except : pass
  try :
   o0oo0O = re . compile ( 'title=".+?">(.+?)</a>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   Ii1i1iI = re . compile ( '<div class="score">(.+?)</div>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   o0oo0O = Ii1Ii1I ( o0oo0O )
   Ii1i1iI = Ii1Ii1I ( Ii1i1iI )
   O0o0O00Oo0o0 ( '[COLOR orange][B]Prediction - [/COLOR][COLOR dodgerblue]' + Ii1i1iI + ' [/B][/COLOR]| [COLOR mediumpurple]' + o0oo0O + '[/COLOR]' , 'url' , 999 , Iii1ii1II11i , iIiiiI , '' )
  except : pass
  if 54 - 54: O0o + OoOoOO00
def o0O00O ( name , url , iconimage ) :
 if 94 - 94: i111IiI - I1ii11iIi11i + o0oOOo0O0Ooo - Oo0Ooo
 III1iii1i1II = datetime . datetime . now ( )
 IIIII1iii = III1iii1i1II . day
 if 15 - 15: i1iIIII
 iiiiI1IiI1I1 = IIIII1iii
 if 31 - 31: iIIIiI11 / i1IIi . OoO0O00
 O0o00oO0oOO = datetime . date . today ( ) + datetime . timedelta ( days = 0 )
 iiiii1I1III1 = datetime . datetime . strftime ( O0o00oO0oOO , '%A - %d %B %Y' )
 i1oO00O = 'http://www.predictz.com/predictions/'
 if 83 - 83: O0o / iIii1I11I1II1 + i1IIi / iIIIiI11
 iii = datetime . date . today ( ) + datetime . timedelta ( days = 1 )
 O0o0O = datetime . datetime . strftime ( iii , '%A - %d %B %Y' )
 ii111 = datetime . datetime . strftime ( iii , '%d' )
 ooOo000OoO0o = 'http://www.predictz.com/predictions/tomorrow/'
 if 47 - 47: O0o + OoooooooOO . II111iiii . iIIIiI11
 ii1IoO0O = datetime . date . today ( ) + datetime . timedelta ( days = 2 )
 ooOOooo0ooo00 = datetime . datetime . strftime ( ii1IoO0O , '%A - %d %B %Y' )
 oooOo = datetime . datetime . strftime ( ii1IoO0O , '%y%m%d' )
 oo0oo0O0 = 'http://www.predictz.com/predictions/20' + str ( oooOo )
 if 66 - 66: o0oOo0Ooo0O * OoOoOO00
 II1i11 = datetime . date . today ( ) + datetime . timedelta ( days = 3 )
 Ii1IIIII = datetime . datetime . strftime ( II1i11 , '%A - %d %B %Y' )
 iiiIIiiii11 = datetime . datetime . strftime ( II1i11 , '%y%m%d' )
 IIiI1iIIiI1I1i = 'http://www.predictz.com/predictions/20' + str ( iiiIIiiii11 )
 if 2 - 2: O0o . oOo0Oo * Oo0Ooo + O0 - I1 * iIii1I11I1II1
 o0O = datetime . date . today ( ) + datetime . timedelta ( days = 4 )
 O0OOO0O = datetime . datetime . strftime ( o0O , '%A - %d %B %Y' )
 Iii1I = datetime . datetime . strftime ( o0O , '%y%m%d' )
 oOoOOOOoOO0o = 'http://www.predictz.com/predictions/20' + str ( Iii1I )
 if 12 - 12: o0oOOo0O0Ooo * oOo0Oo % II111iiii * i1IIi * iIii1I11I1II1
 if 81 - 81: Oo0Ooo - I1
 IIi1I11I1II ( 'Today' + ' - ' + str ( iiiii1I1III1 ) , i1oO00O , 51 , Iii1ii1II11i , iIiiiI , '' )
 IIi1I11I1II ( 'Tomorrow' + ' - ' + str ( O0o0O ) , ooOo000OoO0o , 51 , Iii1ii1II11i , iIiiiI , '' )
 IIi1I11I1II ( str ( ooOOooo0ooo00 ) , oo0oo0O0 , 51 , Iii1ii1II11i , iIiiiI , '' )
 IIi1I11I1II ( str ( Ii1IIIII ) , IIiI1iIIiI1I1i , 51 , Iii1ii1II11i , iIiiiI , '' )
 IIi1I11I1II ( str ( O0OOO0O ) , oOoOOOOoOO0o , 51 , Iii1ii1II11i , iIiiiI , '' )
 if 24 - 24: OoooooooOO . OoO0O00 * II111iiii
def o0oO00 ( name , url , iconimage ) :
 if 88 - 88: I1 + i11iIiiIii % O0o * i1iIIII * i1iIIII * i111IiI
 OOoO00 = IiI111111IIII ( url )
 O0iII = re . compile ( '<div class="scrolltable">(.+?)<div id="footerwrapper">' ) . findall ( OOoO00 )
 ooI1i = str ( O0iII )
 OO0OO0O = re . compile ( '<tr(.+?)</tr>' ) . findall ( ooI1i )
 for i1I1iI1iIi111i in OO0OO0O :
  try :
   Ii11 = re . compile ( '<a href="[^"]*">(.+?) Predictions</a>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   O0o0O00Oo0o0 ( '#############################################' , 'url' , 999 , Iii1ii1II11i , iIiiiI , '' )
   O0o0O00Oo0o0 ( '[COLOR red][B]' + Ii11 + '[/B][/COLOR]' , 'url' , 999 , Iii1ii1II11i , iIiiiI , '' )
   O0o0O00Oo0o0 ( '#############################################' , 'url' , 999 , Iii1ii1II11i , iIiiiI , '' )
  except : pass
  try :
   o0oo0O = re . compile ( 'title=".+?">(.+?)</a>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   I1I1iO0O0oo = re . compile ( 'title=".+?" rel="external nofollow">(.+?)</a>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   o00OOo000O = re . compile ( 'title=".+?" rel="external nofollow">(.+?)</a>' ) . findall ( i1I1iI1iIi111i ) [ 1 ]
   I1111III11 = re . compile ( 'title=".+?" rel="external nofollow">(.+?)</a>' ) . findall ( i1I1iI1iIi111i ) [ 2 ]
   o0oo0O = Ii1Ii1I ( o0oo0O )
   O0o0O00Oo0o0 ( '[COLOR mediumpurple][B]' + o0oo0O + '[/B][/COLOR]' , 'url' , 999 , Iii1ii1II11i , iIiiiI , '' )
   O0o0O00Oo0o0 ( '[COLOR orange]Home Win[/COLOR][COLOR dodgerblue] (' + I1I1iO0O0oo + ')[/COLOR][COLOR orange]  -  Draw[/COLOR][COLOR dodgerblue] (' + o00OOo000O + ')[/COLOR][COLOR orange]  -  Away Win[/COLOR][COLOR dodgerblue] (' + I1111III11 + ')[/COLOR]' , 'url' , 999 , Iii1ii1II11i , iIiiiI , '' )
  except : pass
  if 46 - 46: O0
def OoOOoooO000 ( name , url , iconimage ) :
 if 85 - 85: I1IiiI % I1 + i1iIIII / i111IiI % OoooooooOO
 III1iii1i1II = datetime . datetime . now ( )
 IIIII1iii = III1iii1i1II . day
 if 42 - 42: oOo0Oo * iII111ii
 iiiiI1IiI1I1 = IIIII1iii
 if 23 - 23: O0o * oOo0Oo - OoooooooOO * OoooooooOO % OoO0O00 + II111iiii
 O0o00oO0oOO = datetime . date . today ( ) + datetime . timedelta ( days = 0 )
 iiiii1I1III1 = datetime . datetime . strftime ( O0o00oO0oOO , '%A - %d %B %Y' )
 i1oO00O = 'http://www.predictz.com/predictions/'
 if 9 - 9: iIii1I11I1II1 * OoO0O00 % oOo0Oo
 iii = datetime . date . today ( ) + datetime . timedelta ( days = 1 )
 O0o0O = datetime . datetime . strftime ( iii , '%A - %d %B %Y' )
 ii111 = datetime . datetime . strftime ( iii , '%d' )
 ooOo000OoO0o = 'http://www.predictz.com/predictions/tomorrow/'
 if 46 - 46: I1 . iII111ii / II111iiii % iIii1I11I1II1 + iII111ii
 ii1IoO0O = datetime . date . today ( ) + datetime . timedelta ( days = 2 )
 ooOOooo0ooo00 = datetime . datetime . strftime ( ii1IoO0O , '%A - %d %B %Y' )
 oooOo = datetime . datetime . strftime ( ii1IoO0O , '%y%m%d' )
 oo0oo0O0 = 'http://www.predictz.com/predictions/20' + str ( oooOo )
 if 61 - 61: i1iIIII / OoO0O00 + II111iiii . O0o / Oo0Ooo * i1iIIII
 II1i11 = datetime . date . today ( ) + datetime . timedelta ( days = 3 )
 Ii1IIIII = datetime . datetime . strftime ( II1i11 , '%A - %d %B %Y' )
 iiiIIiiii11 = datetime . datetime . strftime ( II1i11 , '%y%m%d' )
 IIiI1iIIiI1I1i = 'http://www.predictz.com/predictions/20' + str ( iiiIIiiii11 )
 if 46 - 46: iIii1I11I1II1
 o0O = datetime . date . today ( ) + datetime . timedelta ( days = 4 )
 O0OOO0O = datetime . datetime . strftime ( o0O , '%A - %d %B %Y' )
 Iii1I = datetime . datetime . strftime ( o0O , '%y%m%d' )
 oOoOOOOoOO0o = 'http://www.predictz.com/predictions/20' + str ( Iii1I )
 if 33 - 33: I1 % I1 % O0 / I1IiiI . i1IIi
 if 91 - 91: o0oOo0Ooo0O * I1 - II111iiii . I1IiiI - Oo0Ooo + o0oOo0Ooo0O
 IIi1I11I1II ( 'Today' + ' - ' + str ( iiiii1I1III1 ) , i1oO00O , 61 , Iii1ii1II11i , iIiiiI , '' )
 IIi1I11I1II ( 'Tomorrow' + ' - ' + str ( O0o0O ) , ooOo000OoO0o , 61 , Iii1ii1II11i , iIiiiI , '' )
 IIi1I11I1II ( str ( ooOOooo0ooo00 ) , oo0oo0O0 , 61 , Iii1ii1II11i , iIiiiI , '' )
 IIi1I11I1II ( str ( Ii1IIIII ) , IIiI1iIIiI1I1i , 61 , Iii1ii1II11i , iIiiiI , '' )
 IIi1I11I1II ( str ( O0OOO0O ) , oOoOOOOoOO0o , 61 , Iii1ii1II11i , iIiiiI , '' )
 if 56 - 56: o0oOOo0O0Ooo / iII111ii * I1IiiI . o0oOOo0O0Ooo
def iiO0o0O0oo0o ( name , url , iconimage ) :
 if 100 - 100: iII111ii . i111IiI - iIii1I11I1II1 . i11iIiiIii / II111iiii
 OOoO00 = IiI111111IIII ( url )
 O0iII = re . compile ( '<div class="scrolltable">(.+?)<div id="footerwrapper">' ) . findall ( OOoO00 )
 ooI1i = str ( O0iII )
 OO0OO0O = re . compile ( '<tr(.+?)</tr>' ) . findall ( ooI1i )
 for i1I1iI1iIi111i in OO0OO0O :
  try :
   Ii11 = re . compile ( '<a href="[^"]*">(.+?) Predictions</a>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   O0o0O00Oo0o0 ( '#############################################' , 'url' , 999 , Iii1ii1II11i , iIiiiI , '' )
   O0o0O00Oo0o0 ( '[COLOR red][B]' + Ii11 + '[/B][/COLOR]' , 'url' , 999 , Iii1ii1II11i , iIiiiI , '' )
   O0o0O00Oo0o0 ( '#############################################' , 'url' , 999 , Iii1ii1II11i , iIiiiI , '' )
  except : pass
  try :
   o0oo0O = re . compile ( 'title=".+?">(.+?)</a>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   OOO00O , OOoOO0oo0ooO = o0oo0O . split ( ' v ' )
   o0oO0OO00oo0o = re . compile ( '<div class="last5.+?">(.+?)</div>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   I1II1 = re . compile ( '<div class="last5.+?">(.+?)</div>' ) . findall ( i1I1iI1iIi111i ) [ 1 ]
   Oo000o = re . compile ( '<div class="last5.+?">(.+?)</div>' ) . findall ( i1I1iI1iIi111i ) [ 2 ]
   OO00oo = re . compile ( '<div class="last5.+?">(.+?)</div>' ) . findall ( i1I1iI1iIi111i ) [ 3 ]
   O0Oo0O0 = re . compile ( '<div class="last5.+?">(.+?)</div>' ) . findall ( i1I1iI1iIi111i ) [ 4 ]
   I1IiiIiii1 = re . compile ( '<div class="last5.+?">(.+?)</div>' ) . findall ( i1I1iI1iIi111i ) [ 5 ]
   i11i = re . compile ( '<div class="last5.+?">(.+?)</div>' ) . findall ( i1I1iI1iIi111i ) [ 6 ]
   oo0OoOO0o0o = re . compile ( '<div class="last5.+?">(.+?)</div>' ) . findall ( i1I1iI1iIi111i ) [ 7 ]
   OO0OOO00 = re . compile ( '<div class="last5.+?">(.+?)</div>' ) . findall ( i1I1iI1iIi111i ) [ 8 ]
   ooOOo0o = re . compile ( '<div class="last5.+?">(.+?)</div>' ) . findall ( i1I1iI1iIi111i ) [ 9 ]
   if 50 - 50: II111iiii - oOo0Oo + iIii1I11I1II1 + iIii1I11I1II1
   if o0oO0OO00oo0o == "W" :
    o0oO0OO00oo0o = '[COLOR lime]W[/COLOR]'
   elif o0oO0OO00oo0o == "D" :
    o0oO0OO00oo0o = '[COLOR yellow]D[/COLOR]'
   else : o0oO0OO00oo0o = '[COLOR red]L[/COLOR]'
   if 91 - 91: II111iiii - O0 . iIii1I11I1II1 . O0 + I1ii11iIi11i - II111iiii
   if I1II1 == "W" :
    I1II1 = '[COLOR lime]W[/COLOR]'
   elif I1II1 == "D" :
    I1II1 = '[COLOR yellow]D[/COLOR]'
   else : I1II1 = '[COLOR red]L[/COLOR]'
   if 26 - 26: o0oOOo0O0Ooo
   if Oo000o == "W" :
    Oo000o = '[COLOR lime]W[/COLOR]'
   elif Oo000o == "D" :
    Oo000o = '[COLOR yellow]D[/COLOR]'
   else : Oo000o = '[COLOR red]L[/COLOR]'
   if 12 - 12: OoooooooOO / O0 + II111iiii * I1ii11iIi11i
   if OO00oo == "W" :
    OO00oo = '[COLOR lime]W[/COLOR]'
   elif OO00oo == "D" :
    OO00oo = '[COLOR yellow]D[/COLOR]'
   else : OO00oo = '[COLOR red]L[/COLOR]'
   if 46 - 46: II111iiii - iII111ii * OoooooooOO / O0o % iII111ii
   if O0Oo0O0 == "W" :
    O0Oo0O0 = '[COLOR lime]W[/COLOR]'
   elif O0Oo0O0 == "D" :
    O0Oo0O0 = '[COLOR yellow]D[/COLOR]'
   else : O0Oo0O0 = '[COLOR red]L[/COLOR]'
   if 11 - 11: iIii1I11I1II1 . OoOoOO00 / iII111ii % o0oOo0Ooo0O
   if I1IiiIiii1 == "W" :
    I1IiiIiii1 = '[COLOR lime]W[/COLOR]'
   elif I1IiiIiii1 == "D" :
    I1IiiIiii1 = '[COLOR yellow]D[/COLOR]'
   else : I1IiiIiii1 = '[COLOR red]L[/COLOR]'
   if 61 - 61: o0oOo0Ooo0O - i1iIIII + i1iIIII
   if i11i == "W" :
    i11i = '[COLOR lime]W[/COLOR]'
   elif i11i == "D" :
    i11i = '[COLOR yellow]D[/COLOR]'
   else : i11i = '[COLOR red]L[/COLOR]'
   if 40 - 40: i11iIiiIii . iIii1I11I1II1
   if oo0OoOO0o0o == "W" :
    oo0OoOO0o0o = '[COLOR lime]W[/COLOR]'
   elif oo0OoOO0o0o == "D" :
    oo0OoOO0o0o = '[COLOR yellow]D[/COLOR]'
   else : oo0OoOO0o0o = '[COLOR red]L[/COLOR]'
   if 2 - 2: i1IIi * O0o - O0o + OoooooooOO % OoOoOO00 / OoOoOO00
   if OO0OOO00 == "W" :
    OO0OOO00 = '[COLOR lime]W[/COLOR]'
   elif OO0OOO00 == "D" :
    OO0OOO00 = '[COLOR yellow]D[/COLOR]'
   else : OO0OOO00 = '[COLOR red]L[/COLOR]'
   if 3 - 3: OoooooooOO
   if ooOOo0o == "W" :
    ooOOo0o = '[COLOR lime]W[/COLOR]'
   elif ooOOo0o == "D" :
    ooOOo0o = '[COLOR yellow]D[/COLOR]'
   else : ooOOo0o = '[COLOR red]L[/COLOR]'
   if 71 - 71: iII111ii + i1IIi - iIIIiI11 - i11iIiiIii . I1 - o0oOo0Ooo0O
   OOO00O = Ii1Ii1I ( OOO00O )
   OOoOO0oo0ooO = Ii1Ii1I ( OOoOO0oo0ooO )
   O0o0O00Oo0o0 ( '[COLOR mediumpurple][B]' + OOO00O + ' Form Guide[/B][/COLOR]' , 'url' , 999 , Iii1ii1II11i , iIiiiI , '' )
   O0o0O00Oo0o0 ( '[B]' + o0oO0OO00oo0o + '  ' + I1II1 + '  ' + Oo000o + '  ' + OO00oo + '  ' + O0Oo0O0 + '[/B]' , 'url' , 999 , Iii1ii1II11i , iIiiiI , '' )
   O0o0O00Oo0o0 ( '[COLOR mediumpurple][B]' + OOoOO0oo0ooO + ' Form Guide[/B][/COLOR]' , 'url' , 999 , Iii1ii1II11i , iIiiiI , '' )
   O0o0O00Oo0o0 ( '[B]' + I1IiiIiii1 + '  ' + i11i + '  ' + oo0OoOO0o0o + '  ' + OO0OOO00 + '  ' + ooOOo0o + '[/B]' , 'url' , 999 , Iii1ii1II11i , iIiiiI , '' )
  except : pass
  if 85 - 85: I1ii11iIi11i - OoOoOO00 / I1ii11iIi11i + i1iIIII - iIIIiI11
def IIii1III ( name , url , iconimage ) :
 if 94 - 94: i11iIiiIii % OoooooooOO / I1IiiI
 III1iii1i1II = datetime . datetime . now ( )
 IIIII1iii = III1iii1i1II . day
 if 24 - 24: I1IiiI * O0o
 iiiiI1IiI1I1 = IIIII1iii
 if 85 - 85: II111iiii . o0oOo0Ooo0O % i1iIIII % I1
 O0o00oO0oOO = datetime . date . today ( ) + datetime . timedelta ( days = 0 )
 iiiii1I1III1 = datetime . datetime . strftime ( O0o00oO0oOO , '%A - %d %B %Y' )
 i1oO00O = 'http://www.predictz.com/predictions/'
 if 80 - 80: O0o * I1 / iIii1I11I1II1 % O0o / iIii1I11I1II1
 iii = datetime . date . today ( ) + datetime . timedelta ( days = 1 )
 O0o0O = datetime . datetime . strftime ( iii , '%A - %d %B %Y' )
 ii111 = datetime . datetime . strftime ( iii , '%d' )
 ooOo000OoO0o = 'http://www.predictz.com/predictions/tomorrow/'
 if 42 - 42: i1IIi / i11iIiiIii . Oo0Ooo * iIIIiI11 . i11iIiiIii * O0
 ii1IoO0O = datetime . date . today ( ) + datetime . timedelta ( days = 2 )
 ooOOooo0ooo00 = datetime . datetime . strftime ( ii1IoO0O , '%A - %d %B %Y' )
 oooOo = datetime . datetime . strftime ( ii1IoO0O , '%y%m%d' )
 oo0oo0O0 = 'http://www.predictz.com/predictions/20' + str ( oooOo )
 if 44 - 44: i1IIi . I1IiiI / i11iIiiIii + iII111ii
 II1i11 = datetime . date . today ( ) + datetime . timedelta ( days = 3 )
 Ii1IIIII = datetime . datetime . strftime ( II1i11 , '%A - %d %B %Y' )
 iiiIIiiii11 = datetime . datetime . strftime ( II1i11 , '%y%m%d' )
 IIiI1iIIiI1I1i = 'http://www.predictz.com/predictions/20' + str ( iiiIIiiii11 )
 if 27 - 27: i1iIIII
 o0O = datetime . date . today ( ) + datetime . timedelta ( days = 4 )
 O0OOO0O = datetime . datetime . strftime ( o0O , '%A - %d %B %Y' )
 Iii1I = datetime . datetime . strftime ( o0O , '%y%m%d' )
 oOoOOOOoOO0o = 'http://www.predictz.com/predictions/20' + str ( Iii1I )
 if 52 - 52: oOo0Oo % OoOoOO00 + iIii1I11I1II1 * O0o . i111IiI
 if 95 - 95: iIii1I11I1II1 . iII111ii - OoooooooOO * OoO0O00 / o0oOOo0O0Ooo
 IIi1I11I1II ( 'Today' + ' - ' + str ( iiiii1I1III1 ) , i1oO00O , 71 , Iii1ii1II11i , iIiiiI , '' )
 IIi1I11I1II ( 'Tomorrow' + ' - ' + str ( O0o0O ) , ooOo000OoO0o , 71 , Iii1ii1II11i , iIiiiI , '' )
 IIi1I11I1II ( str ( ooOOooo0ooo00 ) , oo0oo0O0 , 71 , Iii1ii1II11i , iIiiiI , '' )
 IIi1I11I1II ( str ( Ii1IIIII ) , IIiI1iIIiI1I1i , 71 , Iii1ii1II11i , iIiiiI , '' )
 IIi1I11I1II ( str ( O0OOO0O ) , oOoOOOOoOO0o , 71 , Iii1ii1II11i , iIiiiI , '' )
 if 74 - 74: O0o
def iII1i1IIiI1I ( name , url , iconimage ) :
 if 67 - 67: i111IiI
 OOoO00 = IiI111111IIII ( url )
 O0iII = re . compile ( '<div class="scrolltable">(.+?)<div id="footerwrapper">' ) . findall ( OOoO00 )
 ooI1i = str ( O0iII )
 OO0OO0O = re . compile ( '<tr(.+?)</tr>' ) . findall ( ooI1i )
 for i1I1iI1iIi111i in OO0OO0O :
  try :
   Ii11 = re . compile ( '<a href="[^"]*">(.+?) Predictions</a>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   O0o0O00Oo0o0 ( '#############################################' , 'url' , 999 , Iii1ii1II11i , iIiiiI , '' )
   O0o0O00Oo0o0 ( '[COLOR red][B]' + Ii11 + '[/B][/COLOR]' , 'url' , 999 , Iii1ii1II11i , iIiiiI , '' )
   O0o0O00Oo0o0 ( '#############################################' , 'url' , 999 , Iii1ii1II11i , iIiiiI , '' )
  except : pass
  try :
   o0oo0O = re . compile ( 'title=".+?">(.+?)</a>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   OOO00O , OOoOO0oo0ooO = o0oo0O . split ( ' v ' )
   if 43 - 43: OoO0O00 % OoO0O00
   Ii1i1iI = re . compile ( '<div class="score">(.+?)</div>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   I1I1iO0O0oo = re . compile ( 'title=".+?" rel="external nofollow">(.+?)</a>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   o00OOo000O = re . compile ( 'title=".+?" rel="external nofollow">(.+?)</a>' ) . findall ( i1I1iI1iIi111i ) [ 1 ]
   I1111III11 = re . compile ( 'title=".+?" rel="external nofollow">(.+?)</a>' ) . findall ( i1I1iI1iIi111i ) [ 2 ]
   o0oO0OO00oo0o = re . compile ( '<div class="last5.+?">(.+?)</div>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
   I1II1 = re . compile ( '<div class="last5.+?">(.+?)</div>' ) . findall ( i1I1iI1iIi111i ) [ 1 ]
   Oo000o = re . compile ( '<div class="last5.+?">(.+?)</div>' ) . findall ( i1I1iI1iIi111i ) [ 2 ]
   OO00oo = re . compile ( '<div class="last5.+?">(.+?)</div>' ) . findall ( i1I1iI1iIi111i ) [ 3 ]
   O0Oo0O0 = re . compile ( '<div class="last5.+?">(.+?)</div>' ) . findall ( i1I1iI1iIi111i ) [ 4 ]
   I1IiiIiii1 = re . compile ( '<div class="last5.+?">(.+?)</div>' ) . findall ( i1I1iI1iIi111i ) [ 5 ]
   i11i = re . compile ( '<div class="last5.+?">(.+?)</div>' ) . findall ( i1I1iI1iIi111i ) [ 6 ]
   oo0OoOO0o0o = re . compile ( '<div class="last5.+?">(.+?)</div>' ) . findall ( i1I1iI1iIi111i ) [ 7 ]
   OO0OOO00 = re . compile ( '<div class="last5.+?">(.+?)</div>' ) . findall ( i1I1iI1iIi111i ) [ 8 ]
   ooOOo0o = re . compile ( '<div class="last5.+?">(.+?)</div>' ) . findall ( i1I1iI1iIi111i ) [ 9 ]
   if 46 - 46: Oo0Ooo % iIii1I11I1II1 . iIIIiI11 . O0 * o0oOo0Ooo0O / OoooooooOO
   if o0oO0OO00oo0o == "W" :
    o0oO0OO00oo0o = '[COLOR lime]W[/COLOR]'
   elif o0oO0OO00oo0o == "D" :
    o0oO0OO00oo0o = '[COLOR yellow]D[/COLOR]'
   else : o0oO0OO00oo0o = '[COLOR red]L[/COLOR]'
   if 7 - 7: O0o - O0 * I1 - o0oOOo0O0Ooo - II111iiii
   if I1II1 == "W" :
    I1II1 = '[COLOR lime]W[/COLOR]'
   elif I1II1 == "D" :
    I1II1 = '[COLOR yellow]D[/COLOR]'
   else : I1II1 = '[COLOR red]L[/COLOR]'
   if 41 - 41: I1IiiI - oOo0Oo % II111iiii . oOo0Oo - I1
   if Oo000o == "W" :
    Oo000o = '[COLOR lime]W[/COLOR]'
   elif Oo000o == "D" :
    Oo000o = '[COLOR yellow]D[/COLOR]'
   else : Oo000o = '[COLOR red]L[/COLOR]'
   if 45 - 45: i111IiI - i1iIIII
   if OO00oo == "W" :
    OO00oo = '[COLOR lime]W[/COLOR]'
   elif OO00oo == "D" :
    OO00oo = '[COLOR yellow]D[/COLOR]'
   else : OO00oo = '[COLOR red]L[/COLOR]'
   if 70 - 70: OoO0O00 % I1IiiI / I1IiiI . I1 % o0oOo0Ooo0O . II111iiii
   if O0Oo0O0 == "W" :
    O0Oo0O0 = '[COLOR lime]W[/COLOR]'
   elif O0Oo0O0 == "D" :
    O0Oo0O0 = '[COLOR yellow]D[/COLOR]'
   else : O0Oo0O0 = '[COLOR red]L[/COLOR]'
   if 10 - 10: i111IiI - i11iIiiIii . I1ii11iIi11i % i1IIi
   if I1IiiIiii1 == "W" :
    I1IiiIiii1 = '[COLOR lime]W[/COLOR]'
   elif I1IiiIiii1 == "D" :
    I1IiiIiii1 = '[COLOR yellow]D[/COLOR]'
   else : I1IiiIiii1 = '[COLOR red]L[/COLOR]'
   if 78 - 78: iIii1I11I1II1 * Oo0Ooo . Oo0Ooo - i1iIIII . iIii1I11I1II1
   if i11i == "W" :
    i11i = '[COLOR lime]W[/COLOR]'
   elif i11i == "D" :
    i11i = '[COLOR yellow]D[/COLOR]'
   else : i11i = '[COLOR red]L[/COLOR]'
   if 30 - 30: o0oOo0Ooo0O + o0oOo0Ooo0O % iII111ii - o0oOOo0O0Ooo - I1ii11iIi11i
   if oo0OoOO0o0o == "W" :
    oo0OoOO0o0o = '[COLOR lime]W[/COLOR]'
   elif oo0OoOO0o0o == "D" :
    oo0OoOO0o0o = '[COLOR yellow]D[/COLOR]'
   else : oo0OoOO0o0o = '[COLOR red]L[/COLOR]'
   if 36 - 36: I1 % i1iIIII
   if OO0OOO00 == "W" :
    OO0OOO00 = '[COLOR lime]W[/COLOR]'
   elif OO0OOO00 == "D" :
    OO0OOO00 = '[COLOR yellow]D[/COLOR]'
   else : OO0OOO00 = '[COLOR red]L[/COLOR]'
   if 72 - 72: I1IiiI / iIIIiI11 - O0 + I1
   if ooOOo0o == "W" :
    ooOOo0o = '[COLOR lime]W[/COLOR]'
   elif ooOOo0o == "D" :
    ooOOo0o = '[COLOR yellow]D[/COLOR]'
   else : ooOOo0o = '[COLOR red]L[/COLOR]'
   if 83 - 83: O0
   OOO00O = Ii1Ii1I ( OOO00O )
   OOoOO0oo0ooO = Ii1Ii1I ( OOoOO0oo0ooO )
   o0oo0O = Ii1Ii1I ( o0oo0O )
   Ii1i1iI = Ii1Ii1I ( Ii1i1iI )
   O0o0O00Oo0o0 ( '[COLOR blue][B]' + o0oo0O + '[/B][/COLOR]' , 'url' , 999 , Iii1ii1II11i , iIiiiI , '' )
   O0o0O00Oo0o0 ( '[COLOR orange]Prediction - [/COLOR][COLOR dodgerblue][B]' + Ii1i1iI + ' [/B][/COLOR]' , 'url' , 999 , Iii1ii1II11i , iIiiiI , '' )
   O0o0O00Oo0o0 ( '[COLOR orange]' + OOO00O + ' Form: - [/COLOR][B]' + o0oO0OO00oo0o + '  ' + I1II1 + '  ' + Oo000o + '  ' + OO00oo + '  ' + O0Oo0O0 + '[/B]' , 'url' , 999 , Iii1ii1II11i , iIiiiI , '' )
   O0o0O00Oo0o0 ( '[COLOR orange]' + OOoOO0oo0ooO + ' Form - [/COLOR][B]' + I1IiiIiii1 + '  ' + i11i + '  ' + oo0OoOO0o0o + '  ' + OO0OOO00 + '  ' + ooOOo0o + '[/B]' , 'url' , 999 , Iii1ii1II11i , iIiiiI , '' )
   O0o0O00Oo0o0 ( '[COLOR orange]' + OOO00O + ' Win[/COLOR][COLOR dodgerblue][B] (' + I1I1iO0O0oo + ')[/B][/COLOR]' , 'url' , 999 , Iii1ii1II11i , iIiiiI , '' )
   O0o0O00Oo0o0 ( '[COLOR orange]Draw[/COLOR][COLOR dodgerblue][B] (' + o00OOo000O + ')[/B][/COLOR]' , 'url' , 999 , Iii1ii1II11i , iIiiiI , '' )
   O0o0O00Oo0o0 ( '[COLOR orange]' + OOoOO0oo0ooO + ' Win[/COLOR][COLOR dodgerblue][B] (' + I1111III11 + ')[/B][/COLOR]' , 'url' , 999 , Iii1ii1II11i , iIiiiI , '' )
   O0o0O00Oo0o0 ( '#############################################' , 'url' , 999 , Iii1ii1II11i , iIiiiI , '' )
   if 89 - 89: Oo0Ooo + I1ii11iIi11i - o0oOOo0O0Ooo
  except : pass
  if 40 - 40: OoO0O00 + OoO0O00
def o0oo0o00ooO00 ( name , url , iconimage ) :
 if 37 - 37: OoO0O00 - I1ii11iIi11i . OoooooooOO . o0oOo0Ooo0O + OoOoOO00 / i111IiI
 I1oOoO0OOO00O = [ ]
 OOOOO0o0OOo = [ ]
 iiIi1i = [ ]
 I11I11I11IiIi = [ ]
 OO = [ ]
 ii11I = [ ]
 if 19 - 19: iIii1I11I1II1 * OoooooooOO * i11iIiiIii
 OOoO00 = IiI111111IIII ( 'http://www.livescores.com' )
 O0iII = re . compile ( '<div class="cal">(.+?)<div id="fb-root">' ) . findall ( OOoO00 )
 ooI1i = str ( O0iII )
 OO0OO0O = re . compile ( '<div class="min(.+?)data-esd="' ) . findall ( ooI1i )
 for i1I1iI1iIi111i in OO0OO0O :
  o0O0OOo0oO = re . compile ( '<div class="ply tright name">(.+?)</div>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
  Iiiii = re . compile ( '<div class="ply name">(.+?)<' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
  try :
   Ii1i1iI = re . compile ( 'class="scorelink">(.+?)</a>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
  except :
   Ii1i1iI = re . compile ( '<div class="sco">(.+?)</div>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
  try :
   time = re . compile ( '"><img src=".+?" alt="live"/>(.+?)</div>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
  except : time = re . compile ( '">(.+?)</div>' ) . findall ( i1I1iI1iIi111i ) [ 0 ]
  time = time . replace ( '&#x27;' , ' Minute' )
  if 15 - 15: I1IiiI . OoO0O00
  if "minute" in time . lower ( ) :
   OO . append ( '3' )
  elif "ht" in time . lower ( ) :
   OO . append ( '3' )
  elif "ft" in time . lower ( ) :
   OO . append ( '2' )
  else : OO . append ( '1' )
  if 17 - 17: i11iIiiIii / Oo0Ooo . OoO0O00 / I1IiiI
  I1oOoO0OOO00O . append ( o0O0OOo0oO )
  OOOOO0o0OOo . append ( Iiiii )
  iiIi1i . append ( Ii1i1iI )
  I11I11I11IiIi . append ( time )
  ii11I = list ( zip ( OO , I1oOoO0OOO00O , OOOOO0o0OOo , iiIi1i , I11I11I11IiIi ) )
  if 38 - 38: i1IIi . I1ii11iIi11i % i111IiI + iIii1I11I1II1 + O0
 O0o0O00Oo0o0 ( '[COLOR dodgerblue][B]The scores will update every 10 seconds.[/B][/COLOR]' , 'url' , 998 , Iii1ii1II11i , iIiiiI , '' )
 O0o0O00Oo0o0 ( '[COLOR darkgray]######################################[/COLOR]' , 'url' , 999 , Iii1ii1II11i , iIiiiI , '' )
 if 47 - 47: OoO0O00 + iII111ii / II111iiii
 i1iIiIIIII = sorted ( ii11I , key = lambda oOO00oOO : int ( oOO00oOO [ 0 ] ) , reverse = True )
 OO0o = 0
 ii1I11II1 = 0
 i1i1i1I = 0
 for OOOOOo , OOooO , i1i1Ii1Ii , oOo0OoO , O000O0 in i1iIiIIIII :
  if OOOOOo == "3" :
   if OO0o == 0 :
    O0o0O00Oo0o0 ( '[COLOR white][B]Live Now[/B][/COLOR]' , 'url' , 999 , Iii1ii1II11i , iIiiiI , '' )
    OO0o = 1
  elif OOOOOo == "2" :
   if ii1I11II1 == 0 :
    O0o0O00Oo0o0 ( '[COLOR white][B]Finished[/B][/COLOR]' , 'url' , 999 , Iii1ii1II11i , iIiiiI , '' )
    ii1I11II1 = 1
  elif OOOOOo == "1" :
   if i1i1i1I == 0 :
    O0o0O00Oo0o0 ( '[COLOR white][B]Later Today[/B][/COLOR]' , 'url' , 999 , Iii1ii1II11i , iIiiiI , '' )
    i1i1i1I = 1
  O000O0 = O000O0 . replace ( "'" , "" ) . replace ( ' Minute' , "'" )
  oOo0OoO = oOo0OoO . replace ( " " , "" )
  O0o0O00Oo0o0 ( '[COLOR red][B]' + O000O0 + "[/B][/COLOR]- [COLOR blue]" + oOo0OoO + "[/COLOR] | [COLOR white]" + OOooO + "vs" + i1i1Ii1Ii + '[/COLOR]' , 'url' , 999 , Iii1ii1II11i , iIiiiI , '' )
  if 65 - 65: i11iIiiIii
def OO00Oo00oO ( text ) :
 if 94 - 94: i11iIiiIii / oOo0Oo / Oo0Ooo
 text = str ( text )
 text = text . replace ( '\\r' , '' )
 text = text . replace ( '\\n' , '' )
 text = text . replace ( '\\t' , '' )
 text = text . replace ( '\\' , '' )
 text = text . replace ( '<br />' , '\n' )
 text = text . replace ( '<hr />' , '' )
 text = text . replace ( '&#039;' , "'" )
 text = text . replace ( '&quot;' , '"' )
 text = text . replace ( '&rsquo;' , "'" )
 text = text . replace ( '&amp;' , "&" )
 text = text . replace ( '&nbsp;' , "" )
 if 9 - 9: I1 / OoOoOO00 / II111iiii + oOo0Oo
 return text
 if 71 - 71: iIIIiI11 / Oo0Ooo
def Ii1Ii1I ( text ) :
 if 87 - 87: I1ii11iIi11i + I1ii11iIi11i - I1ii11iIi11i % O0
 text = str ( text )
 text = text . replace ( '\\r' , '' )
 text = text . replace ( '\\n' , '' )
 text = text . replace ( '\\t' , '' )
 text = text . replace ( '\\' , '' )
 text = text . replace ( '<br />' , ' ' )
 text = text . replace ( '<hr />' , '' )
 text = text . replace ( '&#039;' , "'" )
 text = text . replace ( '&quot;' , '"' )
 text = text . replace ( '&rsquo;' , "'" )
 text = text . replace ( '&amp;' , "&" )
 text = text . replace ( '&nbsp;' , "" )
 if 13 - 13: II111iiii
 return text
 if 57 - 57: i111IiI - OoooooooOO
def OOoOO0O0o0 ( text ) :
 if 44 - 44: i1iIIII / Oo0Ooo + iII111ii % II111iiii / OoO0O00 + i11iIiiIii
 text = str ( text )
 text = text . replace ( 'ATR' , 'at the races' )
 text = text . replace ( 'British Eurosport' , 'eurosport' )
 text = text . replace ( 'Sky Sports' , 'sky sports' )
 text = text . replace ( 'sky sport ' , 'sky sports ' )
 text = text . replace ( 'skysports ' , 'sky sports ' )
 text = text . replace ( 'skysport ' , 'sky sports ' )
 text = text . replace ( 'RP Greyhound TV' , 'greyhound' )
 if 20 - 20: I1ii11iIi11i
 return text
 if 3 - 3: OoO0O00 * i1IIi . I1IiiI . O0 - OoOoOO00
def III ( name , url , iconimage ) :
 if 81 - 81: I1IiiI - iIii1I11I1II1 / I1IiiI / O0
 if not "SportsDevil" in url :
  OOoO00 = 'plugin://plugin.video.SportsDevil/?mode=1&amp;item=catcher%3dstreams%26title=Stream%26url=' + url
  url = OOoO00 + '%26referer=' + url
 O0OOO0OOooo00 = xbmcgui . ListItem ( name , iconImage = Iii1ii1II11i , thumbnailImage = Iii1ii1II11i )
 O0OOO0OOooo00 . setPath ( url )
 xbmc . Player ( ) . play ( url , O0OOO0OOooo00 , False )
 if 34 - 34: i111IiI * i111IiI - I1ii11iIi11i - O0 . i11iIiiIii
def Oo00oo0000OO ( name , url , iconimage ) :
 if 32 - 32: iIii1I11I1II1 . OoO0O00 * O0o / i1iIIII . II111iiii - Oo0Ooo
 iiIIIII1i1iI . create ( o0OOO , "[COLOR blue]Opening link...[/COLOR]" , '[COLOR yellow]Please wait...[/COLOR]' , '' )
 iiIIIII1i1iI . update ( 0 )
 if 10 - 10: I1ii11iIi11i / i11iIiiIii - i111IiI + O0o * I1IiiI
 if "pl_type=user" in url :
  II1 = IiI111111IIII ( url )
  url = re . compile ( '<meta property="og:video:iframe" content="(.+?)">' ) . findall ( II1 ) [ 0 ]
  if 94 - 94: I1IiiI + iIii1I11I1II1 / O0 - OoooooooOO % I1ii11iIi11i
 if not "plugin" in url :
  try :
   if not 'http' in url : url = 'http://' + url
  except :
   o0oO0 . ok ( o0OOO , "[COLOR blue]Sorry there was a problem playing this link.[/COLOR]" , "[COLOR blue]Sports has plenty of content to choose from :-D[/COLOR]" )
   quit ( )
   if 64 - 64: I1 + OoO0O00
 name = urllib . quote_plus ( name )
 if not 'f4m' in url :
  if '.m3u8' in url :
   url = 'plugin://plugin.video.f4mTester/?streamtype=HLSRETRY&amp;name=' + name + '&amp;url=' + url + '&amp;iconImage=' + Iii1ii1II11i
  elif '.ts' in url :
   url = 'plugin://plugin.video.f4mTester/?streamtype=TSDOWNLOADER&amp;name=' + name + '&amp;url=' + url + '&amp;iconImage=' + Iii1ii1II11i
   if 25 - 25: I1IiiI . o0oOo0Ooo0O + I1IiiI % i111IiI * iIii1I11I1II1
   if 31 - 31: i11iIiiIii + i1iIIII - O0
 import urlresolver
 if urlresolver . HostedMediaFile ( url ) . valid_url ( ) :
  OOoo00O000Oo = urlresolver . HostedMediaFile ( url ) . resolve ( )
  O0OOO0OOooo00 = xbmcgui . ListItem ( name , iconImage = Iii1ii1II11i , thumbnailImage = Iii1ii1II11i )
  O0OOO0OOooo00 . setPath ( OOoo00O000Oo )
  iiIIIII1i1iI . close ( )
  xbmc . Player ( ) . play ( OOoo00O000Oo , O0OOO0OOooo00 , False )
  quit ( )
 else :
  OOoo00O000Oo = url
  O0OOO0OOooo00 = xbmcgui . ListItem ( name , iconImage = Iii1ii1II11i , thumbnailImage = Iii1ii1II11i )
  O0OOO0OOooo00 . setPath ( OOoo00O000Oo )
  iiIIIII1i1iI . close ( )
  xbmc . Player ( ) . play ( OOoo00O000Oo , O0OOO0OOooo00 , False )
  quit ( )
  if 58 - 58: OoO0O00 - OoOoOO00 . i11iIiiIii % i11iIiiIii / i1IIi / O0o
def Ii1ii1IiiiiiI ( ) :
 ooIIIii11i1I = o0oO0 . yesno ( "[COLOR red]Select an option[/COLOR]" , "Would you like to Clear Sports Cache?" , yeslabel = 'Yes' , nolabel = 'No' )
 if not ooIIIii11i1I : return
 from resources . lib . modules import cache
 cache . clear ( )
 o0oO0 . ok ( o0OOO , "Sports Cache Cleared" )
 if 79 - 79: oOo0Oo
def iI11111ii11 ( header = None , announce = None ) :
 class iI1iiI ( ) :
  WINDOW = 10147
  CONTROL_LABEL = 1
  CONTROL_TEXTBOX = 5
  def __init__ ( self , * args , ** kwargs ) :
   xbmc . executebuiltin ( "ActivateWindow(%d)" % ( self . WINDOW , ) )
   self . win = xbmcgui . Window ( self . WINDOW )
   xbmc . sleep ( 500 )
   self . setControls ( )
  def setControls ( self ) :
   if header == None : self . win . getControl ( self . CONTROL_LABEL ) . setLabel ( sys . args ( 0 ) )
   else : self . win . getControl ( self . CONTROL_LABEL ) . setLabel ( header )
   self . win . getControl ( self . CONTROL_TEXTBOX ) . setText ( str ( announce ) )
   return
 announce = o0o0O ( announce )
 announce = announce . encode ( 'utf-8' )
 iI1iiI ( )
 while xbmc . getCondVisibility ( 'Window.IsVisible(10147)' ) :
  time . sleep ( .5 )
  if 19 - 19: I1IiiI % i111IiI . iII111ii * o0oOo0Ooo0O
def oooO00Oo ( url ) :
 if 89 - 89: OoOoOO00 . i1iIIII
 IIIIIiI11Ii = httplib2 . Http ( timeout = 1.0 )
 if 41 - 41: i11iIiiIii - i1IIi / Oo0Ooo * iII111ii / oOo0Oo - Oo0Ooo
 try :
  I1Ii1111iIi , oOOoOOO0oOoo = IIIIIiI11Ii . request ( url , method = "HEAD" )
  print ( "Response status: %d - %s" % ( I1Ii1111iIi . status , I1Ii1111iIi . reason ) )
  if 65 - 65: iIIIiI11 . O0o - i111IiI
  if I1Ii1111iIi . status == 200 :
   return url
  else : return "None"
  if 93 - 93: O0
 except :
  return "None"
  if 4 - 4: I1IiiI / I1IiiI
def ii1I ( ) :
 if 82 - 82: I1 / o0oOo0Ooo0O * I1 % i11iIiiIii * II111iiii
 OO0OoO0o00 = xbmc . getInfoLabel ( "System.BuildVersion" )
 ooOO0O0ooOooO = float ( OO0OoO0o00 [ : 4 ] )
 if ooOO0O0ooOooO >= 11.0 and ooOO0O0ooOooO <= 11.9 :
  oOOOo00O00oOo = 'Eden'
 elif ooOO0O0ooOooO >= 12.0 and ooOO0O0ooOooO <= 12.9 :
  oOOOo00O00oOo = 'Frodo'
 elif ooOO0O0ooOooO >= 13.0 and ooOO0O0ooOooO <= 13.9 :
  oOOOo00O00oOo = 'Gotham'
 elif ooOO0O0ooOooO >= 14.0 and ooOO0O0ooOooO <= 14.9 :
  oOOOo00O00oOo = 'Helix'
 elif ooOO0O0ooOooO >= 15.0 and ooOO0O0ooOooO <= 15.9 :
  oOOOo00O00oOo = 'Isengard'
 elif ooOO0O0ooOooO >= 16.0 and ooOO0O0ooOooO <= 16.9 :
  oOOOo00O00oOo = 'Jarvis'
 elif ooOO0O0ooOooO >= 17.0 and ooOO0O0ooOooO <= 17.9 :
  oOOOo00O00oOo = 'Krypton'
 else : oOOOo00O00oOo = "Decline"
 if 83 - 83: OoO0O00 + i1iIIII - o0oOOo0O0Ooo + iIii1I11I1II1 % Oo0Ooo
 return oOOOo00O00oOo
 if 23 - 23: o0oOOo0O0Ooo + i111IiI % OoOoOO00 % I1IiiI % OoooooooOO
def o0ooOo0OOOO0o ( ) :
 if 78 - 78: OoO0O00 / Oo0Ooo - iIii1I11I1II1 - i11iIiiIii * iIIIiI11
 OO0OoO0o00 = xbmc . getInfoLabel ( "System.BuildVersion" )
 ooOO0O0ooOooO = float ( OO0OoO0o00 [ : 4 ] )
 if ooOO0O0ooOooO >= 11.0 and ooOO0O0ooOooO <= 11.9 :
  oOOOo00O00oOo = 'Eden'
 elif ooOO0O0ooOooO >= 12.0 and ooOO0O0ooOooO <= 12.9 :
  oOOOo00O00oOo = 'Frodo'
 elif ooOO0O0ooOooO >= 13.0 and ooOO0O0ooOooO <= 13.9 :
  oOOOo00O00oOo = 'Gotham'
 elif ooOO0O0ooOooO >= 14.0 and ooOO0O0ooOooO <= 14.9 :
  oOOOo00O00oOo = 'Helix'
 elif ooOO0O0ooOooO >= 15.0 and ooOO0O0ooOooO <= 15.9 :
  oOOOo00O00oOo = 'Isengard'
 elif ooOO0O0ooOooO >= 16.0 and ooOO0O0ooOooO <= 16.9 :
  oOOOo00O00oOo = 'Jarvis'
 elif ooOO0O0ooOooO >= 17.0 and ooOO0O0ooOooO <= 17.9 :
  oOOOo00O00oOo = 'Krypton'
 else : oOOOo00O00oOo = "Decline"
 if 84 - 84: i1iIIII + i111IiI + o0oOOo0O0Ooo
 if oOOOo00O00oOo == "Jarvis" :
  xbmc . executebuiltin ( 'Container.SetViewMode(50)' )
 elif oOOOo00O00oOo == "Krypton" :
  xbmc . executebuiltin ( 'Container.SetViewMode(55)' )
 else : xbmc . executebuiltin ( 'Container.SetViewMode(50)' )
 if 33 - 33: i111IiI
def IiI111111IIII ( url , cookie = None ) :
 if 93 - 93: o0oOo0Ooo0O
 try :
  II11iIIii = urllib2 . Request ( url )
  if not "referer" in url . lower ( ) :
   II11iIIii . add_header ( 'Referer' , 'https://www.google.com/' )
  if "echocoder" in url :
   II11iIIii . add_header ( 'User-Agent' , base64 . b64decode ( b'VGhlV2l6YXJkSXNIZXJl' ) )
  elif not "user-agent" in url . lower ( ) :
   II11iIIii . add_header ( 'User-Agent' , 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36' )
  if cookie != None :
   II11iIIii . add_header ( 'Cookie' , 'cookiename=%s' % cookie )
  I1Ii1111iIi = urllib2 . urlopen ( II11iIIii , timeout = 15 )
  OOoO00 = I1Ii1111iIi . read ( )
  OOoO00 = OOoO00 . replace ( '\n' , '' ) . replace ( '\r' , '' ) . replace ( '<fanart></fanart>' , '<fanart>x</fanart>' ) . replace ( '<thumbnail></thumbnail>' , '<thumbnail>x</thumbnail>' ) . replace ( '<utube>' , '<link>https://www.youtube.com/watch?v=' ) . replace ( '</utube>' , '</link>' )
  I1Ii1111iIi . close ( )
  return OOoO00
 except Exception as Oo000ooOOO :
  if ( 'tls' in str ( Oo000ooOOO ) . lower ( ) ) or ( 'ssl' in str ( Oo000ooOOO ) . lower ( ) ) :
   kodi . notify ( msg = 'Error connecting to the URL due to a TLS/SSL issue.' , duration = 5000 , sound = True )
   quit ( )
  else :
   kodi . notify ( msg = 'URL Error. Please try again.' , duration = 5000 , sound = True )
   quit ( )
   if 57 - 57: O0 * I1ii11iIi11i . i11iIiiIii
def iiI1IiI ( url ) :
 if 69 - 69: O0 / II111iiii * i1IIi
 II11iIIii = urllib2 . Request ( url )
 II11iIIii . add_header ( 'User-Agent' , 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36' )
 I1Ii1111iIi = urllib2 . urlopen ( II11iIIii , timeout = 10 )
 OOoO00 = I1Ii1111iIi . read ( )
 OOoO00 = OOoO00 . replace ( '\n' , '' ) . replace ( '\t' , '' )
 I1Ii1111iIi . close ( )
 return OOoO00
 if 66 - 66: O0
def o0o0O ( url ) :
 if 52 - 52: OoO0O00 * OoooooooOO
 try :
  II11iIIii = urllib2 . Request ( url )
  II11iIIii . add_header ( 'User-Agent' , 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36' )
  I1Ii1111iIi = urllib2 . urlopen ( II11iIIii , timeout = 10 )
  OOoO00 = I1Ii1111iIi . read ( )
  I1Ii1111iIi . close ( )
  return OOoO00
 except Exception as Oo000ooOOO :
  if ( 'tls' in str ( Oo000ooOOO ) . lower ( ) ) or ( 'ssl' in str ( Oo000ooOOO ) . lower ( ) ) :
   kodi . notify ( msg = 'Error connecting to the URL due to a TLS/SSL issue.' , duration = 5000 , sound = True )
   quit ( )
  else :
   kodi . notify ( msg = 'URL Error. Please try again.' , duration = 5000 , sound = True )
   quit ( )
   if 12 - 12: O0 + iII111ii * i1IIi . OoO0O00
def oO0ooOoO ( str ) :
 try :
  import chardet
  str = str . decode ( chardet . detect ( str ) [ "encoding" ] ) . encode ( "utf-8" )
 except :
  try :
   str = str . encode ( "utf-8" )
  except :
   pass
 return str
 if 71 - 71: oOo0Oo - o0oOOo0O0Ooo - i1iIIII
class iiI ( HTMLParser ) :
 def __init__ ( self ) :
  self . reset ( )
  self . fed = [ ]
 def handle_data ( self , d ) :
  self . fed . append ( d )
 def get_data ( self ) :
  return '' . join ( self . fed )
  if 81 - 81: iII111ii * I1ii11iIi11i + II111iiii % iII111ii
def IiI1ii11I1 ( html ) :
 Oo0OO0000oooo = iiI ( )
 Oo0OO0000oooo . feed ( html )
 return Oo0OO0000oooo . get_data ( )
 if 19 - 19: oOo0Oo + iII111ii / O0o / II111iiii
def OoO0O0oo0o ( ) :
 iIi11I11 = [ ]
 i1ioO = sys . argv [ 2 ]
 if len ( i1ioO ) >= 2 :
  I1IIIiI1I1ii1 = sys . argv [ 2 ]
  I11iiI = I1IIIiI1I1ii1 . replace ( '?' , '' )
  if ( I1IIIiI1I1ii1 [ len ( I1IIIiI1I1ii1 ) - 1 ] == '/' ) :
   I1IIIiI1I1ii1 = I1IIIiI1I1ii1 [ 0 : len ( I1IIIiI1I1ii1 ) - 2 ]
  i1iIii1i111 = I11iiI . split ( '&' )
  iIi11I11 = { }
  for iIII1I111III in range ( len ( i1iIii1i111 ) ) :
   OOooo000OooO = { }
   OOooo000OooO = i1iIii1i111 [ iIII1I111III ] . split ( '=' )
   if ( len ( OOooo000OooO ) ) == 2 :
    iIi11I11 [ OOooo000OooO [ 0 ] ] = OOooo000OooO [ 1 ]
 return iIi11I11
 if 99 - 99: i1iIIII / iII111ii / i111IiI
def IIi1I11I1II ( name , url , mode , iconimage , fanart , description = '' , cm = None ) :
 if 84 - 84: OoO0O00 / iIii1I11I1II1
 if cm == None : cm = [ ]
 if not "http" in iconimage :
  iconimage = Iii1ii1II11i
 if not "http" in fanart :
  fanart = iIiiiI
 oooooo0OO = sys . argv [ 0 ] + "?url=" + urllib . quote_plus ( url ) + "&mode=" + str ( mode ) + "&name=" + urllib . quote_plus ( name ) + "&iconimage=" + urllib . quote_plus ( iconimage ) + "&fanart=" + urllib . quote_plus ( fanart )
 IiI1 = True
 O0OOO0OOooo00 = xbmcgui . ListItem ( name , iconImage = iconimage , thumbnailImage = iconimage )
 O0OOO0OOooo00 . setProperty ( "fanart_Image" , fanart )
 O0OOO0OOooo00 . setProperty ( "icon_Image" , iconimage )
 O0OOO0OOooo00 . addContextMenuItems ( items = cm , replaceItems = False )
 IiI1 = xbmcplugin . addDirectoryItem ( handle = int ( sys . argv [ 1 ] ) , url = oooooo0OO , listitem = O0OOO0OOooo00 , isFolder = True )
 return IiI1
 if 13 - 13: OoooooooOO + OoO0O00
def O0o0O00Oo0o0 ( name , url , mode , iconimage , fanart , description = '' ) :
 if 32 - 32: O0 + O0o % Oo0Ooo
 if not "http" in iconimage :
  iconimage = Iii1ii1II11i
 if not "http" in fanart :
  fanart = iIiiiI
 oooooo0OO = sys . argv [ 0 ] + "?url=" + urllib . quote_plus ( url ) + "&mode=" + str ( mode ) + "&name=" + urllib . quote_plus ( name ) + "&iconimage=" + urllib . quote_plus ( iconimage ) + "&fanart=" + urllib . quote_plus ( fanart )
 IiI1 = True
 O0OOO0OOooo00 = xbmcgui . ListItem ( name , iconImage = iconimage , thumbnailImage = iconimage )
 O0OOO0OOooo00 . setProperty ( "fanart_Image" , fanart )
 O0OOO0OOooo00 . setProperty ( "icon_Image" , iconimage )
 IiI1 = xbmcplugin . addDirectoryItem ( handle = int ( sys . argv [ 1 ] ) , url = oooooo0OO , listitem = O0OOO0OOooo00 , isFolder = False )
 return IiI1
 if 7 - 7: I1ii11iIi11i / o0oOo0Ooo0O
 if 11 - 11: iII111ii * o0oOo0Ooo0O / o0oOo0Ooo0O - i1iIIII
O0OoOoo00o ( )
if 68 - 68: I1IiiI % iII111ii - iII111ii / I1IiiI + I1ii11iIi11i - Oo0Ooo
I1IIIiI1I1ii1 = OoO0O0oo0o ( ) ; i111IiI1I = None ; I1I = None ; o0oO0o00O = None ; iiii1OooO0O0Ooo = None ; I1I1I = None ; OoOO000 = None
try : iiii1OooO0O0Ooo = urllib . unquote_plus ( I1IIIiI1I1ii1 [ "site" ] )
except : pass
try : i111IiI1I = urllib . unquote_plus ( I1IIIiI1I1ii1 [ "url" ] )
except : pass
try : I1I = urllib . unquote_plus ( I1IIIiI1I1ii1 [ "name" ] )
except : pass
try : o0oO0o00O = int ( I1IIIiI1I1ii1 [ "mode" ] )
except : pass
try : I1I1I = urllib . unquote_plus ( I1IIIiI1I1ii1 [ "iconimage" ] )
except : pass
try : OoOO000 = urllib . unquote_plus ( I1IIIiI1I1ii1 [ "fanart" ] )
except : pass
if 85 - 85: o0oOOo0O0Ooo / oOo0Oo
if o0oO0o00O == None or i111IiI1I == None or len ( i111IiI1I ) < 1 : o0O000oo ( )
elif o0oO0o00O == 1 : II11Iiii ( I1I , i111IiI1I )
elif o0oO0o00O == 2 : Oo00oo0000OO ( I1I , i111IiI1I , I1I1I )
elif o0oO0o00O == 3 : I1i1I ( I1I , i111IiI1I , I1I1I )
elif o0oO0o00O == 4 : III ( I1I , i111IiI1I , I1I1I )
elif o0oO0o00O == 7 : Oo0oOooOoOo ( I1I , i111IiI1I , I1I1I )
elif o0oO0o00O == 8 : I11III111i ( I1I , i111IiI1I , I1I1I )
elif o0oO0o00O == 10 : i1I1i1i ( I1I , i111IiI1I , I1I1I )
elif o0oO0o00O == 22 : iIiIii1ii ( I1I , i111IiI1I , I1I1I )
elif o0oO0o00O == 30 : i1iiI ( I1I , i111IiI1I , I1I1I )
elif o0oO0o00O == 40 : iIi11i ( I1I , i111IiI1I , I1I1I )
elif o0oO0o00O == 41 : OOOOO0 ( I1I , i111IiI1I , I1I1I )
elif o0oO0o00O == 50 : o0O00O ( I1I , i111IiI1I , I1I1I )
elif o0oO0o00O == 51 : o0oO00 ( I1I , i111IiI1I , I1I1I )
elif o0oO0o00O == 60 : OoOOoooO000 ( I1I , i111IiI1I , I1I1I )
elif o0oO0o00O == 61 : iiO0o0O0oo0o ( I1I , i111IiI1I , I1I1I )
elif o0oO0o00O == 70 : IIii1III ( I1I , i111IiI1I , I1I1I )
elif o0oO0o00O == 71 : iII1i1IIiI1I ( I1I , i111IiI1I , I1I1I )
elif o0oO0o00O == 80 : o0oo0o00ooO00 ( I1I , i111IiI1I , I1I1I )
elif o0oO0o00O == 90 : iIiI1iiiI1ii ( I1I , i111IiI1I , I1I1I )
elif o0oO0o00O == 91 : OoOoi1i ( I1I , i111IiI1I , I1I1I )
elif o0oO0o00O == 95 : Oo00OOOOoo0oo ( )
elif o0oO0o00O == 96 : ooOo0O ( I1I , i111IiI1I , I1I1I )
elif o0oO0o00O == 97 : Ii1I11I ( I1I , i111IiI1I , I1I1I )
elif o0oO0o00O == 205 : II1I11IIi ( )
elif o0oO0o00O == 206 : iIIi1I1ii ( I1I , i111IiI1I , I1I1I )
elif o0oO0o00O == 221 : II1II ( I1I , i111IiI1I , I1I1I )
elif o0oO0o00O == 222 : oOoO0o ( i111IiI1I )
elif o0oO0o00O == 298 : o0OoO000O ( i111IiI1I )
elif o0oO0o00O == 299 : I1i11IiI11i1 ( i111IiI1I )
elif o0oO0o00O == 300 : I11Ii11iI1 ( I1I , i111IiI1I , I1I1I )
elif o0oO0o00O == 301 : oo00OooO ( i111IiI1I )
elif o0oO0o00O == 302 : oOoOoo0 ( i111IiI1I )
elif o0oO0o00O == 306 : OO0o0o0oo0O ( I1I , i111IiI1I , I1I1I )
elif o0oO0o00O == 307 : soccerstreams . SCRAPE_SOCCERSTREAMS ( )
elif o0oO0o00O == 308 : soccerstreams . SCRAPE_SOCCERSTREAMS_GET_LINKS ( I1I , i111IiI1I , I1I1I )
elif o0oO0o00O == 309 : oo0ooOO ( I1I , i111IiI1I , I1I1I )
elif o0oO0o00O == 310 : Ii1II ( )
elif o0oO0o00O == 311 : oOo000 ( )
elif o0oO0o00O == 312 : o000O000 ( )
elif o0oO0o00O == 313 : II11iI111i1 ( )
elif o0oO0o00O == 314 : oOOoOo ( )
elif o0oO0o00O == 315 : O0Oo0o000oO ( i111IiI1I )
elif o0oO0o00O == 316 : Ii1ii111i1 ( I1I , i111IiI1I , I1I1I )
elif o0oO0o00O == 317 : Iiiiii111i1ii ( )
elif o0oO0o00O == 318 : oOOoo ( I1I , i111IiI1I , I1I1I )
elif o0oO0o00O == 319 : O0O0Ooo ( i111IiI1I )
elif o0oO0o00O == 320 : iiIIi ( )
elif o0oO0o00O == 321 : oO00O0 ( )
elif o0oO0o00O == 322 : iIIi ( )
elif o0oO0o00O == 323 : OO0ooo0oOO ( I1I , i111IiI1I )
elif o0oO0o00O == 995 : iI11111ii11 ( I1I , i111IiI1I )
elif o0oO0o00O == 996 : o0OOoo0OO0OOO ( i111IiI1I )
elif o0oO0o00O == 997 :
 xbmcaddon . Addon ( id = I1IiI ) . openSettings ( )
 xbmc . executebuiltin ( "Container.Refresh" )
elif o0oO0o00O == 998 : xbmc . executebuiltin ( "Container.Refresh" )
elif o0oO0o00O == 1234 : Ii1ii1IiiiiiI ( )
elif o0oO0o00O == 1235 : oO0OOoO0 ( )
elif o0oO0o00O == 1236 : I111IIIiIii ( )
if 67 - 67: I1 % O0o
if o0oO0o00O < 1 :
 xbmcplugin . endOfDirectory ( int ( sys . argv [ 1 ] ) , cacheToDisc = False )
else :
 xbmcplugin . endOfDirectory ( int ( sys . argv [ 1 ] ) , cacheToDisc = True )
if o0oO0o00O == 80 :
 xbmc . sleep ( 10000 )
 xbmc . executebuiltin ( 'Container.Refresh' ) # dd678faae9ac167bc83abf78e5cb2f3f0688d3a3
]')